<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunche.loan.mapper.FileInfoDOMapper">
  <resultMap id="BaseResultMap" type="com.yunche.loan.domain.entity.FileInfoDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="bank_repay_imp_record_id" jdbcType="BIGINT" property="bankRepayImpRecordId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yunche.loan.domain.entity.FileInfoDO">
    <result column="path" jdbcType="LONGVARCHAR" property="path" />
  </resultMap>
  <sql id="Base_Column_List">
    id, type, order_id, bank_repay_imp_record_id, remark
  </sql>
  <sql id="Blob_Column_List">
    path
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from file_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from file_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yunche.loan.domain.entity.FileInfoDO">
    insert into file_info (id, type, order_id, 
      bank_repay_imp_record_id, remark, path
      )
    values (#{id,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, #{orderId,jdbcType=BIGINT}, 
      #{bankRepayImpRecordId,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}, #{path,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yunche.loan.domain.entity.FileInfoDO">
    insert into file_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="bankRepayImpRecordId != null">
        bank_repay_imp_record_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="path != null">
        path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="bankRepayImpRecordId != null">
        #{bankRepayImpRecordId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunche.loan.domain.entity.FileInfoDO">
    update file_info
    <set>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="bankRepayImpRecordId != null">
        bank_repay_imp_record_id = #{bankRepayImpRecordId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yunche.loan.domain.entity.FileInfoDO">
    update file_info
    set type = #{type,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=BIGINT},
      bank_repay_imp_record_id = #{bankRepayImpRecordId,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      path = #{path,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunche.loan.domain.entity.FileInfoDO">
    update file_info
    set type = #{type,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=BIGINT},
      bank_repay_imp_record_id = #{bankRepayImpRecordId,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.yunche.loan.domain.entity.FileInfoDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="bank_repay_imp_record_id" jdbcType="BIGINT" property="bankRepayImpRecordId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yunche.loan.domain.entity.FileInfoDO">
    <result column="path" jdbcType="LONGVARCHAR" property="path" />
  </resultMap>
  <sql id="Base_Column_List">
    id, type, order_id, bank_repay_imp_record_id, remark
  </sql>
  <sql id="Blob_Column_List">
    path
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from file_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from file_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yunche.loan.domain.entity.FileInfoDO">
    insert into file_info (id, type, order_id, 
      bank_repay_imp_record_id, remark, path
      )
    values (#{id,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, #{orderId,jdbcType=BIGINT}, 
      #{bankRepayImpRecordId,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}, #{path,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yunche.loan.domain.entity.FileInfoDO">
    insert into file_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="bankRepayImpRecordId != null">
        bank_repay_imp_record_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="path != null">
        path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="bankRepayImpRecordId != null">
        #{bankRepayImpRecordId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunche.loan.domain.entity.FileInfoDO">
    update file_info
    <set>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="bankRepayImpRecordId != null">
        bank_repay_imp_record_id = #{bankRepayImpRecordId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yunche.loan.domain.entity.FileInfoDO">
    update file_info
    set type = #{type,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=BIGINT},
      bank_repay_imp_record_id = #{bankRepayImpRecordId,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      path = #{path,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunche.loan.domain.entity.FileInfoDO">
    update file_info
    set type = #{type,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=BIGINT},
      bank_repay_imp_record_id = #{bankRepayImpRecordId,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.yunche.loan.domain.entity.FileInfoDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="bank_repay_imp_record_id" jdbcType="BIGINT" property="bankRepayImpRecordId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yunche.loan.domain.entity.FileInfoDO">
    <result column="path" jdbcType="LONGVARCHAR" property="path" />
  </resultMap>
  <sql id="Base_Column_List">
    id, type, order_id, bank_repay_imp_record_id
  </sql>
  <sql id="Blob_Column_List">
    path
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from file_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from file_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yunche.loan.domain.entity.FileInfoDO">
    insert into file_info (id, type, order_id, 
      bank_repay_imp_record_id, path)
    values (#{id,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, #{orderId,jdbcType=BIGINT}, 
      #{bankRepayImpRecordId,jdbcType=BIGINT}, #{path,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yunche.loan.domain.entity.FileInfoDO">
    insert into file_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="bankRepayImpRecordId != null">
        bank_repay_imp_record_id,
      </if>
      <if test="path != null">
        path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="bankRepayImpRecordId != null">
        #{bankRepayImpRecordId,jdbcType=BIGINT},
      </if>
      <if test="path != null">
        #{path,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunche.loan.domain.entity.FileInfoDO">
    update file_info
    <set>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="bankRepayImpRecordId != null">
        bank_repay_imp_record_id = #{bankRepayImpRecordId,jdbcType=BIGINT},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yunche.loan.domain.entity.FileInfoDO">
    update file_info
    set type = #{type,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=BIGINT},
      bank_repay_imp_record_id = #{bankRepayImpRecordId,jdbcType=BIGINT},
      path = #{path,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunche.loan.domain.entity.FileInfoDO">
    update file_info
    set type = #{type,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=BIGINT},
      bank_repay_imp_record_id = #{bankRepayImpRecordId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>