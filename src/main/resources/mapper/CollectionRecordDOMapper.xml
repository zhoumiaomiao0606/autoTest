<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunche.loan.mapper.CollectionRecordDOMapper" >
  <resultMap id="BaseResultMap" type="com.yunche.loan.domain.entity.CollectionRecordDO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_id" property="order_id" jdbcType="BIGINT" />
    <result column="collection_date" property="collection_date" jdbcType="DATE" />
    <result column="collection_man_id" property="collection_man_id" jdbcType="BIGINT" />
    <result column="is_repayment" property="is_repayment" jdbcType="TINYINT" />
    <result column="repayment_date" property="repayment_date" jdbcType="DATE" />
    <result column="permit_repayment_date" property="permit_repayment_date" jdbcType="DATE" />
    <result column="cause" property="cause" jdbcType="TINYINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="gmt_create" property="gmt_create" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_id, collection_date, collection_man_id, is_repayment, repayment_date, permit_repayment_date, 
    cause, remark, gmt_create
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from collection_record
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectNewest" parameterType="java.lang.Long" resultType="com.yunche.loan.domain.vo.CollectionRecordVO">
    SELECT
	t.id        AS id,
	t.order_id  AS order_id,
	t.collection_date AS collection_date,
	t.collection_man_id AS collection_man_id,
	employee.NAME AS collectionname,
	t.is_repayment AS is_repayment,
	t.repayment_date AS repayment_date,
	t.permit_repayment_date AS permit_repayment_date,
	t.cause AS cause,
	t.remark AS remark,
	t.gmt_create  AS gmt_create
    from collection_record t
    left join employee employee on employee.id = t.collection_man_id
    where t.order_id = #{orderId,jdbcType=BIGINT}
    ORDER BY t.id desc limit 1
  </select>

  <select id="selectNewestTotal" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from collection_record t where t.order_id = #{orderId,jdbcType=BIGINT}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from collection_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insertSelective"  useGeneratedKeys="true" keyProperty="id"   parameterType="com.yunche.loan.domain.entity.CollectionRecordDO" >
    insert into collection_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="order_id != null" >
        order_id,
      </if>
      <if test="collection_date != null" >
        collection_date,
      </if>
      <if test="collection_man_id != null" >
        collection_man_id,
      </if>
      <if test="is_repayment != null" >
        is_repayment,
      </if>
      <if test="repayment_date != null" >
        repayment_date,
      </if>
      <if test="permit_repayment_date != null" >
        permit_repayment_date,
      </if>
      <if test="cause != null" >
        cause,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="gmt_create != null" >
        gmt_create,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="order_id != null" >
        #{order_id,jdbcType=BIGINT},
      </if>
      <if test="collection_date != null" >
        #{collection_date,jdbcType=DATE},
      </if>
      <if test="collection_man_id != null" >
        #{collection_man_id,jdbcType=BIGINT},
      </if>
      <if test="is_repayment != null" >
        #{is_repayment,jdbcType=TINYINT},
      </if>
      <if test="repayment_date != null" >
        #{repayment_date,jdbcType=DATE},
      </if>
      <if test="permit_repayment_date != null" >
        #{permit_repayment_date,jdbcType=DATE},
      </if>
      <if test="cause != null" >
        #{cause,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="gmt_create != null" >
        #{gmt_create,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunche.loan.domain.entity.CollectionRecordDO" >
    update collection_record
    <set >
      <if test="order_id != null" >
        order_id = #{order_id,jdbcType=BIGINT},
      </if>
      <if test="collection_date != null" >
        collection_date = #{collection_date,jdbcType=DATE},
      </if>
      <if test="collection_man_id != null" >
        collection_man_id = #{collection_man_id,jdbcType=BIGINT},
      </if>
      <if test="is_repayment != null" >
        is_repayment = #{is_repayment,jdbcType=TINYINT},
      </if>
      <if test="repayment_date != null" >
        repayment_date = #{repayment_date,jdbcType=DATE},
      </if>
      <if test="permit_repayment_date != null" >
        permit_repayment_date = #{permit_repayment_date,jdbcType=DATE},
      </if>
      <if test="cause != null" >
        cause = #{cause,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="gmt_create != null" >
        gmt_create = #{gmt_create,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>