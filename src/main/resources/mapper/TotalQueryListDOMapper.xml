<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunche.loan.mapper.TotalQueryListDOMapper" >
  <select id="selectTotalCusInfo" resultType="com.yunche.loan.domain.vo.TaskListVO" parameterType="com.yunche.loan.domain.query.TaskListQuery">

      SELECT
      loan.id                                 as id,
      par.partner_code                        as partnerCode,
      par.NAME                                as partner,
      cus.`name`                              as customer,
      cus.id_card                             as idCard,
      cus.mobile                              as mobile,
      base.bank                               as bank,
      plan.loan_amount                        as loanAmount,
      plan.bank_period_principal              as bankPeriodPrincipal,
      remit.remit_amount                      as remitAmount,
      node.usertask_remit_review_create_time  as remitTime,
      emp.`name`							  as salesman,
      depart.`name`							  as departmentName
      FROM
      loan_order loan
      LEFT JOIN loan_base_info base ON base.id = loan.loan_base_info_id
      LEFT JOIN loan_customer cus ON cus.id = loan.loan_customer_id
      LEFT JOIN partner par ON par.id = base.partner_id
      LEFT JOIN loan_financial_plan plan ON plan.id = loan.loan_financial_plan_id
      LEFT JOIN current_node_manager node ON node.order_id = loan.id
      LEFT JOIN loan_process process ON process.order_id = loan.id
      left join remit_details remit on remit.id = loan.remit_details_id
      left join employee emp on emp.id = base.salesman_id
      left join department depart on depart.id = par.department_id
      WHERE
      process.financial_scheme = 1 and process.`order_status` =1
      AND CASE WHEN #{maxGroupLevel}  = 0 THEN false
      when #{maxGroupLevel} = 1 then 1 = 1
      <if test="juniorIds != null and juniorIds.size() > 0">
          and base.salesman_id in
          <foreach item="item" index="index" collection="juniorIds" open="(" separator="," close=")">
              #{item}
          </foreach>
      </if>
      else true end

      and case when #{maxGroupLevel} = 3 then 1=1
      else 1=1
      <if test="bizAreaIdList != null and bizAreaIdList.size() > 0">
          and par.id in
          <foreach item="item" index="index" collection="bizAreaIdList" open="(" separator="," close=")">
              #{item}
          </foreach>
      </if>
      <if test="bankList != null and bankList.size() > 0">
          and base.bank in
          <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
              #{item}
          </foreach>
      </if>
      end

    <if test="orderId != null">
      AND loan.id = #{orderId}
    </if>
    <if test="customer != null and customer != ''">
      AND cus.name LIKE CONCAT('%', #{customer} ,'%')
    </if>
    <if test="idCard != null">
      AND cus.id_card = #{idCard}
    </if>
    <if test="partnerId != null">
      AND par.id = #{partnerId}
    </if>
    <if test="salesmanId != null">
      AND base.salesman_id = #{salesmanId}
    </if>
    <if test="bizAreaId != null">
      AND
      case
      when (select level from base_area where area_id = #{bizAreaId}) = 0 then 1=1
      when (select level from base_area where area_id = #{bizAreaId}) = 1 then base.area_id in (select area_id from base_area where parent_area_id = #{bizAreaId})
      when (select level from base_area where area_id = #{bizAreaId}) = 2 then base.area_id = #{bizAreaId}
      else 1=2
      end
    </if>
    <if test="loanAmountType != null">
      <if test="loanAmountType == 1">
        AND base.loan_amount &lt;= 100000
      </if>
      <if test="loanAmountType == 2">
        AND base.loan_amount &gt; 100000 AND base.loan_amount &lt;= 300000
      </if>
      <if test="loanAmountType == 3">
        AND base.loan_amount &gt; 300000
      </if>
    </if>
    <if test="minRemitAmount != null">
      AND remit.remit_amount &gt;=  #{minRemitAmount}
    </if>
    <if test="maxRemitAmount != null">
      AND remit.remit_amount &lt;= #{maxRemitAmount}
    </if>
    <if test="startRemitGmtCreate != null">
      AND TO_DAYS(node.usertask_remit_review_create_time) &gt;= TO_DAYS(#{startRemitGmtCreate})
    </if>
    <if test="endRemitGmtCreate != null">
      AND TO_DAYS(node.usertask_remit_review_create_time) &lt;= TO_DAYS(#{endRemitGmtCreate})
    </if>
  </select>
  <select id="selectBankCreditPend" resultType="com.yunche.loan.domain.vo.TaskListVO" parameterType="com.yunche.loan.domain.query.TaskListQuery">
    SELECT
		loan.id           as id,
		cus.NAME          as customer,
		cus.id_card       as idCard,
		emp.name          as salesman,
		par.`name`        as partner,
		DATE_FORMAT(loan.gmt_create,'%Y-%m-%d %H:%i:%S')      AS orderGmtCreate,
        jbds.cat                                              as creditDate,
        loan.id                                               as taskId,
		task.sendee_name                                      as receiveManName,
        useGetTaskTypeText(#{taskDefinitionKey},process.bank_credit_record,process.order_status) AS taskTypeText,
        base.bank                                             as bank
	FROM
		loan_order loan
		LEFT JOIN loan_process process ON process.order_id = loan.id
		LEFT JOIN `task_distribution` task ON task.`task_id` = loan.id and task.task_key = 'usertask_bank_credit_record'
		LEFT JOIN `loan_customer` cus ON cus.id = loan.`loan_customer_id`
		LEFT JOIN loan_base_info base ON base.id = loan.loan_base_info_id
		LEFT JOIN employee emp ON emp.id = base.salesman_id
		LEFT JOIN partner par ON par.id = base.partner_id
		left join current_node_manager node on node.order_id = loan.id
      left join (SELECT principal_cust_id, MAX(credit_apply_time) cat
      FROM
      (SELECT  allhis.customer_id,allhis.credit_apply_time,loan_customer.principal_cust_id FROM
      (select customer_id,max(credit_apply_time) AS credit_apply_time FROM loan_credit_info_bank_his GROUP BY customer_id) allhis
      LEFT JOIN loan_customer ON allhis.customer_id = loan_customer.id) qnmd GROUP BY principal_cust_id) jbds
      ON jbds.principal_cust_id= loan.loan_customer_id
	    WHERE
		process.credit_apply = 1
      AND CASE WHEN #{maxGroupLevel}  = 0 THEN false
      when #{maxGroupLevel} = 1 then 1 = 1
      <if test="juniorIds != null and juniorIds.size() > 0">
          and base.salesman_id in
          <foreach item="item" index="index" collection="juniorIds" open="(" separator="," close=")">
              #{item}
          </foreach>
      </if>
      else true end

      and case when #{maxGroupLevel} = 3 then 1=1
      else 1=1
      <if test="bizAreaIdList != null and bizAreaIdList.size() > 0">
          and par.id in
          <foreach item="item" index="index" collection="bizAreaIdList" open="(" separator="," close=")">
              #{item}
          </foreach>
      </if>
      <if test="bankList != null and bankList.size() > 0">
          and base.bank in
          <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
              #{item}
          </foreach>
      </if>
      end
      <if test="taskStatus != 0">
          <choose>
              <when test="pull == false">
                  and task.taskId NOT IN ( ( SELECT distinct task_id FROM task_distribution where task_key =
                  #{taskDefinitionKey} ) )
              </when>
              <otherwise>
                  and
                  case when #{maxGroupLevel} = 3 then 1=1
                  when task.sendee is not null then
                  case when task.sendee = #{employeeId} then 1=1 else 1=2 end
                  else 1=1 end
              </otherwise>
          </choose>
      </if>
      <if test="orderId != null">
          AND loan.id = #{orderId}
      </if>
      <if test="customer != null and customer != ''">
          AND cus.name LIKE CONCAT('%', #{customer} ,'%')
      </if>
      <if test="loanBank != null">
          AND base.bank = #{loanBank}
      </if>
      <if test="idCard != null">
          AND cus.id_card = #{idCard}
      </if>
      <if test="salesmanId != null">
          AND base.salesman_id = #{salesmanId}
      </if>
      <if test="partnerId != null">
          AND par.id = #{partnerId}
      </if>
      <if test="bizAreaId != null">
          AND
          case
          when (select level from base_area where area_id = #{bizAreaId}) = 0 then 1=1
          when (select level from base_area where area_id = #{bizAreaId}) = 1 then base.area_id in (select area_id from base_area where parent_area_id = #{bizAreaId})
          when (select level from base_area where area_id = #{bizAreaId}) = 2 then base.area_id = #{bizAreaId}
          else 1=2
          end
      </if>
      <if test="startCreditGmtCreate != null">
          AND TO_DAYS(node.usertask_credit_apply_create_time) &gt;= TO_DAYS(#{startCreditGmtCreate})
      </if>
      <if test="endCreditGmtCreate != null">
          AND TO_DAYS(node.usertask_credit_apply_create_time) &lt;= TO_DAYS(#{endCreditGmtCreate})
      </if>
      <if test="relevanceCustomerName != null">
          AND
          loan.id in
          (
          (select id from loan_order where loan_customer_id
          in (select principal_cust_id from loan_customer where name = #{relevanceCustomerName})
          and loan_customer_id not in (select id from loan_customer where name = #{relevanceCustomerName})
          )
          )
      </if>
      <if test = "taskStatus != null">
          <choose>
              <when test="taskStatus == 0">
                  AND process.bank_credit_record != 0
                  order by jbds.cat DESC ,process.bank_credit_record ASC
              </when>
              <otherwise>
                  AND process.bank_credit_record = 2
                  AND process.order_status = 1
                  <if test="serialStatus != null">
                      <choose>
                          <when test="serialStatus == 'except'">
                              AND 0 =
                              IF
                              ( ( SELECT count( 0 ) FROM bank_interface_serial WHERE trans_code = 'applyCredit' AND order_id = loan.id ) > 0, 1, 0 )
                              AND IF
                              (
                              ( SELECT count( 1 ) FROM loan_customer WHERE principal_cust_id = loan.loan_customer_id AND cust_type IN ( 1, 2, 3 ) AND credit_exp_flag = 1 ) > 0,
                              true,false)
                          </when>
                      </choose>
                      <choose>
                          <when test="serialStatus == 'export'">
                              AND 0 =
                              IF
                              ( ( SELECT count( 0 ) FROM bank_interface_serial WHERE trans_code = 'applyCredit' AND order_id = loan.id ) > 0, 1, 0 )
                              AND
                              IF
                              (
                              ( SELECT count( 1 ) FROM loan_customer WHERE principal_cust_id = loan.loan_customer_id AND cust_type IN ( 1, 2, 3 ) AND credit_exp_flag = 1 ) > 0,
                              false,
                              true
                              )
                          </when>
                      </choose>
                      <choose>
                          <when test="serialStatus == 'pending' or serialStatus = 'process'">
                              <if test="bankInterfaceSerialOrderidList != null and bankInterfaceSerialOrderidList.size() > 0">
                                  AND loan.id in  <!--  出现一次就判定为除外 -->
                                  <foreach item="item" index="index" collection="bankInterfaceSerialOrderidList" open="(" separator="," close=")">
                                      #{item}
                                  </foreach>
                              </if>
                          </when>
                      </choose>
                  </if>
                  order by jbds.cat asc
              </otherwise>
          </choose>
      </if>


  </select>
    <select id="selectSuccessBankOrder" parameterType="java.lang.String" resultType="java.lang.Long">
    select DISTINCT serial.order_id from bank_interface_serial serial
                        inner join
                        (
                          select SUBSTRING_INDEX(GROUP_CONCAT(serial_no order by request_time desc separator
                          ','),',',1)
                          as serial_no
                          from bank_interface_serial GROUP BY trans_code,customer_id
                        ) orderdata on orderdata.serial_no = serial.serial_no and serial.trans_code = #{transCode}
                        left join loan_process process on process.order_id = serial.order_id
                        where serial.api_status = 200 and serial.status in (0,1) and process.bank_credit_record =2 and serial.order_id not in
                        (
                          select DISTINCT serial.order_id from bank_interface_serial serial
                          inner join
                          (
                            select SUBSTRING_INDEX(GROUP_CONCAT(serial_no order by request_time desc separator
                            ','),',',1)
                            as serial_no
                            from bank_interface_serial GROUP BY trans_code,customer_id
                          ) orderdata on orderdata.serial_no = serial.serial_no and serial.trans_code = #{transCode}
                          left join loan_process process on process.order_id = serial.order_id
                        where serial.api_status != 200 or serial.status not in (0,1) and process.bank_credit_record =2
                        )

  </select>
    <select id="selectProcessBankOrder" parameterType="java.lang.String" resultType="java.lang.Long">
    select DISTINCT serial.order_id from bank_interface_serial serial
    inner join
    (
    select SUBSTRING_INDEX(GROUP_CONCAT(serial_no order by request_time desc separator
    ','),',',1)
    as serial_no
    from bank_interface_serial GROUP BY trans_code,customer_id
    ) orderdata on orderdata.serial_no = serial.serial_no and serial.trans_code = #{transCode}
    left join loan_process process on process.order_id = serial.order_id
    where serial.api_status = 200 and serial.status = 2 and process.bank_credit_record =2 and serial.order_id not in
    (
    select DISTINCT serial.order_id from bank_interface_serial serial
    inner join
    (
    select SUBSTRING_INDEX(GROUP_CONCAT(serial_no order by request_time desc separator
    ','),',',1)
    as serial_no
    from bank_interface_serial GROUP BY trans_code,customer_id
    ) orderdata on orderdata.serial_no = serial.serial_no and serial.trans_code = #{transCode}
    left join loan_process process on process.order_id = serial.order_id
    where serial.api_status != 200 or serial.status not in (0,1,2,3) and process.bank_credit_record =2
    )
    </select>
    <select id="selectApplyCredit"  resultType="com.yunche.loan.domain.vo.TaskListVO" parameterType="com.yunche.loan.domain.query.TaskListQuery">
        SELECT
                main.id,
                customer.`name` AS customer,
                customer.id_card AS idCard,
                customer.mobile AS mobile,
                employee.`name` AS salesman,
                partner.`name` AS partner,
                partner.id     AS partnerCode,
                main.gmt_create AS orderGmtCreate,
                deputy.order_status AS orderStatus,
                main.id  AS taskId,
                base.bank AS bank
        FROM
        loan_order main
        LEFT JOIN loan_process deputy ON main.id = deputy.order_id
        LEFT JOIN `task_distribution` task ON task.`task_id` = main.id and task.task_key = 'usertask_bank_credit_record'
        LEFT JOIN loan_base_info base ON base.id = main.loan_base_info_id
        LEFT JOIN partner partner ON partner.id = base.partner_id
        LEFT JOIN employee employee ON employee.id = base.salesman_id
        LEFT JOIN loan_customer customer ON customer.id = main.loan_customer_id
        WHERE
        deputy.order_status = 1
        AND  deputy.credit_apply = #{taskStatus}
        AND CASE WHEN #{maxGroupLevel}  = 0 THEN false
        when #{maxGroupLevel} = 1 then 1 = 1
        <if test="juniorIds != null and juniorIds.size() > 0">
            and base.salesman_id in
            <foreach item="item" index="index" collection="juniorIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        else true end

        and case when #{maxGroupLevel} = 3 then 1=1
        else 1=1
        <if test="bizAreaIdList != null and bizAreaIdList.size() > 0">
            and partner.id in
            <foreach item="item" index="index" collection="bizAreaIdList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="bankList != null and bankList.size() > 0">
            and base.bank in
            <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        end
        <if test="orderId != null">
            AND main.id = #{orderId}
        </if>
        <if test="customer != null and customer != ''">
            AND customer.name LIKE CONCAT('%', #{customer} ,'%')
        </if>
        <if test="loanBank != null">
            AND base.bank = #{loanBank}
        </if>
        <if test="idCard != null">
            AND customer.id_card = #{idCard}
        </if>
        <if test="salesmanId != null">
            AND base.salesman_id = #{salesmanId}
        </if>
        <if test="partnerId != null">
            AND partner.id = #{partnerId}
        </if>
        <if test="bizAreaId != null">
            AND
            case
            when (select level from base_area where area_id = #{bizAreaId}) = 0 then 1=1
            when (select level from base_area where area_id = #{bizAreaId}) = 1 then base.area_id in (select area_id from base_area where parent_area_id = #{bizAreaId})
            when (select level from base_area where area_id = #{bizAreaId}) = 2 then base.area_id = #{bizAreaId}
            else 1=2
            end
        </if>
        order by main.gmt_create
    </select>

    <select id="selectCarGps" resultType="com.yunche.loan.domain.vo.TaskListVO" parameterType="com.yunche.loan.domain.query.TaskListQuery">
         SELECT
          loan.id                                 as id,
          cus.`name`                              as customer,
          cus.id_card                             as idCard,
          emp.`name`							  							as salesman,
          par.NAME                                as partner,
          base.bank                               as bank,
          car.car_type														as carType,
          useGetSmallCarName ( car.car_detail_id ) AS carName,
          car.gps_num 														 AS carGpsNum,
          vehicle.license_plate_number 						 AS licensePlateNumber

          FROM
          loan_order loan
          LEFT JOIN loan_base_info base ON base.id = loan.loan_base_info_id
          LEFT JOIN loan_customer cus ON cus.id = loan.loan_customer_id
          LEFT JOIN partner par ON par.id = base.partner_id
          left join employee emp on emp.id = base.salesman_id
          left join loan_car_info car on car.id = loan.loan_car_info_id
          LEFT JOIN vehicle_information vehicle ON vehicle.id = loan.vehicle_information_id
          left join loan_process process on process.order_id = loan.id
        where process.order_status = 1
        and case when #{taskStatus} = 0 then process.install_gps = 1
        else process.install_gps = #{taskStatus} end
                      AND car.gps_num &gt; 0
        AND CASE WHEN #{maxGroupLevel}  = 0 THEN false
        when #{maxGroupLevel} = 1 then 1 = 1
        <if test="juniorIds != null and juniorIds.size() > 0">
            and base.salesman_id in
            <foreach item="item" index="index" collection="juniorIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        else true end

        and case when #{maxGroupLevel} = 3 then 1=1
        else 1=1
        <if test="bizAreaIdList != null and bizAreaIdList.size() > 0">
            and par.id in
            <foreach item="item" index="index" collection="bizAreaIdList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="bankList != null and bankList.size() > 0">
            and base.bank in
            <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        end
        <if test="orderId != null">
            AND loan.id = #{orderId}
        </if>
        <if test="customer != null and customer != ''">
            AND cus.name LIKE CONCAT('%', #{customer} ,'%')
        </if>
        <if test="idCard != null">
            AND cus.id_card = #{idCard}
        </if>
        <if test="partnerId != null">
            AND par.id = #{partnerId}
        </if>
        <if test="salesmanId != null">
            AND base.salesman_id = #{salesmanId}
        </if>
        <if test="bizAreaId != null">
            AND
            case
            when (select level from base_area where area_id = #{bizAreaId}) = 0 then 1=1
            when (select level from base_area where area_id = #{bizAreaId}) = 1 then base.area_id in (select area_id from base_area where parent_area_id = #{bizAreaId})
            when (select level from base_area where area_id = #{bizAreaId}) = 2 then base.area_id = #{bizAreaId}
            else 1=2
            end
        </if>
    </select>

    <select id="selectLoanInfoRecordList" resultType="com.yunche.loan.domain.vo.TaskListVO" parameterType="com.yunche.loan.domain.query.TaskListQuery">
        SELECT
            main.id,
            customer.`name` AS customer,
            customer.id_card AS idCard,
            customer.mobile AS mobile,
            employee.`name` AS salesman,
            partner.`name` AS partner,
            main.id  AS taskId
        FROM
        loan_order main
        LEFT JOIN loan_process deputy ON main.id = deputy.order_id
        LEFT JOIN loan_base_info base ON base.id = main.loan_base_info_id
        LEFT JOIN partner partner ON partner.id = base.partner_id
        LEFT JOIN employee employee ON employee.id = base.salesman_id
        LEFT JOIN loan_customer customer ON customer.id = main.loan_customer_id
        WHERE
        deputy.order_status = 1
        AND  case when #{taskStatus} =0 then deputy.loan_info_record !=0
                else deputy.loan_info_record = #{taskStatus}
             end
        <if test="orderId != null">
            AND main.id = #{orderId}
        </if>
        <if test="customer != null and customer != ''">
            AND cus.name LIKE CONCAT('%', #{customer} ,'%')
        </if>
        <if test="partnerId != null">
            AND par.id = #{partnerId}
        </if>
        <if test="salesmanId != null">
            AND base.salesman_id = #{salesmanId}
        </if>
    </select>

    <select id="selectVisitDoor" resultType="com.yunche.loan.domain.vo.TaskListVO" parameterType="com.yunche.loan.domain.query.TaskListQuery">
        select
        loan.id       as id,
        par.partner_code     as partnerCode,
        par.name             as partner,
        cus.`name`      		 as customer,
        cus.id_card          as idCard,
        base.bank            as bank

        from loan_order loan
        left join loan_process process on process.order_id = loan.id
        left join loan_base_info base on base.id = loan.loan_base_info_id
        left join partner par on par.id = base.partner_id
        left join loan_customer cus on cus.id = loan.loan_customer_id
        where process.order_status = 1
        and case when #{taskStatus} = 0 then process.visit_verify != 0
        else process.visit_verify = #{taskStatus} end
        AND CASE WHEN #{maxGroupLevel}  = 0 THEN false
        when #{maxGroupLevel} = 1 then 1 = 1
        <if test="juniorIds != null and juniorIds.size() > 0">
            and base.salesman_id in
            <foreach item="item" index="index" collection="juniorIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        else true end

        and case when #{maxGroupLevel} = 3 then 1=1
        else 1=1
        <if test="bizAreaIdList != null and bizAreaIdList.size() > 0">
            and par.id in
            <foreach item="item" index="index" collection="bizAreaIdList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="bankList != null and bankList.size() > 0">
            and base.bank in
            <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        end
        <if test="orderId != null">
            AND loan.id = #{orderId}
        </if>
        <if test="customer != null and customer != ''">
            AND cus.name LIKE CONCAT('%', #{customer} ,'%')
        </if>
        <if test="idCard != null">
            AND cus.id_card = #{idCard}
        </if>
        <if test="partnerId != null">
            AND par.id = #{partnerId}
        </if>
        <if test="salesmanId != null">
            AND base.salesman_id = #{salesmanId}
        </if>
        <if test="loanBank != null">
            AND base.bank = #{loanBank}
        </if>
    </select>

    <select id="selectCarInsurance" resultType="com.yunche.loan.domain.vo.TaskListVO" parameterType="com.yunche.loan.domain.query.TaskListQuery">
        select
        loan.id       as id,
        par.partner_code     as partnerCode,
        par.name             as partner,
        cus.`name`      		 as customer,
        cus.id_card          as idCard,
        base.bank            as bank

        from loan_order loan
        left join loan_process process on process.order_id = loan.id
        left join loan_base_info base on base.id = loan.loan_base_info_id
        left join partner par on par.id = base.partner_id
        left join loan_customer cus on cus.id = loan.loan_customer_id
        where process.order_status = 1
        and case when #{taskStatus} = 0 then process.car_insurance != 0
        else process.car_insurance = #{taskStatus} end
        AND CASE WHEN #{maxGroupLevel}  = 0 THEN false
        when #{maxGroupLevel} = 1 then 1 = 1
        <if test="juniorIds != null and juniorIds.size() > 0">
            and base.salesman_id in
            <foreach item="item" index="index" collection="juniorIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        else true end

        and case when #{maxGroupLevel} = 3 then 1=1
        else 1=1
        <if test="bizAreaIdList != null and bizAreaIdList.size() > 0">
            and par.id in
            <foreach item="item" index="index" collection="bizAreaIdList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="bankList != null and bankList.size() > 0">
            and base.bank in
            <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        end
        <if test="orderId != null">
            AND loan.id = #{orderId}
        </if>
        <if test="customer != null and customer != ''">
            AND cus.name LIKE CONCAT('%', #{customer} ,'%')
        </if>
        <if test="idCard != null">
            AND cus.id_card = #{idCard}
        </if>
        <if test="partnerId != null">
            AND par.id = #{partnerId}
        </if>
        <if test="salesmanId != null">
            AND base.salesman_id = #{salesmanId}
        </if>
        <if test="loanBank != null">
            AND base.bank = #{loanBank}
        </if>
    </select>

    <select id="selectVehicleInformationList" resultType="com.yunche.loan.domain.vo.TaskListVO" parameterType="com.yunche.loan.domain.query.TaskListQuery">
        SELECT
            main.id,
            customer.`name` AS customer,
            customer.id_card AS idCard,
            customer.mobile AS mobile,
            employee.`name` AS salesman,
            partner.`name` AS partner,
            main.id  AS taskId,
            base.bank AS bank
        FROM
        loan_order main
        LEFT JOIN loan_process deputy ON main.id = deputy.order_id
        LEFT JOIN loan_base_info base ON base.id = main.loan_base_info_id
        LEFT JOIN partner partner ON partner.id = base.partner_id
        LEFT JOIN employee employee ON employee.id = base.salesman_id
        LEFT JOIN loan_customer customer ON customer.id = main.loan_customer_id
        left join current_node_manager node on node.order_id = loan.id
        WHERE
        deputy.order_status = 1
        AND  case when #{taskStatus} =0 then deputy.loan_info_record !=0
        else deputy.loan_info_record = #{taskStatus}
        end
        <if test="customer != null and customer != ''">
            AND cus.name LIKE CONCAT('%', #{customer} ,'%')
        </if>
        <if test="partnerId != null">
            AND par.id = #{partnerId}
        </if>
        <if test="salesmanId != null">
            AND base.salesman_id = #{salesmanId}
        </if>
        <if test="loanBank != null">
            AND base.bank = #{loanBank}
        </if>
        <if test="startCreditGmtCreate != null">
            AND TO_DAYS(node.usertask_credit_apply_create_time) &gt;= TO_DAYS(#{startCreditGmtCreate})
        </if>
        <if test="endCreditGmtCreate != null">
            AND TO_DAYS(node.usertask_credit_apply_create_time) &lt;= TO_DAYS(#{endCreditGmtCreate})
        </if>
    </select>
</mapper>