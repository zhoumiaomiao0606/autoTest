<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunche.loan.mapper.TaskDistributionDOMapper" >
  <resultMap id="BaseResultMap" type="com.yunche.loan.domain.entity.TaskDistributionDO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="task_id" property="taskId" jdbcType="BIGINT" />
    <result column="sendee" property="sendee" jdbcType="BIGINT" />
    <result column="sendee_name" property="sendeeName" jdbcType="VARCHAR" />
    <result column="get_create" property="getCreate" jdbcType="TIMESTAMP" />
    <result column="finish_create" property="finishCreate" jdbcType="TIMESTAMP" />
    <result column="release__create" property="releaseCreate" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="task_key" property="taskKey" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, task_id, sendee, sendee_name, get_create, finish_create, release__create, status, 
    task_key
  </sql>
    <select id="selectLastTaskDistributionGroupByTaskKey" resultMap="BaseResultMap" >
            select main.* from
              (select task_id,max(get_create) AS get_create,task_key from task_distribution GROUP BY task_key,task_id) t
            inner join
              (select * from task_distribution) main
            on main.task_id = t.task_id and main.get_create = t.get_create and main.task_key = t.task_key
            HAVING main.task_id = #{taskId} and main.task_key = #{taskKey}
    </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from task_distribution
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from task_distribution
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"   parameterType="com.yunche.loan.domain.entity.TaskDistributionDO" >
    insert into task_distribution
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="taskId != null" >
        task_id,
      </if>
      <if test="sendee != null" >
        sendee,
      </if>
      <if test="sendeeName != null" >
        sendee_name,
      </if>
      <if test="getCreate != null" >
        get_create,
      </if>
      <if test="finishCreate != null" >
        finish_create,
      </if>
      <if test="releaseCreate != null" >
        release__create,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="taskKey != null" >
        task_key,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=BIGINT},
      </if>
      <if test="sendee != null" >
        #{sendee,jdbcType=BIGINT},
      </if>
      <if test="sendeeName != null" >
        #{sendeeName,jdbcType=VARCHAR},
      </if>
      <if test="getCreate != null" >
        #{getCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="finishCreate != null" >
        #{finishCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="releaseCreate != null" >
        #{releaseCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="taskKey != null" >
        #{taskKey,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunche.loan.domain.entity.TaskDistributionDO" >
    update task_distribution
    <set >
      <if test="taskId != null" >
        task_id = #{taskId,jdbcType=BIGINT},
      </if>
      <if test="sendee != null" >
        sendee = #{sendee,jdbcType=BIGINT},
      </if>
      <if test="sendeeName != null" >
        sendee_name = #{sendeeName,jdbcType=VARCHAR},
      </if>
      <if test="getCreate != null" >
        get_create = #{getCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="finishCreate != null" >
        finish_create = #{finishCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="releaseCreate != null" >
        release__create = #{releaseCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="taskKey != null" >
        task_key = #{taskKey,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>