<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunche.loan.mapper.LoanQueryDOMapper" >
    <select id="selectTelephoneVerifyLevel" resultType="java.lang.String"  parameterType="java.lang.Long">
              SELECT
                max( t.telephone_verify_level )
                FROM
              ( SELECT ug.* FROM employee_rela_user_group eg INNER JOIN user_group ug ON eg.user_group_id = ug.id AND eg.employee_id = #{loginUserId} ) t
    </select>
    <!--提车资料-->
    <select id="selectVehicleInformation" resultType="com.yunche.loan.domain.vo.VehicleInformationVO"  parameterType="java.lang.Long">
        select

            o.id                              AS order_id,
            c.id                              AS customer_id,
            c.name                            AS cname,
            c.id_card                         AS id_card,
            e.name                            AS ename,
            p.name                            AS pname,
            useGetCarName(i.car_detail_id)    AS car_name,
            f.car_price                       AS car_price,
            f.bank                            AS bank,
            f.bank_period_principal           AS bank_period_principal,
            f.loan_amount                     AS loan_amount,
            d.price                           AS assess_price,
            i.vehicle_property                AS production_type,
            i.car_type                        AS car_type,
            v.license_plate_type              AS license_plate_type,
            v.color                           AS color,
            v.qualified_certificate_number    AS qualified_certificate_number,
            v.register_date                   AS register_date,
            v.vehicle_identification_number   AS vehicle_identification_number,
            v.displacement                    AS displacement,
            v.license_plate_number            AS license_plate_number,
            v.apply_license_plate_date        AS apply_license_plate_date,
            v.apply_license_plate_area        AS apply_license_plate_area,
            v.transfer_ownership_date         AS transfer_ownership_date,
            v.now_driving_license_owner       AS now_driving_license_owner,
            v.old_driving_license_owner       AS old_driving_license_owner,
            v.engine_number                   AS engine_number,
            v.registration_certificate_number AS registration_certificate_number,
            v.invoice_car_dealer              AS invoice_car_dealer,
            v.purchase_car_invoice_num        AS purchase_car_invoice_num,
            v.purchase_car_invoice_price      AS purchase_car_invoice_price,
            v.invoice_down_payment            AS invoice_down_payment,
            v.purchase_car_invoice_date       AS purchase_car_invoice_date,
            v.retrieve_key                    AS retrieve_key,
            v.customize_brand                 AS customize_brand,
            f.down_payment_money              AS down_payment_money,
            DATE_FORMAT(i.first_register_date,'%Y-%m-%d')        AS first_register_date,
            i.car_category                                     AS car_category



            from (select * from loan_order where id = #{orderId,jdbcType=BIGINT}) o

            left join loan_customer c on o.loan_customer_id = c.id

            left join vehicle_information v on o.vehicle_information_id = v.id

            left join loan_base_info b on o.loan_base_info_id = b.id

            left join partner p on b.partner_id = p.id

            left join employee e on b.salesman_id = e.id

            left join loan_car_info i on o.loan_car_info_id  = i.id

            left join loan_financial_plan f on o.loan_financial_plan_id = f.id

            left join car_detail d on i.car_detail_id = d.id

            left join car_model m on model_id = m.id
    </select>
  <!--上牌抵押-->
  <select id="selectApplyLicensePlateDepositInfo" resultType="com.yunche.loan.domain.vo.ApplyLicensePlateDepositInfoVO" parameterType="java.lang.Long" >

    select
             o.id                               AS order_id,
             c.id                               AS customer_id,
             c.name                             AS cname,
             1                                  AS card_type,
             c.id_card                          AS id_card,
             e.name                             AS ename,
             p.name                             AS pname,
             h.old_driving_license_owner        AS old_driving_license_owner,
             i.car_type                         AS car_type,
             b.bank                             AS bank,
             h.license_plate_number             AS license_plate_number,
             h.transfer_ownership_date          AS transfer_ownership_date,
             h.apply_license_plate_area         AS apply_license_plate_area,
             h.apply_license_plate_date         AS apply_license_plate_date,
             a.apply_license_plate_deposit_date AS apply_license_plate_deposit_date,
             h.registration_certificate_number  AS registration_certificate_number,
             h.vehicle_identification_number    AS vehicle_identification_number

    from (select * from loan_order where id = #{orderId,jdbcType=BIGINT}) o

    left join loan_customer c on o.loan_customer_id= c.id

    left join loan_base_info b on o.loan_base_info_id = b.id

    left join loan_car_info i on o.loan_car_info_id = i.id

    left join vehicle_information h on o.vehicle_information_id = h.id

    left join apply_license_plate_deposit_info a on o.apply_license_plate_deposit_info_id = a.id

    left join partner p on b.partner_id = p.id

    left join employee e on b.salesman_id = e.id

  </select>

    <select id="checkCollectionUserRole" resultType="java.lang.Boolean" parameterType="java.lang.Long" >
        <![CDATA[
        SELECT
              case when max( t.collection_level ) = 7 then 1 else 0 end AS flag
              FROM
              ( SELECT ug.* FROM employee_rela_user_group eg INNER JOIN user_group ug ON eg.user_group_id = ug.id AND eg.employee_id = #{loginUserId} ) t
        ]]>
    </select>

    <!--======================================通用=========================================================-->
    <select id="selectUniversalModifyCustomerOrder" resultType="com.yunche.loan.domain.vo.UniversalCustomerOrderVO">
        select
          o.id AS order_id,
          c.name AS customer_name,
          c.id_card AS customer_id_card
        from loan_order o
        left join loan_customer c on c.id = o.loan_customer_id
        left join loan_process p on o.id = p.order_id
        where
        (
            (p.telephone_verify = 1 and p.loan_review != 1)
          or
            p.remit_review = 21
        )
        <if test="name!=null">
            and c.name like concat(concat('%',#{name}),'%')
        </if>
        having
        case when
          (3) in
          (
          SELECT level FROM user_group g
            INNER JOIN
          (SELECT user_group_id FROM employee_rela_user_group WHERE employee_id =  #{employeeId,jdbcType=BIGINT}) e
          ON e.user_group_id = g.id
          )  then 1=1
        when
        (2) in
        (
        SELECT level FROM user_group g
        INNER JOIN
        (SELECT user_group_id FROM employee_rela_user_group WHERE employee_id =  #{employeeId,jdbcType=BIGINT}) e
        ON e.user_group_id = g.id
        )  then 1=1
        when
          (1) in
          (
          SELECT level FROM user_group g
            INNER JOIN
          (SELECT user_group_id FROM employee_rela_user_group WHERE employee_id =  #{employeeId,jdbcType=BIGINT}) e
          ON e.user_group_id = g.id
          )  then
        order_id in (
        SELECT o.id FROM loan_order o
          INNER JOIN
          (
          SELECT id FROM loan_base_info WHERE salesman_id IN
          (
          select
            DISTINCT
          case
            when
            #{employeeId,jdbcType=BIGINT} in (select employee_id from partner_rela_employee)
            then
          case
            when
            #{employeeId,jdbcType=BIGINT} IN (SELECT id FROM employee WHERE parent_id IS NULL AND type = 2)
            then
            employee_id
          else
            #{employeeId,jdbcType=BIGINT}
          end
            else
          null
          end AS employee_id
        from partner_rela_employee where partner_id in
          (select partner_id from partner_rela_employee where employee_id = #{employeeId,jdbcType=BIGINT})
          having employee_id is not null
          )
        ) b on o.loan_base_info_id = b.id)
        else 1=2 end
    </select>

    <select id="selectUniversalRefundCustomerOrder" resultType="com.yunche.loan.domain.vo.UniversalCustomerOrderVO">
        select
          o.id AS order_id,
          c.name AS customer_name,
          c.id_card AS customer_id_card
        from loan_order o
        left join loan_customer c on c.id = o.loan_customer_id
        left join loan_process p on o.id = p.order_id
        where

        p.remit_review = 1

        <if test="name!=null">
            and c.name like concat(concat('%',#{name}),'%')
        </if>
        having
          case when
          (3) in
          (
            SELECT level FROM user_group g
              INNER JOIN
            (SELECT user_group_id FROM employee_rela_user_group WHERE employee_id =  #{employeeId,jdbcType=BIGINT}) e
            ON e.user_group_id = g.id
          )  then 1=1
            when
            (2) in
            (
            SELECT level FROM user_group g
            INNER JOIN
            (SELECT user_group_id FROM employee_rela_user_group WHERE employee_id =  #{employeeId,jdbcType=BIGINT}) e
            ON e.user_group_id = g.id
            )  then 1=1
          when
          (1) in
          (
            SELECT level FROM user_group g
              INNER JOIN
            (SELECT user_group_id FROM employee_rela_user_group WHERE employee_id =  #{employeeId,jdbcType=BIGINT}) e
            ON e.user_group_id = g.id
        )  then
        order_id in (
        SELECT o.id FROM loan_order o
          INNER JOIN
          (
          SELECT id FROM loan_base_info WHERE salesman_id IN
          (
          select
            DISTINCT
          case
          when
            #{employeeId,jdbcType=BIGINT} in (select employee_id from partner_rela_employee)
          then
          case
          when
            #{employeeId,jdbcType=BIGINT} IN (SELECT id FROM employee WHERE parent_id IS NULL AND type = 2)
          then
            employee_id
            else
          #{employeeId,jdbcType=BIGINT}
        end
        else
        null
        end AS employee_id
        from partner_rela_employee where partner_id in
        (select partner_id from partner_rela_employee where employee_id = #{employeeId,jdbcType=BIGINT})
        having employee_id is not null
        )
        ) b on o.loan_base_info_id = b.id)
        else 1=2 end
    </select>



    <select id="selectUniversalLoanFinancialPlanTempHis" resultType="com.yunche.loan.domain.vo.UniversalLoanFinancialPlanTempHisVO">
          select
					customer.id                                     AS customer_id,
					customer.name                                   AS customer_name,
					customer.id_card								AS customer_id_card,
					department.name                                 AS department_name,
					partner.id              						AS partner_id,
                    partner.name                                    AS partner_name,
                    salesman.name                                   AS salesman_name,
                    salesman.id                                     AS salesman_id,
                    his.id 			 								AS his_id,
					his.order_id 									AS order_id,
					his.financial_product_id 				 		AS financial_product_id,
					his.financial_appraisal 				 		AS financial_appraisal,
					his.financial_category_superior  		 	    AS product_category_superior,
                    his.financial_bank 							 	AS financial_bank,
					his.financial_loan_time 	                    AS financial_loan_time,
					his.financial_down_payment_ratio 		 		AS financial_down_payment_ratio,
					his.financial_bank_fee 					 		AS financial_bank_fee,
                    his.financial_product_name 			 		 	AS financial_product_name,
					format(his.financial_sign_rate,3)				AS financial_sign_rate,
					his.financial_loan_amount				 		AS financial_loan_amount,
					his.financial_first_month_repay  		 	    AS financial_first_month_repay,
                    his.financial_car_price 				 		AS financial_car_price,
					his.financial_down_payment_money 		 	    AS financial_down_payment_money,
					his.financial_bank_period_principal  		    AS financial_bank_period_principal,
                    his.financial_each_month_repay 			 		AS financial_each_month_repay,
					his.financial_total_repayment_amount 			AS financial_total_repayment_amount,
					his.initiator_id 								AS initiator_id,
					his.initiator_name                              AS initiator_name,
                    his.auditor_id 									AS auditor_id,
					his.auditor_name 								AS auditor_name,
                    DATE_FORMAT(his.start_time,'%Y-%m-%d %H:%i:%S') AS start_time,
					DATE_FORMAT(his.end_time,'%Y-%m-%d %H:%i:%S')   AS end_time,
					his.status 										AS status
            from loan_financial_plan_temp_his his
			left join loan_order main_order on his.order_id = main_order.id
			left join loan_base_info loan on main_order.loan_base_info_id = loan.id
			left join loan_customer customer on main_order.loan_customer_id = customer.id
			left join employee salesman on loan.salesman_id = salesman.id
			left join partner partner on loan.partner_id = partner.id
			left join department department on partner.department_id = department.id
            where his.id = #{hisId,jdbcType=BIGINT} and his.order_id = #{orderId,jdbcType=BIGINT}
    </select>

    <!--通用info-->
  <select id="selectUniversalInfo" resultType="com.yunche.loan.domain.vo.UniversalInfoVO" parameterType="java.lang.Long" >
    select
            main_order.id                                                                           AS order_id,
            DATE_FORMAT(material.complete_material_date,'%Y-%m-%d %H:%i:%S')                        AS material_complete_material_date,
            material.remark                                                                         AS material_remark,
            DATE_FORMAT(loan.gmt_create,'%Y-%m-%d %H:%i:%S')                                        AS loan_gmt_create,
            product.category_superior                                                               AS product_category_superior,
            department.name                                                                         AS department_name,
            customer.id                                                                             AS customer_id,
            customer.id_card                                                                        AS customer_id_card,
            customer.name                                                                           AS customer_name,
            customer.address                                                                        AS customer_address,
            customer.income_certificate_company_name                                                AS customer_income_certificate_company_name,
            customer.income_certificate_company_address                                             AS customer_income_certificate_company_address,
            customer.working_years                                                                  AS customer_working_years,
            customer.postcode                                                                       AS customer_postcode,
            customer.company_name                                                                   AS customer_company_name,
            customer.company_address                                                                AS customer_company_address,
            customer.mobile                                                                         AS customer_mobile,
            customer.company_phone                                                                  AS customer_company_phone,
            DATE_FORMAT(customer.birth,'%Y-%m-%d')                                                  AS customer_birth,
            customer.sex                                                                            AS customer_sex,
            customer.age                                                                            AS customer_age,
            customer.month_income                                                                   AS customer_month_income,
            customer.education                                                                      AS customer_education,
            customer.duty                                                                           AS customer_duty,
            customer.identity_address                                                               AS customer_identity_address,
            customer.residence_address                                                              AS customer_residence_address,
            customer.family_person_num                                                              AS customer_family_person_num,
            customer.reserve_mobile                                                                 AS customer_reserve_mobile,
            partner.id                                                                              AS partner_id,
            partner.name                                                                            AS partner_name,
            useGetAreaFullName(partner.area_id)                                                     AS partner_biz_area,
            partner.risk_bear_rate                                                                  AS partner_risk_bear_rate,
            partner.pay_month                                                                       AS partner_pay_month,
            salesman.id                                                                             AS salesman_id,
            salesman.name                                                                           AS salesman_name,
            salesman.mobile                                                                         AS salesman_mobile,
            car.cooperation_dealer                                                                  AS car_cooperation_dealer,
            useGetCarName(car.car_detail_id)                                                        AS car_name,
            car.car_type                                                                            AS car_type,
            car.gps_num                                                                             AS car_gps_num,
            car.business_source                                                                     AS car_business_source,
            car.vehicle_property                                                                    AS car_vehicle_property,
            car.car_key                                                                             AS car_key,
            car.info                                                                                AS car_info,
            vehicle.color                                                                           AS vehicle_color,
            vehicle.now_driving_license_owner                                                       AS vehicle_now_driving_license_owner,
            vehicle.old_driving_license_owner                                                       AS vehicle_old_driving_license_owner,
            vehicle.license_plate_type                                                              AS vehicle_license_plate_type,
            CONCAT(area.parent_area_name,area.area_name)                                            AS vehicle_apply_license_plate_area,
            bank_credit.gmt_create                                                                  AS bank_credit_gmt_create,
            society_credit.gmt_create                                                               AS society_credit_gmt_create,
            financial.id                                                                            AS financial_id,
            financial.bank                                                                          AS financial_bank,
            financial.loan_time                                                                     AS financial_loan_time,
            financial.appraisal                                                                     AS financial_appraisal,
            financial.down_payment_ratio                                                            AS financial_down_payment_ratio,
            financial.padding_company                                                               AS financial_padding_company,
            financial.play_company                                                                  AS financial_play_company,
            format(useGetBankRate(financial.financial_product_id,financial.loan_time),3)
                                                                                                    AS financial_bank_rate,
            (100-financial.down_payment_ratio)                                                      AS financial_loan_ratio,
            useGetBankFee(product.formula_id,financial.loan_amount,financial.sign_rate,useGetBankRate(financial.financial_product_id,financial.loan_time),financial.loan_time)
                                                                                                    AS financial_bank_fee,
            financial.financial_product_id                                                          AS financial_product_id,
            financial.financial_product_name                                                        AS financial_product_name,
            format(financial.sign_rate,3)                                                           AS financial_sign_rate,
            financial.loan_amount                                                                   AS financial_loan_amount,
            financial.first_month_repay                                                             AS financial_first_month_repay,
            useCalculateStagingRatio(product.formula_id,financial.loan_amount,financial.sign_rate,useGetBankRate(financial.financial_product_id,financial.loan_time),financial.car_price)
                                                                                                    AS financial_bank_staging_ratio,
            financial.cash_deposit                                                                  AS financial_cash_deposit,
            financial.car_price                                                                     AS financial_car_price,
            financial.down_payment_money                                                            AS financial_down_payment_money,
            financial.bank_period_principal                                                         AS financial_bank_period_principal,
            financial.each_month_repay                                                              AS financial_each_month_repay,
            financial.principal_interest_sum                                                        AS financial_total_repayment_amount,
            financial.extra_fee                                                                     AS financial_extra_fee,
            remit.beneficiary_bank                                                                  AS remit_beneficiary_bank,
            remit.beneficiary_account                                                               AS remit_beneficiary_account,
            remit.beneficiary_account_number                                                        AS remit_beneficiary_account_number,
            remit.remit_amount                                                                      AS remit_amount,
            remit.return_rate_amount                                                                AS remit_return_rate_amount,
            process.apply_license_plate_deposit_info                                                AS process_apply_license_plate_deposit_info,
            process.bank_lend_record                                                                AS process_bank_lend_record,
            bank.repay_date                                                                         AS bank_repay_date,
            car.car_category                                                                        AS car_category

    from (select * from loan_order where id = #{orderId,jdbcType=BIGINT}) main_order
    left join loan_process process on main_order.id = process.order_id
    left join bank_card_record bank on main_order.id = bank.order_id
    left join loan_customer customer on main_order.loan_customer_id = customer.id
    left join material_audit material on main_order.material_audit_id = material.id
    left join loan_base_info loan on main_order.loan_base_info_id = loan.id
    left join loan_car_info car on main_order.loan_car_info_id = car.id
    left join remit_details remit on main_order.remit_details_id = remit.id
    left join vehicle_information vehicle on main_order.vehicle_information_id = vehicle.id
    left join base_area area on vehicle.apply_license_plate_area = area.area_id
    left join loan_financial_plan financial on main_order.loan_financial_plan_id = financial.id
    left join financial_product product on financial.financial_product_id = product.prod_id
    left join loan_credit_info bank_credit on customer.id = bank_credit.customer_id and bank_credit.type = 1
    left join loan_credit_info society_credit on customer.id = society_credit.customer_id and society_credit.type = 2
    left join employee salesman on loan.salesman_id = salesman.id
    left join partner partner on loan.partner_id = partner.id
    left join department department on partner.department_id = department.id


  </select>

    <!--贷款信息-->
    <select id="selectUniversalLoanInfo" parameterType="java.lang.Long" resultType="com.yunche.loan.domain.vo.UniversalLoanInfoVO" >
        select
                main_order.id                                                                       AS order_id,
                customer.id_card                                                                    AS customer_id_card,
                customer.name                                                                       AS customer_name,
                customer.mobile                                                                     AS customer_mobile,
                partner.name                                                                        AS partner_name,
                useGetAreaFullName(partner.area_id)                                                 AS partner_biz_area,
                salesman.name                                                                       AS salesman_name,
                car.gps_num                                                                         AS car_gps_num,
                car.car_key                                                                         AS car_key,
                financial.bank                                                                      AS financial_bank,
                financial.loan_time                                                                 AS financial_loan_time,
                financial.down_payment_ratio                                                        AS financial_down_payment_ratio,
                financial.financial_product_name                                                    AS financial_product_name,
                format(financial.sign_rate,3)                                                       AS financial_sign_rate,
                financial.loan_amount                                                               AS financial_loan_amount,
                financial.first_month_repay                                                         AS financial_first_month_repay,
                financial.cash_deposit                                                              AS financial_cash_deposit,
                financial.down_payment_money                                                        AS financial_down_payment_money,
                financial.bank_period_principal                                                     AS financial_bank_period_principal,
                financial.each_month_repay                                                          AS financial_each_month_repay,
                useGetBankFee(product.formula_id,financial.loan_amount,financial.sign_rate,useGetBankRate(financial.financial_product_id,financial.loan_time),financial.loan_time)
                                                                                                    AS financial_bank_fee,
                useCalculateStagingRatio(product.formula_id,financial.loan_amount,financial.sign_rate,useGetBankRate(financial.financial_product_id,financial.loan_time),financial.car_price)
                                                                                                    AS financial_bank_staging_ratio,
                format(useGetBankRate(financial.financial_product_id,financial.loan_time),3)
                                                                                                    AS financial_bank_rate

        from (select * from loan_order where id = #{orderId,jdbcType=BIGINT}) main_order
        left join loan_process process on main_order.id = process.order_id
        left join loan_customer customer on main_order.loan_customer_id = customer.id
        left join loan_base_info loan on main_order.loan_base_info_id = loan.id
        left join loan_car_info car on main_order.loan_car_info_id = car.id
        left join loan_financial_plan financial on main_order.loan_financial_plan_id = financial.id
        left join financial_product product on financial.financial_product_id = product.prod_id
        left join employee salesman on loan.salesman_id = salesman.id
        left join partner partner on loan.partner_id = partner.id

    </select>

    <!--贷款车辆信息-->
    <select id="selectUniversalCarInfo" parameterType="java.lang.Long" resultType="com.yunche.loan.domain.vo.UniversalCarInfoVO" >
        select
            detail.price                                                            AS car_assess_price,
            brand.name                                                              AS car_brand_name,
            financial.car_price                                                     AS car_price,
            useGetCarName(car.car_detail_id)                                        AS car_name,
            car.vehicle_property                                                    AS car_vehicle_property,
            car.car_type                                                            AS car_type,
            car.car_category                                                        AS car_category,
            vehicle.vehicle_identification_number                                   AS vehicle_vehicle_identification_number,
            vehicle.license_plate_number                                            AS vehicle_license_plate_number,
            vehicle.engine_number                                                   AS vehicle_engine_number,
            CONCAT(area.parent_area_name,area.area_name)                            AS vehicle_apply_license_plate_area,
            vehicle.registration_certificate_number                                 AS vehicle_registration_certificate_number,
            vehicle.color                                                           AS vehicle_color,
            vehicle.customize_brand                                                 AS vehicle_customize_brand,
            vehicle.purchase_car_invoice_price                                      AS vehicle_purchase_car_invoice_price,
            vehicle.invoice_down_payment                                            AS vehicle_invoice_down_payment,
            vehicle.purchase_car_invoice_date                                       AS vehicle_purchase_car_invoice_date,
            vehicle.invoice_car_dealer                                              AS vehicle_invoice_car_dealer,
            vehicle.displacement                                                    AS vehicle_displacement,
            vehicle.register_date                                                   AS vehicle_register_date,
            financial.appraisal                                                     AS financial_appraisal,
            vehicle.qualified_certificate_number                                    AS qualified_certificate_number,
            car.car_category                                                        AS car_category

        from (select * from loan_order where id = #{orderId,jdbcType=BIGINT}) main_order
        left join loan_car_info car on main_order.loan_car_info_id = car.id
        left join loan_financial_plan financial on main_order.loan_financial_plan_id = financial.id
        left join vehicle_information vehicle on main_order.vehicle_information_id = vehicle.id
        left join base_area area on vehicle.apply_license_plate_area = area.area_id
        left join car_detail detail on car.car_detail_id = detail.id
        left join car_model model on detail.model_id = model.id
        left join car_brand brand on model.brand_id = brand.id
    </select>

    <!--共贷人信息-->
    <select id="selectUniversalRelationCustomer" parameterType="java.lang.Long" resultType="com.yunche.loan.domain.vo.UniversalRelationCustomerVO">
      select
            customer.cust_type                                                      AS customer_cust_type,
            customer.cust_relation                                                  AS customer_cust_relation,
            customer.name                                                           AS customer_name,
            customer.id_card                                                        AS customer_id_card,
            customer.income_certificate_company_name                                AS customer_income_certificate_company_name,
            customer.income_certificate_company_address                             AS customer_income_certificate_company_address,
            customer.mobile                                                         AS customer_mobile,
            customer.address                                                        AS customer_address,
            customer.company_address                                                AS customer_company_address,
            customer.postcode                                                       AS customer_postcode,
            customer.company_phone                                                  AS customer_company_phone,
            customer.guarantee_type                                                 AS customer_guarantee_type,
            customer.company_name                                                   AS customer_company_name,
            customer.identity_address                                               AS customer_identity_address,
            customer.reserve_mobile                                                 AS customer_reserve_mobile

      from (select * from loan_order where id = #{orderId,jdbcType=BIGINT}) main_order
      left join loan_customer customer on main_order.loan_customer_id = customer.principal_cust_id and cust_type !=0
    </select>

    <!--打款信息-->
    <select id="selectUniversalRemitDetails" parameterType="java.lang.Long" resultType="com.yunche.loan.domain.vo.UniversalRemitDetails">
      select
            remit.beneficiary_bank                                                                  AS remit_beneficiary_bank,
            remit.beneficiary_account                                                               AS remit_beneficiary_account,
            remit.beneficiary_account_number                                                        AS remit_beneficiary_account_number,
            remit.remit_amount                                                                      AS remit_amount,
            remit.return_rate_amount                                                                AS remit_return_rate_amount,
            remit.insurance_situation                                                               AS remit_insurance_situation,
            remit.payment_organization                                                              AS remit_payment_organization,
            DATE_FORMAT(remit.application_date,'%Y-%m-%d %H:%i:%S')                                 AS remit_application_date,
            remit.remark

      from (select * from loan_order where id = #{orderId,jdbcType=BIGINT}) main_order
      left join remit_details remit on main_order.remit_details_id = remit.id

    </select>

    <!--费用明细-->
    <select id="selectUniversalCostDetails" parameterType="java.lang.Long" resultType="com.yunche.loan.domain.vo.UniversalCostDetailsVO">
      select
             cost.service_fee                                AS cost_service_fee,
             cost.apply_license_plate_deposit_fee            AS cost_apply_license_plate_deposit_fee,
             cost.performance_fee                            AS cost_performance_fee,
             cost.install_gps_fee                            AS cost_install_gps_fee,
             cost.risk_fee                                   AS cost_risk_fee,
             cost.fair_assess_fee                            AS cost_fair_assess_fee,
             cost.apply_license_plate_out_province_fee       AS cost_apply_license_plate_out_province_fee,
             cost.based_margin_fee                           AS cost_based_margin_fee,
             cost.extra_fee                                  AS cost_extra_fee,
             cost.other_fee                                  AS cost_other_fee,
             cost.service_fee_type                           AS cost_service_fee_type,
             cost.apply_license_plate_deposit_fee_type       AS cost_apply_license_plate_deposit_fee_type,
             cost.performance_fee_type                       AS cost_performance_fee_type,
             cost.install_gps_fee_type                       AS cost_install_gps_fee_type,
             cost.risk_fee_type                              AS cost_risk_fee_type,
             cost.fair_assess_fee_type                       AS cost_fair_assess_fee_type,
             cost.apply_license_plate_out_province_fee_type  AS cost_apply_license_plate_out_province_fee_type,
             cost.based_margin_fee_type                      AS cost_based_margin_fee_type,
             cost.extra_fee_type                             AS cost_extra_fee_type,
             cost.other_fee_type                             AS cost_other_fee_type,
             remit.remit_amount                              AS remit_amount,
             remit.return_rate_amount                        AS remit_return_rate_amount

      from (select * from loan_order where id = #{orderId,jdbcType=BIGINT}) main_order
      left join cost_details cost on main_order.cost_details_id = cost.id
      left join remit_details remit on main_order.remit_details_id = remit.id

    </select>

    <!--征信结果-->
  <select id="selectUniversalCreditInfo" resultType="com.yunche.loan.domain.vo.UniversalCreditInfoVO" parameterType="java.lang.Long" >
    select
        customer.id                         AS customer_id,
        customer.cust_type                	AS customer_cust_type,
        customer.name					  	AS customer_name,
        customer.guarantee_type             AS customer_guarantee_type,
        customer.cust_relation              AS customer_cust_relation,
		bank.info			      	        AS bank_info,
        bank.result		          			AS bank_result,
        process_bank.credit_result         	AS process_bank_credit_result,
        process_bank.credit_info           	AS process_bank_credit_info,
        process_bank.add_condition         	AS process_bank_add_condition,
        society.info		          		AS society_info,
        society.result             			AS society_result,
        process_society.credit_result     	AS process_society_credit_result,
        process_society.credit_info       	AS process_society_credit_info,
        process_society.add_condition      	AS process_society_add_condition


    from (select * from loan_order where id = #{orderId,jdbcType=BIGINT}) main_order
    left join loan_customer customer on main_order.loan_customer_id = customer.principal_cust_id
    left join loan_credit_info bank on customer.id = bank.customer_id and bank.type = 1
    left join loan_credit_info society on customer.id = society.customer_id and society.type = 2
    left join (select * from loan_process_log  where order_id =  #{orderId,jdbcType=BIGINT} and task_definition_key = 'usertask_bank_credit_record' order by create_time LIMIT 1) process_bank on process_bank.order_id = main_order.id
    left join (select * from loan_process_log  where order_id  = #{orderId,jdbcType=BIGINT} and task_definition_key = 'usertask_social_credit_record' order by create_time LIMIT 1) process_society on process_society.order_id = main_order.id
  </select>

    <!--上门家访问报告-->
    <select id="selectUniversalHomeVisitInfo" resultType="com.yunche.loan.domain.vo.UniversalHomeVisitInfoVO" parameterType="java.lang.Long" >
        select
					salesman.name                                    AS salesman_name,
					DATE_FORMAT(home.visit_date,'%Y-%m-%d %H:%i:%S') AS home_visit_date,
					home.visit_address								 AS home_visit_address,
					home.survey_report								 AS home_survey_report

		from (select * from loan_order where id = #{orderId,jdbcType=BIGINT}) main_order
		left join loan_home_visit home on main_order.loan_home_visit_id = home.id
		left join employee salesman on home.visit_salesman_id = salesman.id

    </select>

    <!--资料增补-->
    <select id="selectUniversalSupplementInfo" resultType="com.yunche.loan.domain.vo.UniversalSupplementInfoVO" parameterType="java.lang.Long">

        select
            supplement.remark						AS  supplement_remark,
            supplement.content					    AS  supplement_content,
            supplement.info							AS 	supplement_info,
            supplement.type							AS  supplement_type

        from
        loan_info_supplement supplement where supplement.order_id = #{orderId,jdbcType=BIGINT}
        order by supplement.end_time desc LIMIT 1
    </select>

    <!--客户信息-->
    <select id="selectUniversalCustomer" resultType="com.yunche.loan.domain.vo.UniversalCustomerVO" parameterType="java.lang.Long" >
    select
        o.id                      AS order_id,
        c.id                      AS customer_id,
        c.cust_type               AS cust_type,
        c.name                    AS name,
        c.guarantee_type          AS guarantee_type,
        c.id_card                 AS id_card,
        c.mobile                  AS mobile,
        c.cust_relation           AS cust_relation,
        c.sex                     AS sex,
        c.income_certificate_company_name            AS income_certificate_company_name,
        c.income_certificate_company_address         AS income_certificate_company_address,
        c.company_name            AS company_name,
        c.company_address         AS company_address,
        c.education               AS education,
        c.month_income            AS month_income,
        c.address                 AS address,
        c.postcode                AS postcode,
        c.working_years           AS working_years,
        c.duty                    AS duty,
        c.age                     AS age,
        c.guarantee_rela          AS guarantee_rela,
        cb.result                 AS bank_result,
        cs.result                 AS society_result

    from (select * from loan_order where id = #{orderId,jdbcType=BIGINT}) o

    left join loan_customer c on o.loan_customer_id= c.id or o.loan_customer_id = c.principal_cust_id

    left join loan_credit_info cb on cb.customer_id = c.id and cb.type = 1

    left join loan_credit_info cs on cs.customer_id = c.id and cs.type = 2

    where c.`status`=0
</select>

    <!--客户信息-->
    <select id="selectUniversalCustomerDetail" resultType="com.yunche.loan.domain.vo.UniversalCustomerDetailVO">

        select
          customer.id                                    AS customer_id,
          customer.name                                  AS customer_name,
          customer.nation                                AS customer_nation,
          customer.birth                                 AS customer_birth,
          customer.identity_validity                     AS customer_identity_validity,
          customer.lend_card                             AS customer_lend_card,
          customer.id_card                               AS customer_id_card,
          customer.mobile                                AS customer_mobile,
          customer.age                                   AS customer_age,
          customer.sex                                   AS customer_sex,
          customer.apply_date                            AS customer_apply_date,
          customer.address                               AS customer_address,
          customer.marry                                 AS customer_marry,
          customer.identity_address                      AS customer_identity_address,
          customer.residence_address                     AS customer_residence_address,
          customer.mobile_area                           AS customer_mobile_area,
          customer.education                             AS customer_education,
          customer.company_name                          AS customer_company_name,
          customer.company_phone                         AS customer_company_phone,
          customer.company_address                       AS customer_company_address,
          customer.month_income                          AS customer_month_income,
          customer.house_type                            AS customer_house_type,
          customer.house_owner                           AS customer_house_owner,
          customer.house_feature                         AS customer_house_feature,
          customer.house_address                         AS customer_house_address,
          customer.info                                  AS customer_info,
          customer.cust_type                             AS customer_cust_type,
          customer.principal_cust_id                     AS customer_principal_cust_id,
          customer.cust_relation                         AS customer_cust_relation,
          customer.gmt_create                            AS customer_gmt_create,
          customer.gmt_modify                            AS customer_gmt_modify,
          customer.postcode                              AS customer_postcode,
          customer.working_years                         AS customer_working_years,
          customer.duty                                  AS customer_duty,
          customer.household_nature                      AS customer_household_nature,
          customer.children_num                          AS customer_children_num,
          customer.reserve_mobile                        AS customer_reserve_mobile,
          customer.company_nature                        AS customer_company_nature,
          customer.industry_category                     AS customer_industry_category,
          customer.income_certificate_company_name       AS customer_income_certificate_company_name,
          customer.income_certificate_company_address    AS customer_income_certificate_company_address,
          customer.family_address                        AS customer_family_address,
          customer.family_mobile                         AS customer_family_mobile,
          customer.family_monthly_income                 AS customer_family_monthly_income,
          customer.feeding_num                           AS customer_feeding_num,
          customer.floor_space                           AS customer_floor_space,
          customer.house_owner_relation                  AS customer_house_owner_relation,
          customer.bank_card_transmit_address            AS customer_bank_card_transmit_address,
          customer.bank_card_transmit_postcode           AS customer_bank_card_transmit_postcode,
          customer.house_certificate_type                AS customer_house_certificate_type,
          customer.bank_card_transmit_address_type       AS customer_bank_card_transmit_address_type,
          customer.company_postcode                      AS customer_company_postcode,
          customer.elementary_school                     AS customer_elementary_school,
          customer.professional                          AS customer_professional,
          customer.family_person_num                     AS customer_family_person_num,
          customer.debt_ratio                            AS customer_debt_ratio,
          customer.guarantee_rela                        AS customer_guarantee_rela,
          bank.info			      	                     AS bank_info,
          bank.result		          			         AS bank_result,
          process_bank.credit_result         	         AS process_bank_credit_result,
          process_bank.credit_info           	         AS process_bank_credit_info,
          process_bank.add_condition         	         AS process_bank_add_condition,
          society.info		          		             AS society_info,
          society.result             			         AS society_result,
          process_society.credit_result     	         AS process_society_credit_result,
          process_society.credit_info       	         AS process_society_credit_info,
          process_society.add_condition      	         AS process_society_add_condition

        from
        (select * from loan_customer where id = #{customerId,jdbcType=BIGINT}) customer
        left join loan_credit_info bank on customer.id = bank.customer_id and bank.type = 1
        left join loan_credit_info society on customer.id = society.customer_id and society.type = 2
        left join (select * from loan_process_log  where order_id  = @order_id and task_definition_key = 'usertask_bank_credit_record' order by create_time LIMIT 1) process_bank on process_bank.order_id = #{orderId,jdbcType=BIGINT}
        left join (select * from loan_process_log  where order_id  = @order_id and task_definition_key = 'usertask_social_credit_record' order by create_time LIMIT 1) process_society on process_society.order_id = #{orderId,jdbcType=BIGINT}
    </select>

    <!--客户附件信息-->
    <select id="selectUniversalCustomerFile" resultType="com.yunche.loan.domain.vo.UniversalCustomerFileVO" parameterType="java.lang.Long" >
    select
            path                      AS urls,
            type                      AS type,
            useFileTypeCastName(type) AS name
    from  loan_file  where customer_id = #{customerId,jdbcType=BIGINT}
    </select>



    <!--资料增补-->
    <select id="selectUniversalMaterialRecord" resultType="com.yunche.loan.domain.vo.UniversalMaterialRecordVO" parameterType="java.lang.Long" >
    select
            path                      AS urls,
            type                      AS type,
            useFileTypeCastName(type) AS name
    from loan_file where customer_id = (select loan_customer_id from loan_order where id = #{orderId,jdbcType=BIGINT}) and upload_type = 2
  </select>

    <!--资料增补根据type-->
    <select id="selectUniversalCustomerFileByTypes" resultType="com.yunche.loan.domain.vo.UniversalMaterialRecordVO">
    select
            path                      AS urls,
            type                      AS type,
            useFileTypeCastName(type) AS name
    from loan_file where customer_id = (select loan_customer_id from loan_order where id = #{orderId,jdbcType=BIGINT})
        <if test="types != null">
            and type in
            <foreach collection="types" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <!--关联订单-->
    <select id="selectUniversalRelevanceOrderId" parameterType="java.lang.Long" resultType="java.lang.String">
						select t.id from (
							select distinct o.id from loan_order o
								inner join
							(
								select distinct principal_cust_id AS id from loan_customer where id_card in
								(select distinct id_card from loan_customer where principal_cust_id = (select loan_customer_id from loan_order where id = #{orderId,jdbcType=BIGINT}))
									union
								select  distinct principal_cust_id AS id from loan_customer where id_card =
								(select id_card from loan_customer where id = (select loan_customer_id from loan_order where id = #{orderId,jdbcType=BIGINT}))
							) t
							on t.id = o.loan_customer_id
						) t HAVING t.id != #{orderId,jdbcType=BIGINT}
    </select>

    <!--关联订单-->
    <select id="selectUniversalRelevanceOrderIdByCustomerId" resultType="java.lang.String">
        select tab.id from (
            select distinct o.id from loan_order o
              inner join
            (
							select distinct principal_cust_id AS id from loan_customer where id_card in
							(select distinct id_card from loan_customer where principal_cust_id = #{customerId,jdbcType=BIGINT})
								union
							select  distinct principal_cust_id AS id from loan_customer where id_card =
							(select id_card from loan_customer where id = #{customerId,jdbcType=BIGINT})
						) t
            on t.id = o.loan_customer_id
            ) tab having tab.id != #{orderId,jdbcType=BIGINT}
    </select>

    <!--审核备注-->
    <select id="selectUniversalApprovalInfo" resultType="com.yunche.loan.domain.vo.UniversalApprovalInfo">
       select
           action,
           info,
           credit_result,
           credit_info,
           add_condition,
           DATE_FORMAT(create_time,'%Y-%m-%d %H:%i:%S') AS create_time,
           user_name

       from loan_process_log where task_definition_key =  #{taskDefinitionKey,jdbcType=VARCHAR} and order_id = #{orderId,jdbcType=BIGINT} order by create_time desc limit 1
    </select>

    <!--获取主贷人id-->
    <select id="selectOrderIdbyPrincipalCustId" resultType="java.lang.Long" parameterType="java.lang.Long">

    select id from loan_order where loan_customer_id  = (select principal_cust_id from loan_customer where id =  #{customerId,jdbcType=BIGINT});

    </select>


    <select id="selectUniversalLoanRefundApply" resultType="com.yunche.loan.domain.vo.UniversalLoanRefundApplyVO">

        select
                    id 											AS refund_id,
                    order_id 								    AS order_id,
                    refund_amount 					            AS refund_amount,
                    DATE_FORMAT(refund_date,'%Y-%m-%d %H:%i:%S') AS refund_date,
                    refund_reason 					            AS refund_reason,
                    refund_pay_open_bank  	                    AS refund_pay_open_bank,
                    refund_pay_account_name                     AS refund_pay_account_name,
                    refund_pay_account 			                AS refund_pay_account,
                    path 										AS path
        from loan_refund_apply where  order_id= #{orderId} and id = #{refundId}

    </select>


    <!-- 逾期-->
    <select id="selectUniversalOverdueInfo" resultType="com.yunche.loan.domain.vo.UniversalOverdueInfo">
        select overdue_amount    AS repay_overdue_amount,
			   overdue_times     AS repay_overdue_times,
			   max_overdue_times AS repay_max_overdue_times,
			   0 				 AS repay_compensatory
		from bank_repay_record where order_id = #{orderId,jdbcType=BIGINT} order by bank_repay_imp_record_id desc limit 1
    </select>

    <!-- 还款计划-->
    <select id="selectUniversalLoanRepaymentPlan" resultType="com.yunche.loan.domain.vo.UniversalLoanRepaymentPlan">
            select
                @row:=@row+1                                        AS repay_period,
                repay.order_id                                      AS repay_order_id,
                DATE_FORMAT(repay.repay_date,'%Y-%m-%d')            AS repay_date,
                repay.payable_amount                                AS repay_payable_amount,
                repay.actual_repay_amount                           AS repay_actual_repay_amount,
                repay.is_overdue                                    AS repay_is_overdue,
                repay.overdue_amount                                AS repay_overdue_amount,
                DATE_FORMAT(repay.check_date,'%Y-%m-%d')            AS repay_check_date
            from loan_repay_plan repay,(select @row:=0) r where repay.order_id = #{orderId,jdbcType=BIGINT} order by repay.repay_date asc

    </select>

    <!-- 催收计划-->
    <select id="selectUniversalCollectionRecord" resultType="com.yunche.loan.domain.vo.UniversalCollectionRecord">
              select
                @row:=@row+1 					                                    AS collection_row,
                collection.id 				                                        AS collection_id,
                collection.order_id 	                                            AS collection_order_id,
                DATE_FORMAT(collection.collection_date,'%Y-%m-%d')                  AS collection_date,
                collection.collection_man_id			                            AS collection_man_id,
                employee.name			                                            AS collection_man_name,
                customer.name       	                                            AS collection_customer_name,
                collection.is_repayment					                            AS collection_is_repayment,
                DATE_FORMAT(collection.repayment_date,'%Y-%m-%d') 				    AS collection_repayment_date,
                DATE_FORMAT(collection.permit_repayment_date,'%Y-%m-%d') 	        AS collection_permit_repayment_date,
                collection.cause							                        AS collection_cause,
                collection.remark							                        AS collection_remark
            from collection_record collection
            left join (select @row:=0) r  on 1=1
            left join loan_order orders on orders.id = collection.order_id
            left join loan_customer customer on orders.loan_customer_id = customer.id
            left join employee employee on employee.id = collection.collection_man_id
            where collection.order_id = #{orderId,jdbcType=BIGINT}
            order by collection_date desc
    </select>

    <!-- 催收详情-->
    <select id="selectUniversalCollectionRecordDetail" resultType="com.yunche.loan.domain.vo.UniversalCollectionRecordDetail">
          select
	        collection.id 				                                        AS collection_id,
	        collection.order_id 	                                            AS collection_order_id,
	        DATE_FORMAT(collection.collection_date,'%Y-%m-%d')                  AS collection_date,
	        collection.collection_man_id			                            AS collection_man_id,
	        customer.name       	                                            AS collection_man_name,
	        collection.is_repayment					                            AS collection_is_repayment,
	        DATE_FORMAT(collection.repayment_date,'%Y-%m-%d') 				    AS collection_repayment_date,
	        DATE_FORMAT(collection.permit_repayment_date,'%Y-%m-%d') 	        AS collection_permit_repayment_date,
	        collection.cause							                        AS collection_cause,
	        collection.remark							                        AS collection_remark
        from collection_record collection
        left join loan_order orders on orders.id = collection.order_id
        left join loan_customer customer on orders.loan_customer_id = customer.id
        where collection.id = #{collectionId,jdbcType=BIGINT}
    </select>

    <!-- 催收专员列表-->
    <select id="selectUniversalTelephoneCollectionEmployee" resultType="com.yunche.loan.domain.vo.UniversalTelephoneCollectionEmployee">
        select x.* from
        (
        select employee.id,employee.name,ug.name AS role,ug.collection_level
        from employee  employee
        inner JOIN
        employee_rela_user_group eg on eg.employee_id = employee.id
        inner join user_group ug on ug.id = eg.user_group_id
        ) x where x.id not in
        (
            select DISTINCT t.id from
            (
            select employee.id,employee.name,ug.name AS role,ug.level
            from employee  employee
            LEFT JOIN
            employee_rela_user_group eg on eg.employee_id = employee.id
            left join user_group ug on ug.id = eg.user_group_id
            ) t where t.level = 3
        )
        and x.collection_level = 6
    </select>
    <select id="selectUniversalUndistributedCollection" resultType="com.yunche.loan.domain.vo.UniversalUndistributedCollection">
            select bu.order_id,plan.bank from bank_urge_record bu
            left join bank_repay_imp_record bi on bu.bank_repay_imp_record_id = bi.id
            left join loan_order o on bu.order_id = o.id
            left join loan_financial_plan plan on o.loan_financial_plan_id = plan.id
            where bu.sendee is null
    </select>



    <!--=============================================end===================================================-->


  <!--保险客户信息-->
  <select id="selectInsuranceCustomer" resultType="com.yunche.loan.domain.vo.InsuranceCustomerVO" parameterType="java.lang.Long" >
      select
              o.id                              AS order_id,
              i.id                              AS insurance_info_id,
              c.id                              AS customer_id,
              c.name                            AS cname,
              c.id_card                         AS id_card,
              e.name                            AS ename,
              p.name                            AS pname,
              i.insurance_year                  AS insurance_year,
              i.issue_bills_date                AS issue_bills_date,
              c.address                         AS residential_address,
              (select sum(insurance_amount) from insurance_relevance where insurance_info_id = id )
                                                AS total_insurance_amount

      from
            (select * from loan_order where id = #{orderId,jdbcType=BIGINT}) o
                left join insurance_info i on i.order_id = o.id
                left join loan_customer c on c.id = o.loan_customer_id
                left join loan_base_info b on b.id = o.loan_base_info_id
                left join employee e on e.id = b.salesman_id
                left join partner p on p.id = b.partner_id

    ORDER BY i.issue_bills_date asc


  </select>

    <!--保险客户信息-->
    <select id="selectInsuranceCustomerNormalizeInsuranceYear" resultType="com.yunche.loan.domain.vo.InsuranceCustomerVO" parameterType="java.lang.Long" >
     select
              o.id                    AS order_id,
              i.id                    AS insurance_info_id,
              c.id                    AS customer_id,
              c.name                  AS cname,
              c.id_card               AS id_card,
              e.name                  AS ename,
              p.name                  AS pname,
              i.insurance_year        AS insurance_year,
              i.issue_bills_date      AS issue_bills_date,
              c.address               AS residential_address,
              (select sum(insurance_amount) from insurance_relevance where insurance_info_id = id )
                                      AS total_insurance_amount

      from
            (select * from loan_order where id = #{orderId,jdbcType=BIGINT}) o
                left join insurance_info i on i.order_id = o.id and i.insurance_year = 1
                left join loan_customer c on c.id = o.loan_customer_id
                left join loan_base_info b on b.id = o.loan_base_info_id
                left join employee e on e.id = b.salesman_id
                left join partner p on p.id = b.partner_id
    ORDER BY i.issue_bills_date asc

  </select>

  <!--保险相关信息-->
  <select id="selectInsuranceRelevance" resultType="com.yunche.loan.domain.vo.InsuranceRelevanceVO" parameterType="java.lang.Long" >

    select
             insurance_info_id      AS insurance_info_id,
             insurance_company_name AS insurance_company_name,
             insurance_number       AS insurance_number,
             insurance_amount       AS insurance_amount,
             start_date             AS start_date,
             end_date               AS end_date,
             insurance_type         AS insurance_type

    from insurance_relevance where insurance_info_id = #{insuranceInfoId,jdbcType=BIGINT}

  </select>

  <!--金融方案-->
  <select id="selectFinancialScheme" resultType="com.yunche.loan.domain.vo.FinancialSchemeVO" parameterType="java.lang.Long" >
    select
             o.id                                 AS order_id,
             c.id                                 AS customer_id,
             c.name                               AS cname,
             c.id_card                            AS id_card,
             f.financial_product_name             AS financial_product_name,
             h.license_plate_number               AS license_plate_number,
             h.registration_certificate_number    AS registration_certificate_number,
             h.apply_license_plate_date           AS apply_license_plate_date,
             a.apply_license_plate_deposit_date   AS apply_license_plate_deposit_date,
             f.loan_time                          AS loan_time,
             f.car_price                          AS car_price,
             b.bank                               AS bank,
             f.sign_rate                          AS sign_rate,
             f.down_payment_money                 AS down_payment_money,
             f.loan_amount                        AS loan_amount,
             f.down_payment_ratio                 AS down_payment_ratio,
             f.bank_period_principal              AS bank_period_principal,
             f.bank_fee                           AS bank_fee,
             f.principal_interest_sum             AS principal_interest_sum,
             f.first_month_repay                  AS first_month_repay,
             f.each_month_repay                   AS each_month_repay,
             useCalculateStagingRatio(product.formula_id,f.loan_amount,f.sign_rate,useGetBankRate(f.financial_product_id,f.loan_time),f.car_price)
                                                  AS financial_bank_staging_ratio

    from (select * from loan_order where id = #{orderId,jdbcType=BIGINT}) o

    left join loan_customer c on o.loan_customer_id= c.id

    left join loan_base_info b on o.loan_base_info_id = b.id

    left join loan_car_info i on o.loan_car_info_id = i.id

    left join loan_financial_plan f on o.loan_financial_plan_id = f.id

    left join cost_details d on o.cost_details_id = d.id

    left join remit_details r on o.remit_details_id = r.id

    left join vehicle_information h on o.vehicle_information_id = h.id

    left join apply_license_plate_deposit_info a on o.apply_license_plate_deposit_info_id = a.id

    left join material_audit m on o.material_audit_id = m.id

    left join loan_home_visit v on o.loan_home_visit_id = v.id

    left join financial_product product on f.financial_product_id = product.prod_id



  </select>

    <!--计算明细的信息-->
    <select id="selectCostCalculateInfo" resultType="com.yunche.loan.domain.vo.CostCalculateInfoVO" parameterType="java.lang.Long" >
        select
                f.bank_period_principal AS bank_period_principal,
                p.pay_month             AS pay_month

        from (select * from loan_order where id = #{orderId,jdbcType=BIGINT}) o

        left join loan_financial_plan f on o.loan_financial_plan_id = f.id

        left join partner p       on p.id = b.partner_id
    </select>

    <select id="selectGpsByOrderId" resultType="com.yunche.loan.domain.vo.GpsVO" parameterType="java.lang.Long" >
        select
                order_id,gps_number AS gps_number
        from install_gps
        where order_id = #{orderId,jdbcType=BIGINT}
    </select>



    <select id="selectOrderIdByIDCard" resultType="java.lang.Long" >
        SELECT
        e.orderId
        FROM
        (
        SELECT
        count(t.id_card) AS id_card_num,
        t.orderId
        FROM
        (
        SELECT
        a.id AS orderId,
        c.id_card
        FROM
        loan_order a
        LEFT JOIN loan_process b ON a.id = b.order_id
        LEFT JOIN loan_customer c ON a.loan_customer_id = c.id
        WHERE
        c.id_card = #{idCard}
        AND (b.bank_lend_record = 2 or b.bank_card_record=2)
        ) t
        GROUP BY
        t.id_card
        HAVING
        id_card_num = 1
        ) e
    </select>

    <select id="selectBankLendRecordDetail" resultType="com.yunche.loan.domain.vo.BankLendRecordVO" parameterType="java.lang.Long">
        SELECT
        a.id AS orderId,
        b.id_card AS idCard,
        b.name AS principalLenderName,
        h.name AS salesman,
        e. NAME AS departmentName,
        a.loan_customer_id AS customerId,
        a.gmt_create AS gmtCreate,
        c.bank,
        (select
        case when
        END_TIME_ = null
        then null
        else
        DATE_FORMAT(END_TIME_,'%Y-%m-%d %H:%i:%S')
        end
        from act_hi_taskinst
        where PROC_INST_ID_ = a.process_inst_id
        and TASK_DEF_KEY_ = 'usertask_loan_review'
        order by START_TIME_
        desc limit 1) AS remitGmtCreate,
        f.lend_date AS lendDate,
        f.lend_amount AS lendAmount,
        d.name AS partnerName
        FROM
        loan_order a
        LEFT JOIN  bank_lend_record f on a.bank_lend_record_id=f.id
        LEFT JOIN loan_customer b ON a.loan_customer_id = b.id
        LEFT JOIN loan_base_info c ON a.loan_base_info_id = c.id
        LEFT JOIN employee h ON h.id=c.salesman_id
        LEFT JOIN partner d ON c.partner_id = d.id
        LEFT JOIN department e ON d.department_id = e.id
        WHERE
        a.id =#{orderId}
    </select>


    <select id="selectBankCardRecordDetail" resultType="com.yunche.loan.domain.vo.BankCardRecordVO" parameterType="java.lang.Long">
        SELECT
        a.id AS orderId,
        b.id_card AS idCard,
        b.name AS principalLenderName,
        h.name AS salesman,
        e.NAME AS departmentName,
        a.loan_customer_id AS customerId,
        a.gmt_create AS gmtCreate,
        c.bank,
        f.lend_date AS lendDate,
        g.billing_date AS billingDate,
        g.first_billing_date AS firstBillingDate,
        g.repay_date AS repayDate,
        g.first_repayment_date AS firstRepaymentDate,
        g.repay_card_id AS repayCardId,
        g.receive_date AS receiveDate,
        g.sendee,
        d.name  AS partnerName
        FROM
        loan_order a
        LEFT JOIN  bank_card_record g  on a.id= g.order_id
        LEFT JOIN  bank_lend_record f on a.bank_lend_record_id=f.id
        LEFT JOIN loan_customer b ON a.loan_customer_id = b.id
        LEFT JOIN loan_base_info c ON a.loan_base_info_id = c.id
        LEFT JOIN employee h ON  c.salesman_id=h.id
        LEFT JOIN partner d ON c.partner_id = d.id
        LEFT JOIN department e ON d.department_id = e.id
        WHERE
        a.id =#{orderId}
    </select>

    <select id="checkCustomerHavingCreditON14Day" resultType="java.lang.Boolean">
        select count(tab.credit_id) from
        (
          select customer.id_card as customer_id_card,credit.id as credit_id,credit.gmt_modify from loan_customer customer
          left join loan_credit_info credit on customer.id = credit.customer_id
          where customer.id_card = #{idCard} and credit.type = 1 and credit.result is not null and UNIX_TIMESTAMP(NOW())- UNIX_TIMESTAMP(credit.gmt_modify) < 14*24*60*60 and customer.cust_type in (1,2,3)
        ) tab GROUP BY tab.customer_id_card
    </select>


</mapper>