<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunche.loan.mapper.TaskSchedulingDOMapper" >


    <select id="selectLevel" resultType="java.lang.Integer">

    SELECT
    case when max( t.LEVEL ) is null or max( t.LEVEL ) = '' then 0 else max( t.LEVEL ) end as levels
    FROM
    (
    SELECT
    CASE

    WHEN
    g.NAME IN ( '总监' ) THEN
    7
    WHEN g.NAME IN ( '电审经理' ) THEN
    6
    WHEN g.NAME IN ( '电审主管' ) THEN
    5
    WHEN g.NAME IN ( '电审专员' ) THEN
    4 ELSE 1
    END AS LEVEL
    FROM
    employee_rela_user_group r
    INNER JOIN user_group g ON r.user_group_id = g.id
    AND r.employee_id = #{loginUserId}
    ) t
    </select>

    <select id="selectAppTaskList" resultType="com.yunche.loan.domain.vo.TaskListVO">

        select tab.* from
        (
        select
        main.id AS id,
        join_e.id AS salesmanId,
        join_p.id AS partnerId,
        join_b.area_id AS bizAreaId,
        join_c.name AS customer,
        DATE_FORMAT(main.gmt_create,'%Y-%m-%d %H:%i:%S') AS orderGmtCreate,
        join_c.id_card AS idCard,
        join_c.mobile AS mobile,
        join_e.name AS salesman,
        (select
        case when
        END_TIME_ = null
        then null
        else
        DATE_FORMAT(END_TIME_,'%Y-%m-%d %H:%i:%S')
        end
        from act_hi_taskinst
        where PROC_INST_ID_ = main.process_inst_id
        and TASK_DEF_KEY_ = 'usertask_credit_apply'
        order by START_TIME_
        desc limit 1) AS creditGmtCreate,
        join_b.bank AS bank,
        join_d.name AS departmentName,
        join_f.loan_amount AS loanAmount,
        join_f.bank_period_principal AS bankPeriodPrincipal,
        join_f.sign_rate AS signRate,
        (select
        case when
        END_TIME_ = null
        then null
        else
        DATE_FORMAT(END_TIME_,'%Y-%m-%d %H:%i:%S')
        end
        from act_hi_taskinst
        where PROC_INST_ID_ = main.process_inst_id
        and TASK_DEF_KEY_ = 'usertask_loan_apply'
        order by START_TIME_
        desc limit 1) AS loanGmtCreate,
        join_i.car_type AS carType,
        join_h.license_plate_number AS licensePlateNumber,
        join_p.name AS partner,
        join_f.loan_time AS loanTime,
        join_f.down_payment_money AS downPaymentMoney
        from loan_order main
        inner join loan_process deputy on main.id = deputy.order_id
        left join loan_customer join_c on join_c.id = main.loan_customer_id
        left join loan_base_info join_b on join_b.id = main.loan_base_info_id
        left join loan_financial_plan join_f on join_f.id = main.loan_financial_plan_id
        left join loan_car_info join_i on join_i.id = main.loan_car_info_id
        left join partner join_p on join_p.id = join_b.partner_id
        left join employee join_e on join_e.id = join_b.salesman_id
        left join department join_d on join_d.id = join_p.department_id
        left join vehicle_information join_h on join_h.id = main.vehicle_information_id
        where 1=1
        <choose>
            <when test="multipartType == 1">
                AND case when join_b.loan_amount >  1 then
                   deputy.credit_apply = 1 AND deputy.bank_credit_record != 1 AND  deputy.social_credit_record != 1
                         else
                   deputy.credit_apply = 1 AND deputy.bank_credit_record != 1
                  end
            </when>
            <when test="multipartType == 2">
                AND case when join_b.loan_amount >  1 then
                   deputy.bank_credit_record = 1 AND deputy.social_credit_record = 1
                        else
                   deputy.bank_credit_record = 1
                end
            </when>
            <when test="multipartType == 3">
                AND deputy.loan_apply = 1 AND deputy.visit_verify !=1  AND deputy.telephone_verify != 1
            </when>
            <when test="multipartType == 4">
                AND deputy.telephone_verify = 1
            </when>
            <when test="multipartType == 5">
                AND deputy.remit_review != 1
            </when>
            <when test="multipartType == 6">
                AND deputy.remit_review = 1
            </when>
            <otherwise>
                AND 1=2
            </otherwise>
        </choose>
        ) tab
        where 1=1
        <if test="customer != null">
            AND tab.customer = #{customer}
        </if>

        order by tab.orderGmtCreate desc
    </select>


        <select id="selectTaskList" resultType="com.yunche.loan.domain.vo.TaskListVO" parameterType="com.yunche.loan.domain.query.TaskListQuery">
            select
            tab.*,
            tab.taskStatus                               AS taskType,
            useGetTaskTypeText(tab.taskStatus)           AS taskTypeText,
            useGetCurrentTask('${taskDefinitionKey}')      AS currentTask
            from
            (
            select
            main.id                                      AS id,
            join_e.id                                    AS salesmanId,
            join_p.id                                    AS partnerId,
            join_b.area_id                               AS bizAreaId,
            join_c.name                                  AS customer,
            DATE_FORMAT(main.gmt_create,'%Y-%m-%d %H:%i:%S')      AS orderGmtCreate,
            join_c.id_card                               AS idCard,
            join_c.mobile                                AS mobile,
            join_e.name                                  AS salesman,
            (select
            case when
            END_TIME_ = null
            then null
            else
            DATE_FORMAT(END_TIME_,'%Y-%m-%d %H:%i:%S')
            end
            from act_hi_taskinst
            where PROC_INST_ID_ = main.process_inst_id
            and TASK_DEF_KEY_ = 'usertask_credit_apply'
            order by START_TIME_
            desc limit 1)                                AS creditGmtCreate,
            (select
            case when
            END_TIME_ = null
            then null
            else
            DATE_FORMAT(END_TIME_,'%Y-%m-%d %H:%i:%S')
            end
            from act_hi_taskinst
            where PROC_INST_ID_ = main.process_inst_id
            and TASK_DEF_KEY_ = 'usertask_remit_review'
            order by START_TIME_
            desc limit 1)                                AS remitGmtCreate,
            join_b.bank                                  AS bank,
            join_d.name                                  AS departmentName,
            join_f.loan_amount                           AS loanAmount,
            join_f.bank_period_principal                 AS bankPeriodPrincipal,
            join_f.sign_rate                             AS signRate,
            (select
            case when
            END_TIME_ = null
            then null
            else
            DATE_FORMAT(END_TIME_,'%Y-%m-%d %H:%i:%S')
            end
            from act_hi_taskinst
            where PROC_INST_ID_ = main.process_inst_id
            and TASK_DEF_KEY_ = 'usertask_loan_apply'
            order by START_TIME_
            desc limit 1)                                AS loanGmtCreate,
            join_i.car_type                              AS carType,
            join_h.license_plate_number                  AS licensePlateNumber,
            join_p.name                                  AS partner,
            join_f.loan_time                             AS loanTime,
            join_f.down_payment_money                    AS downPaymentMoney,
            0                                            AS overdueNum,
            DATE_FORMAT(join_r.lend_date,'%Y-%m-%d %H:%i:%S') AS lendDate,
            <choose>
                <when test="taskDefinitionKey == 'usertask_credit_apply'">
                    deputy.credit_apply                     AS taskStatus
                </when>
                <when test="taskDefinitionKey == 'usertask_credit_apply_verify'">
                    deputy.credit_apply_verify              AS taskStatus
                </when>
                <when test="taskDefinitionKey == 'usertask_bank_credit_record'">
                    deputy.bank_credit_record               AS taskStatus
                </when>
                <when test="taskDefinitionKey == 'usertask_social_credit_record'">
                    deputy.social_credit_record             AS taskStatus
                </when>
                <when test="taskDefinitionKey == 'usertask_loan_apply'">
                    deputy.loan_apply                       AS taskStatus
                </when>
                <when test="taskDefinitionKey == 'usertask_visit_verify'">
                    deputy.visit_verify                     AS taskStatus
                </when>
                <when test="taskDefinitionKey == 'usertask_car_insurance'">
                    deputy.car_insurance                    AS taskStatus
                </when>
                <when test="taskDefinitionKey == 'usertask_vehicle_information'">
                    deputy.vehicle_information       AS taskStatus
                </when>
                <when test="taskDefinitionKey == 'usertask_apply_license_plate_deposit_info'">
                    deputy.apply_license_plate_deposit_info AS taskStatus
                </when>
                <when test="taskDefinitionKey == 'usertask_install_gps'">
                    deputy.install_gps                      AS taskStatus
                </when>
                <when test="taskDefinitionKey == 'usertask_commit_key'">
                    deputy.commit_key                       AS taskStatus
                </when>
                <when test="taskDefinitionKey == 'usertask_material_review'">
                    deputy.material_review                  AS taskStatus
                </when>
                <when test="taskDefinitionKey == 'usertask_material_print_review'">
                    deputy.material_print_review            AS taskStatus
                </when>
                <when test="taskDefinitionKey == 'usertask_business_review'">
                    deputy.business_review                  AS taskStatus
                </when>
                <when test="taskDefinitionKey == 'usertask_loan_review'">
                    deputy.loan_review                      AS taskStatus
                </when>
                <when test="taskDefinitionKey == 'usertask_remit_review'">
                    deputy.remit_review                     AS taskStatus
                </when>
                <when test="taskDefinitionKey == 'usertask_telephone_verify'">
                    useLevelGetTaskStatus(${level},deputy.telephone_verify)   AS taskStatus
                </when>
                <when test="taskDefinitionKey == 'usertask_info_supplement'">
                    join_s.type                               AS supplementType,
                    join_s.content                            AS supplementContent,
                    DATE_FORMAT(join_s.start_time,'%Y-%m-%d %H:%i:%S')     AS supplementStartTime,
                    join_s.id                                 AS supplementOrderId,
                    join_s.status                             AS taskStatus
                </when>
                <when test="taskDefinitionKey == 'servicetask_financial_scheme'">
                    deputy.financial_scheme                   AS taskStatus
                </when>
                <when test="taskDefinitionKey == 'usertask_bank_lend_record'">
                    deputy.bank_lend_record                   AS taskStatus
                </when>
                <when test="taskDefinitionKey == 'usertask_bank_card_record'">
                    deputy.bank_card_record                   AS taskStatus
                </when>
                <otherwise>
                  0                                           AS taskStatus

                </otherwise>
            </choose>
            from loan_order main
            inner join loan_process deputy               on main.id               = deputy.order_id
            left  join loan_customer join_c              on join_c.id             = main.loan_customer_id
            left  join loan_base_info join_b             on join_b.id             = main.loan_base_info_id
            left  join loan_financial_plan join_f        on join_f.id             = main.loan_financial_plan_id
            left  join loan_car_info join_i              on join_i.id             = main.loan_car_info_id
            left  join partner join_p                    on join_p.id             = join_b.partner_id
            left  join employee join_e                   on join_e.id             = join_b.salesman_id
            left  join department join_d                 on join_d.id             = join_p.department_id
            left  join vehicle_information join_h        on join_h.id             = main.vehicle_information_id
            left  join bank_lend_record join_r           on join_r.id             = main.bank_lend_record_id
            <if test="taskDefinitionKey == 'usertask_info_supplement'">
            left join loan_info_supplement join_s        on main.id               = join_s.order_id
            </if>
            where 1=1
            <choose>
                <when test="taskDefinitionKey == 'usertask_credit_apply'">
                    AND case when #{taskStatus} = 0 then deputy.credit_apply != 0                     else deputy.credit_apply                     = #{taskStatus} end
                </when>
                <when test="taskDefinitionKey == 'usertask_credit_apply_verify'">
                    AND case when #{taskStatus} = 0 then deputy.credit_apply_verify != 0              else deputy.credit_apply_verify              = #{taskStatus} end
                </when>
                <when test="taskDefinitionKey == 'usertask_bank_credit_record'">
                    AND case when #{taskStatus} = 0 then deputy.bank_credit_record != 0               else deputy.bank_credit_record               = #{taskStatus} end
                </when>
                <when test="taskDefinitionKey == 'usertask_social_credit_record'">
                    AND case when #{taskStatus} = 0 then deputy.social_credit_record != 0             else deputy.social_credit_record             = #{taskStatus} end
                </when>
                <when test="taskDefinitionKey == 'usertask_loan_apply'">
                    AND case when #{taskStatus} = 0 then deputy.loan_apply != 0                       else deputy.loan_apply                       = #{taskStatus} end
                </when>
                <when test="taskDefinitionKey == 'usertask_visit_verify'">
                    AND case when #{taskStatus} = 0 then deputy.visit_verify != 0                     else deputy.visit_verify                     = #{taskStatus} end
                </when>
                <when test="taskDefinitionKey == 'usertask_car_insurance'">
                    AND case when #{taskStatus} = 0 then deputy.car_insurance != 0                    else deputy.car_insurance                    = #{taskStatus} end
                </when>
                <when test="taskDefinitionKey == 'usertask_vehicle_information'">
                    AND case when #{taskStatus} = 0 then deputy.vehicle_information != 0              else deputy.vehicle_information              = #{taskStatus} end
                </when>
                <when test="taskDefinitionKey == 'usertask_apply_license_plate_deposit_info'">
                    AND case when #{taskStatus} = 0 then deputy.apply_license_plate_deposit_info != 0 else deputy.apply_license_plate_deposit_info = #{taskStatus} end
                </when>
                <when test="taskDefinitionKey == 'usertask_install_gps'">
                    AND case when #{taskStatus} = 0 then deputy.install_gps != 0                      else deputy.install_gps                      = #{taskStatus} end
                </when>
                <when test="taskDefinitionKey == 'usertask_commit_key'">
                    AND case when #{taskStatus} = 0 then deputy.commit_key != 0                       else deputy.commit_key                       = #{taskStatus} end
                </when>
                <when test="taskDefinitionKey == 'usertask_material_review'">
                    AND case when #{taskStatus} = 0 then deputy.material_review != 0                  else deputy.material_review                  = #{taskStatus} end
                </when>
                <when test="taskDefinitionKey == 'usertask_material_print_review'">
                    AND case when #{taskStatus} = 0 then deputy.material_print_review != 0            else deputy.material_print_review            = #{taskStatus} end
                </when>
                <when test="taskDefinitionKey == 'usertask_business_review'">
                    AND case when #{taskStatus} = 0 then deputy.business_review != 0                  else deputy.business_review                  = #{taskStatus} end
                </when>
                <when test="taskDefinitionKey == 'usertask_loan_review'">
                    AND case when #{taskStatus} = 0 then deputy.loan_review != 0                      else deputy.loan_review                      = #{taskStatus} end
                </when>
                <when test="taskDefinitionKey == 'usertask_remit_review'">
                    AND case when #{taskStatus} = 0 then deputy.remit_review  != 0                        else deputy.remit_review                     = #{taskStatus} end
                </when>
                <when test="taskDefinitionKey == 'usertask_telephone_verify'">
                    AND useLevelGetTaskStatus(${level},deputy.telephone_verify) !=-1
                    AND case when #{taskStatus} = 0 then useLevelGetTaskStatus(${level},deputy.telephone_verify) != 0 else useLevelGetTaskStatus(${level},deputy.telephone_verify) = #{taskStatus} end
                </when>
                <when test="taskDefinitionKey == 'usertask_info_supplement'">
                    AND case when #{taskStatus} = 0 then join_s.status  != 0                          else join_s.status                           = #{taskStatus} end
                </when>
                <when test="taskDefinitionKey == 'servicetask_financial_scheme'">
                    AND case when #{taskStatus} = 0 then deputy.financial_scheme  != 0                          else deputy.financial_scheme                           = #{taskStatus} end
                </when>
                <when test="taskDefinitionKey == 'usertask_bank_lend_record'">
                    AND case when #{taskStatus} = 0 then deputy.bank_lend_record  != 0                          else deputy.bank_lend_record                           = #{taskStatus} end
                </when>
                <when test="taskDefinitionKey == 'usertask_bank_card_record'">
                    AND case when #{taskStatus} = 0 then deputy.bank_card_record  != 0                          else deputy.bank_card_record                           = #{taskStatus} end
                </when>
                <otherwise>
                    AND 1=2
                </otherwise>
            </choose>
            ) tab
            where 1=1
            <if test="orderId != null">
                AND tab.id = #{orderId}
            </if>
            <if test="customer != null">
                AND tab.customer = #{customer}
            </if>
            <if test="mobile != null">
                AND tab.mobile = #{mobile}
            </if>
            <if test="idCard != null">
                AND tab.idCard = #{idCard}
            </if>
            <if test="salesmanId != null">
                AND tab.salesmanId = #{salesmanId}
            </if>
            <if test="bizAreaId != null">
                AND
                case
                  when (select level from base_area where area_id = #{bizAreaId}) = 0 then 1=1
                  when (select level from base_area where area_id = #{bizAreaId}) = 1 then tab.bizAreaId in (select area_id from base_area where parent_area_id = #{bizAreaId})
                  when (select level from base_area where area_id = #{bizAreaId}) = 2 then tab.bizAreaId = #{bizAreaId}
                else 1=2
                end
            </if>
            <if test="loanBank != null">
                AND tab.bank = #{loanBank}
            </if>
            <if test="taskDefinitionKey == 'usertask_info_supplement'">
                <if test="supplementType != null">
                    AND tab.supplementType = #{supplementType}
                </if>
            </if>
            <if test="loanAmountType != null">
                <if test="loanAmountType == 1">
                    AND tab.loanAmount &lt;= 100000
                </if>
                <if test="loanAmountType == 2">
                    AND tab.loanAmount &gt; 100000 AND tab.loanAmount &lt;= 300000
                </if>
                <if test="loanAmountType == 3">
                    AND tab.loanAmount &gt; 300000
                </if>
            </if>
            <if test="signType != null">
                <if test="signType == 1">
                    AND tab.signRate &lt;= 10
                </if>
                <if test="signType == 2">
                    AND tab.signRate &gt; 10 AND tab.signRate &lt;= 20
                </if>
                <if test="signType == 3">
                    AND tab.signRate &gt; 20
                </if>
            </if>
            <if test="carType != null">
                AND tab.carType = #{carType}
            </if>
            <if test="partnerId != null">
                AND tab.partnerId = #{partnerId}
            </if>
            <if test="loanTime != null">
                AND tab.loanTime = #{loanTime}
            </if>
            <if test="startOrderGmtCreate != null">
                AND TO_DAYS(tab.orderGmtCreate) &gt;= TO_DAYS(#{startOrderGmtCreate})
            </if>
            <if test="endOrderGmtCreate != null">
                AND TO_DAYS(tab.orderGmtCreate) &lt;= TO_DAYS(#{endOrderGmtCreate})
            </if>
            <if test="startLoanGmtCreate != null">
                AND TO_DAYS(tab.loanGmtCreate) &gt;= TO_DAYS(#{startLoanGmtCreate})
            </if>
            <if test="endLoanGmtCreate != null">
                AND TO_DAYS(tab.loanGmtCreate) &lt;= TO_DAYS(#{endLoanGmtCreate})
            </if>
            <if test="startCreditGmtCreate != null">
                AND TO_DAYS(tab.creditGmtCreate) &gt;= TO_DAYS(#{startCreditGmtCreate})
            </if>
            <if test="endCreditGmtCreate != null">
                AND TO_DAYS(tab.creditGmtCreate) &lt;= TO_DAYS(#{endCreditGmtCreate})
            </if>
            order by tab.orderGmtCreate DESC ,tab.taskStatus ASC
        </select>






        <select id="selectScheduleTaskList" resultType="com.yunche.loan.domain.vo.ScheduleTaskVO" >


        /*备注:? 指 传入的用户id  （集合说明）为集合 ∩ 交集符号  u 并集符号

        （
          (
            (查询loan_order表中 loan_base_info_id 集合)
            ∩
            （
              查询 loan_base_info中id 条件为 salesman_id  in //备注:意指销售员id可能为多个,用是否为合伙人leader为条件判断,leader要看到所有手下包括自己的单子

             （
              先判断 （?）  in （合伙人团队的领导者集合）
              如果存在
                   （则取出 employee 表中 所有上级主管为 ？的id 也就是下属 并且type=2为外包员工） u  (?)
              如果不存在
                    则先判断 ? 是否属于业务员
                       如果属于
                            (?)
                       不属于
                             null
              ）
            ）
          ）

          ∩

        (合伙人角色的待办列表)
        ）
          u
        （此用户排除掉合伙人这个角色的其他角色的待办列表）*/
        select tab.* from
        (
        SELECT
               result.PROC_INST_ID_                AS processId,
               result.TASK_DEF_KEY_                AS taskKey,
               DATE_FORMAT(result.CREATE_TIME_,'%Y-%m-%d %H:%i:%S') AS createScheduleDate,
               result.DESCRIPTION_                 AS taskDescription,
               jorder.id                           AS orderId,
               jp.name                             AS partner,
               je.name                             AS salesman,
               jb.bank                             AS bank,
               jc.name                             AS name,
               jc.id_card                          AS idCard,
               jc.mobile                           AS mobile,
               ji.car_type                         AS carType,
               useGetCarName(ji.car_detail_id)     AS carName,
               jf.down_payment_ratio               AS downPaymentRatio,
               jf.loan_time                        AS loanTime,
               jf.loan_amount                      AS loanAmount,
               CONCAT('待办',result.NAME_)          AS taskStatusExplanation,
               jb.partner_id                       AS  partnerId,
               jb.salesman_id                      AS  salesmanId,
               case when result.TASK_DEF_KEY_ = 'usertask_telephone_verify' then
                  case when lp.telephone_verify  &lt; ${level} and lp.telephone_verify!=1 and lp.telephone_verify!=0 then 2 else 1 end
               else 2 end                          AS filtration,
               case when result.TASK_DEF_KEY_ = 'usertask_info_supplement' then
                (select id from loan_info_supplement where order_id = jorder.id order by start_time desc limit 1)
               else null end                       AS supplementOrderId

        FROM
          (
          SELECT pt.* FROM
            (SELECT process_inst_id FROM loan_order o
              INNER JOIN
            (SELECT id FROM loan_base_info WHERE salesman_id IN(
              CASE WHEN
                #{employeeId,jdbcType=BIGINT} IN (SELECT id FROM employee WHERE parent_id IS NULL AND type = 2)
              THEN
                  (SELECT id FROM employee  WHERE parent_id = #{employeeId,jdbcType=BIGINT} AND type = 2 UNION SELECT #{employeeId,jdbcType=BIGINT})
              ELSE
                  CASE WHEN
                    (SELECT type FROM employee WHERE id = #{employeeId,jdbcType=BIGINT}) = 2
                  THEN
                    #{employeeId,jdbcType=BIGINT}
                  ELSE
                    NULL
                  END
              END
                )) b
            ON o.loan_base_info_id = b.id) et

            INNER JOIN

            (SELECT DISTINCT RES.* FROM ACT_RU_TASK RES
                INNER JOIN
                ACT_RU_IDENTITYLINK I
                ON I.TASK_ID_ = RES.ID_
              WHERE
                RES.ASSIGNEE_ IS NULL
                AND I.TYPE_ = 'candidate'
                AND ( I.GROUP_ID_ IN ( '合伙人' ) )) pt

          ON et.process_inst_id = pt.PROC_INST_ID_
            WHERE (SELECT type FROM employee WHERE id = #{employeeId,jdbcType=BIGINT}) = 2

          UNION

          SELECT DISTINCT RES.* FROM ACT_RU_TASK RES
                INNER JOIN
                ACT_RU_IDENTITYLINK I
                ON I.TASK_ID_ = RES.ID_
                WHERE RES.ASSIGNEE_ IS NULL AND I.TYPE_ = 'candidate' AND
                ( I.GROUP_ID_ IN
                  (
                    SELECT name FROM user_group g
                      INNER JOIN
                    (SELECT user_group_id FROM employee_rela_user_group WHERE employee_id = #{employeeId,jdbcType=BIGINT}) e
                      ON e.user_group_id = g.id
                      WHERE g.name != '合伙人'
                  )
                )
          ) result

        INNER JOIN loan_order jorder     ON jorder.process_inst_id = result.PROC_INST_ID_
        LEFT JOIN loan_base_info jb      ON jb.id                  = jorder.loan_base_info_id
        LEFT JOIN partner        jp      ON jp.id                  = jb.partner_id
        LEFT JOIN employee       je      ON je.id                  = jb.salesman_id
        LEFT JOIN loan_customer  jc      ON jc.id                  = jorder.loan_customer_id
        LEFT JOIN loan_car_info  ji      ON ji.id                  = jorder.loan_car_info_id
        LEFT JOIN loan_financial_plan jf ON jf.id                  = jorder.loan_financial_plan_id
        INNER JOIN loan_process lp       ON jorder.id              = lp.order_id
        ) tab where tab.filtration = 2
        order by tab.createScheduleDate ASC
        </select>

</mapper>