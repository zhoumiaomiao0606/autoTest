<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunche.loan.mapper.CashierAccountConfDOMapper">
  <resultMap id="BaseResultMap" type="com.yunche.loan.domain.entity.CashierAccountConfDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="employee_id" jdbcType="BIGINT" property="employeeId" />
    <result column="company_account" jdbcType="VARCHAR" property="companyAccount" />
    <result column="company_account_bank" jdbcType="VARCHAR" property="companyAccountBank" />
    <result column="company_account_number" jdbcType="VARCHAR" property="companyAccountNumber" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, employee_id, company_account, company_account_bank, company_account_number, create_user, 
    create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cashier_account_conf
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cashier_account_conf
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yunche.loan.domain.entity.CashierAccountConfDO">
    insert into cashier_account_conf (id, employee_id, company_account, 
      company_account_bank, company_account_number, 
      create_user, create_time)
    values (#{id,jdbcType=BIGINT}, #{employeeId,jdbcType=BIGINT}, #{companyAccount,jdbcType=VARCHAR}, 
      #{companyAccountBank,jdbcType=VARCHAR}, #{companyAccountNumber,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yunche.loan.domain.entity.CashierAccountConfDO">
    insert into cashier_account_conf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="companyAccount != null">
        company_account,
      </if>
      <if test="companyAccountBank != null">
        company_account_bank,
      </if>
      <if test="companyAccountNumber != null">
        company_account_number,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="companyAccount != null">
        #{companyAccount,jdbcType=VARCHAR},
      </if>
      <if test="companyAccountBank != null">
        #{companyAccountBank,jdbcType=VARCHAR},
      </if>
      <if test="companyAccountNumber != null">
        #{companyAccountNumber,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunche.loan.domain.entity.CashierAccountConfDO">
    update cashier_account_conf
    <set>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="companyAccount != null">
        company_account = #{companyAccount,jdbcType=VARCHAR},
      </if>
      <if test="companyAccountBank != null">
        company_account_bank = #{companyAccountBank,jdbcType=VARCHAR},
      </if>
      <if test="companyAccountNumber != null">
        company_account_number = #{companyAccountNumber,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunche.loan.domain.entity.CashierAccountConfDO">
    update cashier_account_conf
    set employee_id = #{employeeId,jdbcType=BIGINT},
      company_account = #{companyAccount,jdbcType=VARCHAR},
      company_account_bank = #{companyAccountBank,jdbcType=VARCHAR},
      company_account_number = #{companyAccountNumber,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="listAll" parameterType="com.yunche.loan.domain.param.QueryCashierAccountConfParam" resultType="com.yunche.loan.domain.vo.CashierAccountConfVO">
    select
    cashier_account_conf.id,
    employee_id as employeeId,
    employee.name as  employeeName,
    company_account as companyAccount,
    company_account_bank as companyAccountBank,
    company_account_number as  companyAccountNumber,
    create_user as  createUser,
    create_time as  createTime
    from cashier_account_conf
    left join employee on  cashier_account_conf.employee_id = employee.id
    <where>
      <if test="employeeId !=null and employeeId !=''" >
        and employee_id = #{employeeId,jdbcType=BIGINT}
      </if>
      <if test="createUser !=null and createUser !=''" >
        and create_user like CONCAT('%', #{createUser,jdbcType=VARCHAR} ,'%')
      </if>

    </where>

  </select>

  <select id="listAllEmployName"  resultType="com.yunche.loan.domain.vo.CashierEmployName">
    select
    employee.id as employeeId,
    employee.name as  employeeName
    from
    (select
    distinct
    employee_id
    from cashier_account_conf
    ) t
    left join employee on  t.employee_id = employee.id


  </select>

  <select id="listAllCreateUserName"  resultType="String">
    select
    distinct
    create_user
    from cashier_account_conf


  </select>

  <select id="listAllCashierAccountConfByEmployeeId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from cashier_account_conf
    where employee_id = #{employeeId,jdbcType=BIGINT}
  </select>

  <delete id="deleteByEmployeeId" parameterType="java.lang.Long">
    delete from cashier_account_conf
    where employee_id = #{employeeId,jdbcType=BIGINT}
  </delete>
</mapper>