<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunche.loan.mapper.LoanRefundApplyDOMapper">
    <resultMap id="BaseResultMap" type="com.yunche.loan.domain.entity.LoanRefundApplyDO">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="order_id" jdbcType="BIGINT" property="order_id" />
        <result column="initiator_id" jdbcType="BIGINT" property="initiator_id" />
        <result column="initiator_name" jdbcType="VARCHAR" property="initiator_name" />
        <result column="auditor_id" jdbcType="BIGINT" property="auditor_id" />
        <result column="auditor_name" jdbcType="VARCHAR" property="auditor_name" />
        <result column="refund_amount" jdbcType="DECIMAL" property="refund_amount" />
        <result column="refund_date" jdbcType="DATE" property="refund_date" />
        <result column="refund_reason" jdbcType="TINYINT" property="refund_reason" />
        <result column="refund_apply_account_id" jdbcType="BIGINT" property="refund_apply_account_id" />
        <result column="start_time" jdbcType="TIMESTAMP" property="start_time" />
        <result column="end_time" jdbcType="TIMESTAMP" property="end_time" />
        <result column="status" jdbcType="TINYINT" property="status" />
        <result column="advances_interest" jdbcType="DECIMAL" property="advances_interest" />
        <result column="other_interest" jdbcType="DECIMAL" property="other_interest" />
        <result column="penalty_interest" jdbcType="DECIMAL" property="penalty_interest" />
        <result column="refund_cause" jdbcType="TINYINT" property="refund_cause" />
        <result column="retrun_reason" jdbcType="TINYINT" property="retrun_reason" />
        <result column="return_text" jdbcType="VARCHAR" property="return_text" />
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yunche.loan.domain.entity.LoanRefundApplyDO">
        <result column="path" jdbcType="LONGVARCHAR" property="path" />
    </resultMap>
    <sql id="Base_Column_List">
        id, order_id, initiator_id, initiator_name, auditor_id, auditor_name, refund_amount,
        refund_date, refund_reason, refund_apply_account_id, start_time, end_time, status,
        advances_interest, other_interest, penalty_interest,refund_cause,retrun_reason,return_text
    </sql>
    <sql id="Blob_Column_List">
        path
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from loan_refund_apply
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from loan_refund_apply
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="id" parameterType="com.yunche.loan.domain.entity.LoanRefundApplyDO">
        insert into loan_refund_apply (id, order_id, initiator_id,
        initiator_name, auditor_id, auditor_name,
        refund_amount, refund_date, refund_reason,
        refund_apply_account_id, start_time, end_time,
        status, advances_interest, other_interest,
        penalty_interest, path,refund_cause,retrun_reason,return_text)
        values (#{id,jdbcType=BIGINT}, #{order_id,jdbcType=BIGINT}, #{initiator_id,jdbcType=BIGINT},
        #{initiator_name,jdbcType=VARCHAR}, #{auditor_id,jdbcType=BIGINT}, #{auditor_name,jdbcType=VARCHAR},
        #{refund_amount,jdbcType=DECIMAL}, #{refund_date,jdbcType=DATE}, #{refund_reason,jdbcType=TINYINT},
        #{refund_apply_account_id,jdbcType=BIGINT}, #{start_time,jdbcType=TIMESTAMP}, #{end_time,jdbcType=TIMESTAMP},
        #{status,jdbcType=TINYINT}, #{advances_interest,jdbcType=DECIMAL}, #{other_interest,jdbcType=DECIMAL},
        #{penalty_interest,jdbcType=DECIMAL}, #{path,jdbcType=LONGVARCHAR}, #{refund_cause,jdbcType=TINYINT}
        ,#{retrun_reason,jdbcType=TINYINT},#{return_text,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"  keyColumn="id" parameterType="com.yunche.loan.domain.entity.LoanRefundApplyDO">
        insert into loan_refund_apply
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="order_id != null">
                order_id,
            </if>
            <if test="initiator_id != null">
                initiator_id,
            </if>
            <if test="initiator_name != null">
                initiator_name,
            </if>
            <if test="auditor_id != null">
                auditor_id,
            </if>
            <if test="auditor_name != null">
                auditor_name,
            </if>
            <if test="refund_amount != null">
                refund_amount,
            </if>
            <if test="refund_date != null">
                refund_date,
            </if>
            <if test="refund_reason != null">
                refund_reason,
            </if>
            <if test="refund_apply_account_id != null">
                refund_apply_account_id,
            </if>
            <if test="start_time != null">
                start_time,
            </if>
            <if test="end_time != null">
                end_time,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="advances_interest != null">
                advances_interest,
            </if>
            <if test="other_interest != null">
                other_interest,
            </if>
            <if test="penalty_interest != null">
                penalty_interest,
            </if>
            <if test="path != null">
                path,
            </if>
            <if test="refund_cause != null">
                refund_cause,
            </if>
            <if test="retrun_reason != null">
                retrun_reason,
            </if>
            <if test="return_text != null">
                return_text,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="order_id != null">
                #{order_id,jdbcType=BIGINT},
            </if>
            <if test="initiator_id != null">
                #{initiator_id,jdbcType=BIGINT},
            </if>
            <if test="initiator_name != null">
                #{initiator_name,jdbcType=VARCHAR},
            </if>
            <if test="auditor_id != null">
                #{auditor_id,jdbcType=BIGINT},
            </if>
            <if test="auditor_name != null">
                #{auditor_name,jdbcType=VARCHAR},
            </if>
            <if test="refund_amount != null">
                #{refund_amount,jdbcType=DECIMAL},
            </if>
            <if test="refund_date != null">
                #{refund_date,jdbcType=DATE},
            </if>
            <if test="refund_reason != null">
                #{refund_reason,jdbcType=TINYINT},
            </if>
            <if test="refund_apply_account_id != null">
                #{refund_apply_account_id,jdbcType=BIGINT},
            </if>
            <if test="start_time != null">
                #{start_time,jdbcType=TIMESTAMP},
            </if>
            <if test="end_time != null">
                #{end_time,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="advances_interest != null">
                #{advances_interest,jdbcType=DECIMAL},
            </if>
            <if test="other_interest != null">
                #{other_interest,jdbcType=DECIMAL},
            </if>
            <if test="penalty_interest != null">
                #{penalty_interest,jdbcType=DECIMAL},
            </if>
            <if test="path != null">
                #{path,jdbcType=LONGVARCHAR},
            </if>
            <if test="refund_cause != null">
                #{refund_cause,jdbcType=TINYINT},
            </if>
            <if test="retrun_reason != null">
                #{retrun_reason,jdbcType=TINYINT},
            </if>
            <if test="return_text != null">
                #{return_text,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yunche.loan.domain.entity.LoanRefundApplyDO">
        update loan_refund_apply
        <set>
            <if test="order_id != null">
                order_id = #{order_id,jdbcType=BIGINT},
            </if>
            <if test="initiator_id != null">
                initiator_id = #{initiator_id,jdbcType=BIGINT},
            </if>
            <if test="initiator_name != null">
                initiator_name = #{initiator_name,jdbcType=VARCHAR},
            </if>
            <if test="auditor_id != null">
                auditor_id = #{auditor_id,jdbcType=BIGINT},
            </if>
            <if test="auditor_name != null">
                auditor_name = #{auditor_name,jdbcType=VARCHAR},
            </if>
            <if test="refund_amount != null">
                refund_amount = #{refund_amount,jdbcType=DECIMAL},
            </if>
            <if test="refund_date != null">
                refund_date = #{refund_date,jdbcType=DATE},
            </if>
            <if test="refund_reason != null">
                refund_reason = #{refund_reason,jdbcType=TINYINT},
            </if>
            <if test="refund_apply_account_id != null">
                refund_apply_account_id = #{refund_apply_account_id,jdbcType=BIGINT},
            </if>
            <if test="start_time != null">
                start_time = #{start_time,jdbcType=TIMESTAMP},
            </if>
            <if test="end_time != null">
                end_time = #{end_time,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="advances_interest != null">
                advances_interest = #{advances_interest,jdbcType=DECIMAL},
            </if>
            <if test="other_interest != null">
                other_interest = #{other_interest,jdbcType=DECIMAL},
            </if>
            <if test="penalty_interest != null">
                penalty_interest = #{penalty_interest,jdbcType=DECIMAL},
            </if>
            <if test="path != null">
                path = #{path,jdbcType=LONGVARCHAR},
            </if>
            <if test="refund_cause != null">
                refund_cause = #{refund_cause,jdbcType=TINYINT},
            </if>
            <if test="retrun_reason != null">
                retrun_reason = #{retrun_reason,jdbcType=TINYINT},
            </if>
            <if test="return_text != null">
                return_text = #{return_text,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yunche.loan.domain.entity.LoanRefundApplyDO">
        update loan_refund_apply
        set order_id = #{order_id,jdbcType=BIGINT},
        initiator_id = #{initiator_id,jdbcType=BIGINT},
        initiator_name = #{initiator_name,jdbcType=VARCHAR},
        auditor_id = #{auditor_id,jdbcType=BIGINT},
        auditor_name = #{auditor_name,jdbcType=VARCHAR},
        refund_amount = #{refund_amount,jdbcType=DECIMAL},
        refund_date = #{refund_date,jdbcType=DATE},
        refund_reason = #{refund_reason,jdbcType=TINYINT},
        refund_apply_account_id = #{refund_apply_account_id,jdbcType=BIGINT},
        start_time = #{start_time,jdbcType=TIMESTAMP},
        end_time = #{end_time,jdbcType=TIMESTAMP},
        status = #{status,jdbcType=TINYINT},
        advances_interest = #{advances_interest,jdbcType=DECIMAL},
        other_interest = #{other_interest,jdbcType=DECIMAL},
        penalty_interest = #{penalty_interest,jdbcType=DECIMAL},
        path = #{path,jdbcType=LONGVARCHAR},
        refund_cause = #{refund_cause,jdbcType=TINYINT},
        retrun_reason = #{retrun_reason,jdbcType=TINYINT},
        return_text = #{return_text,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yunche.loan.domain.entity.LoanRefundApplyDO">
        update loan_refund_apply
        set order_id = #{order_id,jdbcType=BIGINT},
        initiator_id = #{initiator_id,jdbcType=BIGINT},
        initiator_name = #{initiator_name,jdbcType=VARCHAR},
        auditor_id = #{auditor_id,jdbcType=BIGINT},
        auditor_name = #{auditor_name,jdbcType=VARCHAR},
        refund_amount = #{refund_amount,jdbcType=DECIMAL},
        refund_date = #{refund_date,jdbcType=DATE},
        refund_reason = #{refund_reason,jdbcType=TINYINT},
        refund_apply_account_id = #{refund_apply_account_id,jdbcType=BIGINT},
        start_time = #{start_time,jdbcType=TIMESTAMP},
        end_time = #{end_time,jdbcType=TIMESTAMP},
        status = #{status,jdbcType=TINYINT},
        advances_interest = #{advances_interest,jdbcType=DECIMAL},
        other_interest = #{other_interest,jdbcType=DECIMAL},
        penalty_interest = #{penalty_interest,jdbcType=DECIMAL},
        refund_cause = #{refund_cause,jdbcType=TINYINT},
        retrun_reason = #{retrun_reason,jdbcType=TINYINT},
        return_text = #{return_text,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>


    <!--lastByOrderId-->
    <select id="lastByOrderId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from loan_refund_apply
        where order_id = #{orderId,jdbcType=BIGINT}
        ORDER BY start_time DESC
        limit 1
    </select>
</mapper>