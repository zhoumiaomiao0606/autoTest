<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunche.loan.mapper.ChartDOMapper">
    <!--=======================================报表社会征信查询明细=========================================-->
    <select id="selectSocialCreditChartVO" parameterType="com.yunche.loan.domain.param.SocialCreditChartParam"  resultType="com.yunche.loan.domain.vo.SocialCreditChartVO">
        select tab.*
        from
        (
        SELECT
        (SELECT biz_area.name FROM biz_area_rela_partner LEFT JOIN biz_area ON biz_area_rela_partner.biz_area_id = biz_area.id WHERE biz_area_rela_partner.partner_id = principal_partner.id ORDER BY biz_area_rela_partner.gmt_create limit 1 ) AS biz_area,
        (SELECT biz_area.id FROM  biz_area_rela_partner LEFT JOIN biz_area ON biz_area_rela_partner.biz_area_id = biz_area.id WHERE biz_area_rela_partner.partner_id = principal_partner.id ORDER BY biz_area_rela_partner.gmt_create limit 1 ) AS biz_area_id,

        principal_area.area_name,
        CASE
        WHEN customer.cust_type = 1 THEN
        '主贷人'
        WHEN customer.cust_type = 2 THEN
        '共贷人'
        WHEN customer.cust_type = 3 THEN
        '担保人'
        WHEN customer.cust_type = 4 THEN
        '紧急联系人'
        ELSE
        NULL
        END AS cust_type,
        customer. NAME AS customer_name,
        customer.id_card AS customer_id_card,
        customer.mobile AS customer_mobile,
        principal_base.bank,
        principal_partner. NAME AS partner_name,
        employee. NAME AS salesman_name,
        principal. NAME AS principal_name,
        CASE
        WHEN customer.id = customer.principal_cust_id THEN
        '本人'
        WHEN customer.cust_relation = 0 THEN
        '本人'
        WHEN customer.cust_relation = 1 THEN
        '配偶'
        WHEN customer.cust_relation = 2 THEN
        '父母'
        WHEN customer.cust_relation = 3 THEN
        '子女'
        WHEN customer.cust_relation = 4 THEN
        '兄弟姐妹'
        WHEN customer.cust_relation = 5 THEN
        '亲戚'
        WHEN customer.cust_relation = 6 THEN
        '朋友'
        WHEN customer.cust_relation = 7 THEN
        '同学'
        WHEN customer.cust_relation = 8 THEN
        '同事'
        WHEN customer.cust_relation = 9 THEN
        '其他'
        ELSE
        NULL
        END AS cust_relation,
        CASE
        WHEN credit_info.result = 0 THEN
        '不通过'
        WHEN credit_info.result = 1 THEN
        '通过'
        WHEN credit_info.result = 2 THEN
        '关注'
        WHEN credit_info.result = 3 THEN
        '银行退回'
        ELSE
        NULL
        END AS credit_result,
        CASE
        WHEN customer.guarantee_type = 1 THEN
        '银行担保'
        WHEN customer.guarantee_type = 2 THEN
        '内部担保'
        ELSE
        NULL
        END AS guaranteeType,
        (
        SELECT
        create_time
        FROM
        loan_process_log
        WHERE
        task_definition_key = 'usertask_credit_apply'
        AND order_id = principal_orders.id
        ORDER BY
        create_time
        LIMIT 1
        ) AS credit_apply_time,
        credit_info.gmt_modify AS credit_query_time,
        (
        SELECT
        user_name
        FROM
        loan_process_log
        WHERE
        task_definition_key = 'usertask_bank_credit_record'
        AND order_id = principal_orders.id
        ORDER BY
        create_time
        LIMIT 1
        ) AS gmt_user
        FROM
        loan_customer customer
        LEFT JOIN loan_credit_info credit_info ON credit_info.customer_id = customer.id
        LEFT JOIN loan_customer principal ON customer.principal_cust_id = principal.id
        LEFT JOIN loan_order principal_orders ON principal_orders.loan_customer_id = principal.id
        LEFT JOIN loan_base_info principal_base ON principal_orders.loan_base_info_id = principal_base.id
        LEFT JOIN partner principal_partner ON principal_partner.id = principal_base.partner_id
        LEFT JOIN base_area principal_area ON principal_area.area_id = principal_base.area_id
        LEFT JOIN employee employee ON employee.id = principal_base.salesman_id
        LEFT JOIN loan_process ON principal_orders.id = loan_process.order_id
        <where>
            and ((loan_process.order_status = 1 and credit_info.type = 2)
            or(loan_process.order_status = 1 and loan_process.social_credit_record =2 and if((select count(*) from loan_credit_info where customer_id = customer.id and type =2) = 1,false,true)))
            <if test="startDate !=null and startDate != '' and endDate != null and endDate !=''">
                and credit_info.gmt_modify between #{startDate} and #{endDate}
            </if>
            <if test="partnerList != null and partnerList.size() > 0">
                and
                principal_base.partner_id in
                <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="bankList != null and bankList.size() > 0">
                and
                principal_base.bank in
                <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            AND customer.cust_type in (1,2,3) and customer.status = 0
        </where>
        ) tab
        where 1=1

            <if test="bizAreaList !=null and bizAreaList.size() > 0" >
                and tab.biz_area_id in
                <foreach item="item" index="index" collection="bizAreaList" separator=","  open="(" close=")">
                    #{item}
                </foreach>
            </if>



        <if test="orderBy == 1">
            order by tab.credit_apply_time desc
        </if>

        <if test="orderBy == 2 ">
            order by tab.credit_apply_time ASC
        </if>


    </select>

    <!--=======================================报表银行征信查询明细=========================================-->
    <select id="selectBankCreditChartVO" parameterType="com.yunche.loan.domain.param.BankCreditChartParam"  resultType="com.yunche.loan.domain.vo.BankCreditChartVO">
        select tab.*
        from
        (
        SELECT
        (SELECT biz_area.name FROM  biz_area_rela_partner LEFT JOIN biz_area ON biz_area_rela_partner.biz_area_id = biz_area.id WHERE biz_area_rela_partner.partner_id = principal_partner.id ORDER BY biz_area_rela_partner.gmt_create limit 1 ) AS biz_area,
        (SELECT biz_area.id FROM  biz_area_rela_partner LEFT JOIN biz_area ON biz_area_rela_partner.biz_area_id = biz_area.id WHERE biz_area_rela_partner.partner_id = principal_partner.id ORDER BY biz_area_rela_partner.gmt_create limit 1 ) AS biz_area_id,

        principal_area.area_name,
        -- 客户类型: 1-主贷人;2-共贷人;3-担保人;4-紧急联系人;
        CASE
        WHEN customer.cust_type = 1 THEN
        '主贷人'
        WHEN customer.cust_type = 2 THEN
        '共贷人'
        WHEN customer.cust_type = 3 THEN
        '担保人'
        WHEN customer.cust_type = 4 THEN
        '紧急联系人'
        ELSE
        NULL
        END AS cust_type,
        customer. NAME AS customer_name,
        customer.id_card AS customer_id_card,
        customer.mobile AS customer_mobile,
        principal_base.bank,
        principal_partner. NAME AS partner_name,
        employee. NAME AS salesman_name,
        principal. NAME AS principal_name,
        -- 与主贷人关系：0-本人;1-配偶;2-父母;3-子女;4-兄弟姐妹;5-亲戚;6-朋友;7-同学;8-同事;9-其它;
        CASE
        WHEN customer.id = customer.principal_cust_id THEN
        '本人'
        WHEN customer.cust_relation = 0 THEN
        '本人'
        WHEN customer.cust_relation = 1 THEN
        '配偶'
        WHEN customer.cust_relation = 2 THEN
        '父母'
        WHEN customer.cust_relation = 3 THEN
        '子女'
        WHEN customer.cust_relation = 4 THEN
        '兄弟姐妹'
        WHEN customer.cust_relation = 5 THEN
        '亲戚'
        WHEN customer.cust_relation = 6 THEN
        '朋友'
        WHEN customer.cust_relation = 7 THEN
        '同学'
        WHEN customer.cust_relation = 8 THEN
        '同事'
        WHEN customer.cust_relation = 9 THEN
        '其他'
        ELSE
        NULL
        END AS cust_relation,
        -- 征信结果: 0-不通过;1-通过;2-关注;
        CASE
        WHEN credit_info.result = 0 THEN
        '不通过'
        WHEN credit_info.result = 1 THEN
        '通过'
        WHEN credit_info.result = 2 THEN
        '关注'
        WHEN credit_info.result = 3 THEN
        '银行退回'
        ELSE
        NULL
        END AS credit_result,
        CASE
        WHEN customer.guarantee_type = 1 THEN
        '银行担保'
        WHEN customer.guarantee_type = 2 THEN
        '内部担保'
        ELSE
        NULL
        END  AS guaranteeType,
        (
        SELECT
        create_time
        FROM
        loan_process_log
        WHERE
        task_definition_key = 'usertask_credit_apply'
        AND order_id = principal_orders.id
        ORDER BY
        create_time
        LIMIT 1
        ) AS credit_apply_time,
        credit_info.gmt_modify AS credit_query_time,
        (
        SELECT
        user_name
        FROM
        loan_process_log
        WHERE
        task_definition_key = 'usertask_bank_credit_record'
        AND order_id = principal_orders.id
        ORDER BY
        create_time
        LIMIT 1
        ) AS gmt_user
        FROM
        loan_customer customer
        LEFT JOIN loan_credit_info credit_info ON credit_info.customer_id = customer.id
        LEFT JOIN loan_customer principal ON customer.principal_cust_id = principal.id
        LEFT JOIN loan_order principal_orders ON principal_orders.loan_customer_id = principal.id
        LEFT JOIN loan_base_info principal_base ON principal_orders.loan_base_info_id = principal_base.id
        LEFT JOIN partner principal_partner ON principal_partner.id = principal_base.partner_id
        LEFT JOIN base_area principal_area ON principal_area.area_id = principal_base.area_id
        LEFT JOIN employee employee ON employee.id = principal_base.salesman_id
        LEFT JOIN loan_process ON principal_orders.id = loan_process.order_id

        <where>
            and (credit_info.type = 1 OR credit_info.type is NULL) AND loan_process.bank_credit_record IN (1,2)

            <if test="startDate !=null and startDate !=''  and endDate !=null and endDate !=''">
                and credit_info.gmt_modify between #{startDate} and #{endDate}
            </if>

            <if test="partnerList != null and partnerList.size() > 0">
                and
                principal_base.partner_id in
                <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="bankList != null and bankList.size() > 0">
                and
                principal_base.bank in
                <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            AND customer.cust_type  in  (1,2,3) and customer.status = 0
        </where>
        ) tab
        <where>
            <if test="bizAreaList !=null and bizAreaList.size() > 0" >
                tab.biz_area_id in
                <foreach item="item" index="index" collection="bizAreaList" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        <if test="orderBy == 1" >
            order by credit_apply_time desc
        </if>

        <if test="orderBy == 2  or orderBy == null  or orderBy ==''" >
            order by credit_apply_time ASC
        </if>
    </select>

    <!--=======================================报表 财务垫款明细查询=========================================-->
    <select id="selectFinancialDepartmentRemitDetailChartVO" parameterType="com.yunche.loan.domain.param.FinancialDepartmentRemitDetailChartParam"  resultType="com.yunche.loan.domain.vo.FinancialDepartmentRemitDetailChartVO" >
        select tab.*
        from
        (
        SELECT
        (SELECT biz_area.name FROM  biz_area_rela_partner LEFT JOIN biz_area ON biz_area_rela_partner.biz_area_id = biz_area.id WHERE biz_area_rela_partner.partner_id = partner.id ORDER BY biz_area_rela_partner.gmt_create limit 1 ) AS biz_area,
        (SELECT biz_area.id FROM  biz_area_rela_partner LEFT JOIN biz_area ON biz_area_rela_partner.biz_area_id = biz_area.id WHERE biz_area_rela_partner.partner_id = partner.id ORDER BY biz_area_rela_partner.gmt_create limit 1 ) AS biz_area_id,

        base_area.area_name,
        customer. NAME AS customer_name,
        customer.id_card AS customer_id_card,
        customer.mobile AS customer_mobile,
        loaninfo.bank,
        partner. NAME AS partner_name,
        employee. NAME AS salesman_name,
        case when car.car_type = 0 then '新车'
        when car.car_type = 1 then '二手车'
        else '其他' end as car_type,
        loan_financial_plan.car_price AS price,
        loan_financial_plan.sign_rate,
        loan_financial_plan.loan_amount,
        loan_financial_plan.down_payment_money,
        loan_financial_plan.bank_period_principal,
        remit_details.remit_amount,
        (
        SELECT
        create_time
        FROM
        loan_process_log
        WHERE
        task_definition_key = 'usertask_credit_apply'
        AND order_id = orders.id
        ORDER BY
        create_time
        LIMIT 1
        ) AS gmt_create,
        (
        SELECT
        loan_process_log.create_time
        FROM
        loan_process_log
        WHERE
        order_id = orders.id
        AND task_definition_key = 'usertask_remit_review'
        ORDER BY
        create_time DESC
        LIMIT 1
        ) as submitTime,
        (
        SELECT
        loan_process_log.user_name
        FROM
        loan_process_log
        WHERE
        order_id = orders.id
        AND task_definition_key = 'usertask_remit_review'
        ORDER BY
        create_time DESC
        LIMIT 1
        ) as username,
        loan_financial_plan.loan_time as loan_time
        FROM
        loan_order orders
        LEFT JOIN loan_customer customer ON orders.loan_customer_id = customer.id
        LEFT JOIN loan_base_info loaninfo ON orders.loan_base_info_id = loaninfo.id
        LEFT JOIN base_area ON loaninfo.area_id = base_area.area_id
        LEFT JOIN loan_car_info car ON orders.loan_car_info_id = car.id
        LEFT JOIN car_detail cardetail ON cardetail.id = car.car_detail_id
        LEFT JOIN loan_financial_plan ON orders.loan_financial_plan_id = loan_financial_plan.id
        LEFT JOIN remit_details ON orders.remit_details_id = remit_details.id
        LEFT JOIN loan_process process ON orders.id = process.order_id
        LEFT JOIN loan_base_info base ON orders.loan_base_info_id = base.id
        LEFT JOIN employee employee ON base.salesman_id = employee.id
        LEFT JOIN partner partner ON partner.id = base.partner_id
        where 1=1
        and process.remit_review = 1
        <if test="partnerList != null and partnerList.size() > 0">
            and
            base.partner_id in
            <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="bankList != null and bankList.size() > 0">
            and
            base.bank in
            <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="(startDate !=null and  startDate != '')or (endDate !=null and endDate != '')"  >
            having
            <if test="startDate !=null and  startDate != ''" >
                gmt_create &gt;= #{startDate}
            </if>

            <if test="startDate !=null and endDate !=null and endDate != '' and startDate != ''" >
                AND
            </if>

            <if test="endDate !=null and endDate != ''" >
                gmt_create &lt;= #{endDate}
            </if>

        </if>

        order by submitTime desc
        ) tab
        <where>
            <if test="bizAreaList !=null and bizAreaList.size() > 0" >
                tab.biz_area_id in
                <foreach item="item" index="index" collection="bizAreaList" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        <if test="orderBy == 1">
            order by gmt_create desc
        </if>

        <if test="orderBy == 2 ">
            order by gmt_create ASC
        </if>

    </select>

    <!--=======================================报表 抵押超期=========================================-->
    <select id="selectMortgageOverdueChartVO" parameterType="com.yunche.loan.domain.param.MortgageOverdueParam"  resultType="com.yunche.loan.domain.vo.MortgageOverdueChartVO" >
        select tab.*
        from
        (
        SELECT
        (SELECT biz_area.name FROM  biz_area_rela_partner LEFT JOIN biz_area ON biz_area_rela_partner.biz_area_id = biz_area.id WHERE biz_area_rela_partner.partner_id = partner.id ORDER BY biz_area_rela_partner.gmt_create limit 1 ) AS biz_area,
        (SELECT biz_area.id FROM  biz_area_rela_partner LEFT JOIN biz_area ON biz_area_rela_partner.biz_area_id = biz_area.id WHERE biz_area_rela_partner.partner_id = partner.id ORDER BY biz_area_rela_partner.gmt_create limit 1 ) AS biz_area_id,

        base_area.area_name,
        partner.NAME AS partner_name,
        customer.NAME AS customer_name,
        customer.id_card,
        customer.mobile AS customer_mobile,
        (
        SELECT
        create_time
        FROM
        loan_process_log
        WHERE
        task_definition_key = 'usertask_credit_apply'
        AND order_id = orders.id
        ORDER BY
        create_time
        LIMIT 1
        ) AS credit_apply_time,
        loanbaseinfo.bank,
        CASE WHEN car.car_type = 0 THEN
        '新车'
        WHEN car.car_type = 1 THEN
        '二手车' ELSE '其他'
        END AS car_type,
        vehicle_information.license_plate_number,
        cardetail.price,
        loan_financial_plan.loan_amount,
        loan_financial_plan.bank_period_principal,
        ( SELECT create_time FROM loan_process_log WHERE orders.id = loan_process_log.order_id AND loan_process_log.task_definition_key = 'usertask_remit_review' ORDER BY id DESC LIMIT 1 ) AS remitdate,
        bank_lend_record.lend_date,
        ( SELECT loan_data_flow.express_send_date FROM loan_data_flow WHERE orders.id = loan_data_flow.order_id AND type = 12 ORDER BY id DESC LIMIT 1 ) AS sendMaterialToParter_date,
        ( SELECT loan_data_flow.express_receive_date FROM loan_data_flow WHERE orders.id = loan_data_flow.order_id AND type = 12 ORDER BY id DESC LIMIT 1 ) AS ParterReceiveMaterial_date,
        CASE WHEN process.apply_license_plate_deposit_info = 1 THEN
        '已提交'
        WHEN process.apply_license_plate_deposit_info = 2 THEN
        '未提交'
        WHEN process.apply_license_plate_deposit_info = 3 THEN
        '已打回' ELSE '未知'

        END AS apply_license_plate_deposit_info,
        CASE WHEN process.apply_license_plate_deposit_info  !=1 THEN
        NULL ELSE a.apply_license_plate_deposit_date
        END AS depositTime,

        CASE WHEN a.apply_license_plate_deposit_date IS NULL THEN
        floor(
        ( UNIX_TIMESTAMP( DATE_FORMAT( now( ), '%Y-%m-%d' )) - UNIX_TIMESTAMP( DATE_FORMAT( lend.lend_date, '%Y-%m-%d' ) ) ) / ( 24 * 60 * 60 )
        )
        ELSE
        floor
        (
        (UNIX_TIMESTAMP( DATE_FORMAT(a.apply_license_plate_deposit_date, '%Y-%m-%d'  )) - UNIX_TIMESTAMP( DATE_FORMAT( lend.lend_date, '%Y-%m-%d' ) ) ) / ( 24 * 60 * 60 )
        )
        END AS depositOverdueTime,
        ( SELECT user_name FROM loan_process_log WHERE order_id = orders.id AND task_definition_key = 'usertask_apply_license_plate_deposit_info' ORDER BY create_time DESC LIMIT 1 ) AS submitUser

        FROM
        loan_order orders
        LEFT JOIN loan_customer customer ON orders.loan_customer_id = customer.id
        LEFT JOIN bank_lend_record lend ON lend.id = orders.bank_lend_record_id
        LEFT JOIN loan_base_info loanbaseinfo ON orders.loan_base_info_id = loanbaseinfo.id
        LEFT JOIN base_area ON loanbaseinfo.area_id = base_area.area_id
        LEFT JOIN loan_car_info car ON orders.loan_car_info_id = car.id
        LEFT JOIN car_detail cardetail ON cardetail.id = car.car_detail_id
        LEFT JOIN vehicle_information ON vehicle_information.id = orders.vehicle_information_id
        LEFT JOIN loan_financial_plan ON orders.loan_financial_plan_id = loan_financial_plan.id
        LEFT JOIN remit_details ON orders.remit_details_id = remit_details.id
        LEFT JOIN bank_lend_record ON orders.bank_lend_record_id = bank_lend_record.id
        LEFT JOIN loan_process process ON orders.id = process.order_id
        LEFT JOIN loan_base_info base ON orders.loan_base_info_id = base.id
        LEFT JOIN employee employee ON base.salesman_id = employee.id
        LEFT JOIN partner partner ON partner.id = base.partner_id
        LEFT JOIN apply_license_plate_deposit_info a ON a.id = orders.apply_license_plate_deposit_info_id

        <where>
            and process.apply_license_plate_deposit_info != 0
            <if test="partnerList != null and partnerList.size() > 0">
                and
                base.partner_id in
                <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="bankList != null and bankList.size() > 0">
                and
                base.bank in
                <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        <if test="(startDate !=null and  startDate != '') or (endDate !=null and endDate != '')"  >
            having
            <if test="startDate !=null and  startDate != '' " >
                credit_apply_time &gt;= #{startDate}
            </if>

            <if test="startDate !=null and  startDate != '' and endDate !=null and endDate != ''" >
                AND
            </if>

            <if test="endDate !=null and endDate != ''" >
                credit_apply_time &lt;= #{endDate}
            </if>

        </if>
        ) tab
        <where>
            <if test="bizAreaList !=null and bizAreaList.size() > 0" >
                tab.biz_area_id in
                <foreach item="item" index="index" collection="bizAreaList" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        <if test="orderBy == 1">
            order by tab.credit_apply_time desc
        </if>

        <if test="orderBy == 2 ">
            order by tab.credit_apply_time ASC
        </if>
    </select>


    <!--=======================================报表资料审核明细查询=========================================-->
    <select id="selectMaterialReviewChartVO" parameterType="com.yunche.loan.domain.param.MaterialReviewParam"  resultType="com.yunche.loan.domain.vo.MaterialReviewChartVO" >
        SELECT
        t.*,
        CASE

        WHEN t.express_receive_date IS NOT NULL THEN
        floor(
        ( UNIX_TIMESTAMP( DATE_FORMAT( t.express_receive_date, '%Y-%m-%d' ) ) - UNIX_TIMESTAMP( DATE_FORMAT( t.remitdate, '%Y-%m-%d' ) ) ) / ( 24 * 60 * 60 )
        ) ELSE floor(
        ( UNIX_TIMESTAMP( DATE_FORMAT( now( ), '%Y-%m-%d' ) ) - UNIX_TIMESTAMP( DATE_FORMAT( t.remitdate, '%Y-%m-%d' ) ) ) / ( 24 * 60 * 60 )
        )
        END AS remitOverdueTime,
        CASE

        WHEN t.complete_material_date IS NOT NULL THEN
        floor(
        ( UNIX_TIMESTAMP( DATE_FORMAT( t.complete_material_date, '%Y-%m-%d' ) ) - UNIX_TIMESTAMP( DATE_FORMAT( t.remitdate, '%Y-%m-%d' ) ) ) / ( 24 * 60 * 60 )
        ) ELSE floor(
        ( UNIX_TIMESTAMP( DATE_FORMAT( now( ), '%Y-%m-%d' ) ) - UNIX_TIMESTAMP( DATE_FORMAT( t.remitdate, '%Y-%m-%d' ) ) ) / ( 24 * 60 * 60 )
        )
        END AS revievOverdueTime
        FROM
        (
        SELECT
        (SELECT biz_area.name FROM  biz_area_rela_partner LEFT JOIN biz_area ON biz_area_rela_partner.biz_area_id = biz_area.id WHERE biz_area_rela_partner.partner_id = partner.id ORDER BY biz_area_rela_partner.gmt_create limit 1 ) AS biz_area,
        (SELECT biz_area.id FROM  biz_area_rela_partner LEFT JOIN biz_area ON biz_area_rela_partner.biz_area_id = biz_area.id WHERE biz_area_rela_partner.partner_id = partner.id ORDER BY biz_area_rela_partner.gmt_create limit 1 ) AS biz_area_id,

        base_area.area_name,
        partner.NAME AS partner_name,
        customer.NAME AS customer_name,
        customer.id_card,
        loan_base_info.bank,
        (
        SELECT
        create_time
        FROM
        loan_process_log
        WHERE
        task_definition_key = 'usertask_credit_apply'
        AND order_id = orders.id
        ORDER BY
        create_time
        LIMIT 1
        ) AS credit_apply_time,
        loan_financial_plan.bank_period_principal,
        ( SELECT create_time FROM loan_process_log WHERE orders.id = loan_process_log.order_id AND loan_process_log.task_definition_key = 'usertask_remit_review' ORDER BY id DESC LIMIT 1 ) AS remitdate,
        ( SELECT loan_data_flow.express_receive_date FROM loan_data_flow WHERE orders.id = loan_data_flow.order_id AND type = 2 ORDER BY loan_data_flow.id DESC LIMIT 1 ) AS express_receive_date,
        DATE_FORMAT(material_audit.complete_material_date,'%Y-%m-%d') as complete_material_date,
        ( SELECT create_time FROM loan_process_log WHERE orders.id = loan_process_log.order_id AND loan_process_log.task_definition_key = 'usertask_material_review' ORDER BY id DESC LIMIT 1 ) AS materialReviewSubmit,
        CASE

        WHEN loan_process.material_review = 1 THEN
        '已提交'
        WHEN loan_process.material_review = 2 THEN
        '未提交'
        WHEN loan_process.material_review = 3 THEN
        '已打回'
        ELSE '未知' END AS material_review,
        ( SELECT count( 1 ) FROM loan_info_supplement WHERE loan_info_supplement.order_id = orders.id ) AS supplementCount,
        ( SELECT GROUP_CONCAT( DATE_FORMAT( end_time, '%Y-%m-%d  ' ), content ORDER BY id DESC ) FROM loan_info_supplement WHERE loan_info_supplement.order_id = orders.id ) AS supplementContent,
        (
        SELECT
        GROUP_CONCAT( DATE_FORMAT( start_time, '%Y-%m-%d至' ), DATE_FORMAT( end_time, '%Y-%m-%d' ) ORDER BY id DESC )
        FROM
        loan_info_supplement
        WHERE
        loan_info_supplement.order_id = orders.id
        ) AS supplementTime,
        ( SELECT create_time FROM loan_process_log WHERE orders.id = loan_process_log.order_id AND task_definition_key = 'usertask_vehicle_information' ORDER BY id DESC LIMIT 1 ) AS carMaterialCreateTime,
        ( SELECT loan_data_flow.express_send_date FROM loan_data_flow WHERE orders.id = loan_data_flow.order_id AND (type = 3 or type = 4) ORDER BY id DESC LIMIT 1 ) AS express_sendbank_date
        FROM
        loan_order orders
        LEFT JOIN loan_customer customer ON orders.loan_customer_id = customer.id
        LEFT JOIN loan_base_info ON orders.loan_base_info_id = loan_base_info.id
        LEFT JOIN loan_financial_plan ON orders.loan_financial_plan_id = loan_financial_plan.id
        LEFT JOIN loan_base_info base ON orders.loan_base_info_id = base.id
        LEFT JOIN partner partner ON partner.id = base.partner_id
        LEFT JOIN remit_details ON orders.remit_details_id = remit_details.id
        LEFT JOIN base_area ON loan_base_info.area_id = base_area.area_id
        LEFT JOIN loan_process ON orders.id = loan_process.order_id
        LEFT JOIN material_audit ON orders.material_audit_id = material_audit.id

        <where>
            and loan_process.material_review != 0
            <if test="partnerList != null and partnerList.size() > 0">
                and
                base.partner_id in
                <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="bankList != null and bankList.size() > 0">
                and
                base.bank in
                <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

        </where>
        ) t
        where 1=1
        <if test="bizAreaList !=null and bizAreaList.size() > 0" >
            and t.biz_area_id in
            <foreach item="item" index="index" collection="bizAreaList" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        <if test="startDate != null and startDate != ''">
            AND TO_DAYS(t.credit_apply_time) &gt;= TO_DAYS(#{startDate})
        </if>
        <if test="endDate != null and endDate !=''">
            AND TO_DAYS(t.credit_apply_time) &lt;= TO_DAYS(#{endDate})
        </if>
        order by t.express_receive_date desc
    </select>

    <!--=======================================报表 待垫款明细查询=========================================-->
    <select id="selectAwaitRemitDetailChartVO" parameterType="com.yunche.loan.domain.param.AwaitRemitDetailChartParam"  resultType="com.yunche.loan.domain.vo.AwaitRemitDetailChartVO" >

        SELECT
        customer. NAME AS customer_name,
        customer.id_card AS customer_id_card,
        partner. NAME AS partner_name,
        employee. NAME AS salesman_name,
        loan_financial_plan.sign_rate,
        loan_financial_plan.loan_amount,
        loan_financial_plan.bank_period_principal,
         (
        SELECT
        loan_process_log.create_time
        FROM
        loan_process_log
        WHERE
        order_id = orders.id
        AND task_definition_key = 'usertask_business_review'
        ORDER BY
        create_time DESC
        LIMIT 1
        ) as operationDate,
           (
        SELECT
        loan_process_log.user_name
        FROM
        loan_process_log
        WHERE
        order_id = orders.id
        AND task_definition_key = 'usertask_business_review'
        ORDER BY
        create_time DESC
        LIMIT 1
        ) as operationUser,
        remit_details.remit_amount
        FROM
        loan_order orders
        LEFT JOIN loan_customer customer ON orders.loan_customer_id = customer.id
        LEFT JOIN loan_base_info loaninfo ON orders.loan_base_info_id = loaninfo.id
        LEFT JOIN base_area ON loaninfo.area_id = base_area.area_id
        LEFT JOIN loan_car_info car ON orders.loan_car_info_id = car.id
        LEFT JOIN car_detail cardetail ON cardetail.id = car.car_detail_id
        LEFT JOIN loan_financial_plan ON orders.loan_financial_plan_id = loan_financial_plan.id
        LEFT JOIN remit_details ON orders.remit_details_id = remit_details.id
        LEFT JOIN loan_process process ON orders.id = process.order_id
        LEFT JOIN loan_base_info base ON orders.loan_base_info_id = base.id
        LEFT JOIN employee employee ON base.salesman_id = employee.id
        LEFT JOIN partner partner ON partner.id = base.partner_id
        where 1=1
        and process.business_review = 1
        <if test="startDate !=null and endDate !=null and startDate !='' and endDate !=''" >
            having operationDate between #{startDate} and #{endDate}
        </if>

    </select>

    <!--=======================================报表 公司垫款订单明细查询=========================================-->
    <select id="selectCompanyRemitDetailChartVO" parameterType="com.yunche.loan.domain.param.CompanyRemitDetailChartParam"  resultType="com.yunche.loan.domain.vo.CompanyRemitDetailChartVO" >

        SELECT
        orders.id AS orderId,
        customer.NAME AS customer_name,
        customer.id_card AS customer_id_card,
        customer.mobile AS customer_mobile,
        loaninfo.bank,
        partner. NAME AS partner_name,
        employee. NAME AS salesman_name,
        case when car.car_type = 0 then '新车'
        when car.car_type = 1 then '二手车'
        else '其他' end as car_type,
        loan_financial_plan.car_price AS price,
        loan_financial_plan.sign_rate,
        loan_financial_plan.loan_amount,
        loan_financial_plan.down_payment_money,
        loan_financial_plan.bank_period_principal,
        remit_details.remit_amount,
        CASE
        WHEN parea.parent_area_id = '' OR parea.parent_area_id = NULL THEN
        CONCAT(area.parent_area_name,area.area_name)
        ELSE
        CONCAT(parea.parent_area_name,area.area_name) END
        AS apply_license_plate_area,
        (
        SELECT
        loan_process_log.create_time
        FROM
        loan_process_log
        WHERE
        order_id = orders.id
        AND task_definition_key = 'usertask_remit_review'
        ORDER BY
        create_time DESC
        LIMIT 1
        ) as submitTime,
        (
        SELECT
        loan_process_log.user_name
        FROM
        loan_process_log
        WHERE
        order_id = orders.id
        AND task_definition_key = 'usertask_remit_review'
        ORDER BY
        create_time DESC
        LIMIT 1
        ) as username
        FROM
        loan_order orders
        LEFT JOIN loan_customer customer ON orders.loan_customer_id = customer.id
        LEFT JOIN loan_base_info loaninfo ON orders.loan_base_info_id = loaninfo.id
        LEFT JOIN base_area ON loaninfo.area_id = base_area.area_id
        LEFT JOIN loan_car_info car ON orders.loan_car_info_id = car.id
        LEFT JOIN car_detail cardetail ON cardetail.id = car.car_detail_id
        LEFT JOIN loan_financial_plan ON orders.loan_financial_plan_id = loan_financial_plan.id
        LEFT JOIN remit_details ON orders.remit_details_id = remit_details.id
        LEFT JOIN loan_process process ON orders.id = process.order_id
        LEFT JOIN loan_base_info base ON orders.loan_base_info_id = base.id
        LEFT JOIN employee employee ON base.salesman_id = employee.id
        LEFT JOIN partner partner ON partner.id = base.partner_id

        LEFT JOIN vehicle_information ON orders.vehicle_information_id = vehicle_information.id
        LEFT JOIN base_area area on vehicle_information.apply_license_plate_area = area.area_id
        LEFT JOIN base_area parea ON area.parent_area_id = parea.area_id
        where 1=1
        and process.remit_review = 1
        <if test="startDate !=null and endDate !=null and startDate !='' and endDate !=''" >
            having submitTime between #{startDate} and #{endDate}
        </if>

    </select>
    <!-- 城站银行未抵押明细表 -->
    <select id="hzBankNotMortgage" resultType="com.yunche.loan.domain.vo.HzBankNotMortgageVO" parameterType="com.yunche.loan.domain.param.MaterialReviewParam">
        SELECT
        a.partnerCode,
        a.pName,
        a.cName,
        a.idCard,
        a.loanAmount,
        a.lendDate,
        a.infoCompanyToParDate,
        a.contractToBankDate,
        DATEDIFF(a.infoCompanyToParDate,a.contractCompanyToBankDate) as bankSealDays,
        DATEDIFF(now(),a.infoCompanyToParDate) as postDays,
        DATEDIFF(now(),a.lengDate) as notMortgageDays,
        '' as extendedRange,
        a.areaName,
        '' as mortgageChannelStatus,
        '' as overdueTypeReason,
        '' as followSituation
        FROM
        (
        SELECT
        par.partner_code AS partnerCode,
        par.`name` AS pName,
        cus.`name` AS cName,
        cus.id_card AS idCard,
        plan.loan_amount AS loanAmount,
        lend.lend_date AS lendDate,
        ( SELECT express_send_date FROM loan_data_flow WHERE type IN ( 11, 12 ) AND order_id = loan.id order by express_send_date desc limit 1) AS infoCompanyToParDate,
        ( SELECT express_receive_date FROM loan_data_flow WHERE type = 4 AND order_id = loan.id  order by express_receive_date desc limit 1 ) AS contractToBankDate,
        ( SELECT express_send_date FROM loan_data_flow WHERE type IN ( 3, 4 ) AND order_id = loan.id  order by express_send_date desc limit 1) AS contractCompanyToBankDate,
        area.area_name AS areaName,
        (SELECT biz_area.id FROM  biz_area_rela_partner LEFT JOIN biz_area ON biz_area_rela_partner.biz_area_id = biz_area.id WHERE biz_area_rela_partner.partner_id = par.id ORDER BY biz_area_rela_partner.gmt_create limit 1 ) AS biz_area_id,
        (
        SELECT
        loan_process_log.create_time
        FROM
        loan_process_log
        WHERE
        order_id = orders.id
        AND task_definition_key = 'usertask_remit_review'
        ORDER BY
        create_time DESC
        LIMIT 1
        ) as submitTime
        FROM
        loan_process process
        LEFT JOIN current_node_manager node ON node.order_id = process.order_id
        LEFT JOIN loan_order loan ON loan.id = process.order_id
        LEFT JOIN loan_base_info base ON base.id = loan.loan_base_info_id
        LEFT JOIN partner par ON par.id = base.partner_id
        LEFT JOIN loan_customer cus ON cus.id = loan_customer_id
        LEFT JOIN loan_financial_plan plan ON plan.id = loan.loan_financial_plan_id
        LEFT JOIN bank_lend_record lend ON lend.loan_order = loan.id
        LEFT JOIN base_area area ON area.area_id = base.area_id
        WHERE
        lend.id is not null
        AND process.apply_license_plate_deposit_info != 1
        <if test="partnerList != null and partnerList.size() > 0">
            and
            base.partner_id in
            <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="bankList != null and bankList.size() > 0">
            and
            base.bank in
            <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>

        ) a
        <where>
            <if test="bizAreaList !=null and bizAreaList.size() > 0" >
                a.biz_area_id in
                <foreach item="item" index="index" collection="bizAreaList" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
            <if test="startDate !=null and endDate !=null and startDate !='' and endDate !=''" >
                having a.lendDate between #{startDate} and #{endDate}
            </if>
        </where>
    </select>

    <!--业务服务部流转表 -->
    <select id="busDataFlow" parameterType="com.yunche.loan.domain.param.MaterialReviewParam" resultType="com.yunche.loan.domain.vo.BusDataFlowVO">
   select a.* from (
   SELECT
	base.bank,
	par.partner_code  as partnerCode,
	(SELECT biz_area.name FROM biz_area_rela_partner LEFT JOIN biz_area ON biz_area_rela_partner.biz_area_id = biz_area.id WHERE biz_area_rela_partner.partner_id = par.id ORDER BY biz_area_rela_partner.gmt_create limit 1 ) AS bizArea,
    (SELECT biz_area.id FROM  biz_area_rela_partner LEFT JOIN biz_area ON biz_area_rela_partner.biz_area_id = biz_area.id WHERE biz_area_rela_partner.partner_id = par.id ORDER BY biz_area_rela_partner.gmt_create limit 1 ) AS bizAreaId,
	emp.`name`  as eName,
	cus.`name`  as cName,
	cus.id_card as idCard,
	node.usertask_material_print_review_gmt_user_name  as copyClerk,
	plan.loan_time  as loanTime,
	case when car.car_type = 0 then '新车'
	when car.car_type  = 1 then '二手车'
	end as carType,
	plan.bank_period_principal  as bankPeriodPrincipal,
	plan.loan_amount    as loanAmount,
	(plan.bank_period_principal - plan.loan_amount) as serviceCharge,
	(select express_receive_date from loan_data_flow where order_id = loan.id and type = 2 order by express_receive_date desc limit 1) as expressReceiveDate,
	'' as contractTime,
	(select express_send_date from loan_data_flow where order_id = loan.id and type in(3,4) order by express_send_date desc limit 1) as expressSendDate,
	area.area_name as areaName,
	'线上' as isOnline,
	lend.lend_date   as lendDate,
	case when process.remit_review = 21 then
	(select create_time from loan_process_log where task_definition_key = 'usertask_refund_apply_review' and action =1 and order_id = loan.id order by create_time desc limit 1 )
	else '' end as refundDate,
        (
        SELECT
        loan_process_log.create_time
        FROM
        loan_process_log
        WHERE
        order_id = orders.id
        AND task_definition_key = 'usertask_remit_review'
        ORDER BY
        create_time DESC
        LIMIT 1
        ) as submitTime

   FROM
	loan_process process
	LEFT JOIN loan_order loan ON loan.id = process.order_id
	LEFT JOIN loan_customer cus ON cus.id = loan.loan_customer_id
	LEFT JOIN loan_base_info base ON base.id = loan.loan_base_info_id
	LEFT JOIN partner par ON par.id = base.partner_id
	LEFT JOIN loan_financial_plan plan ON plan.id = loan.loan_financial_plan_id
	LEFT JOIN loan_car_info car ON car.id = loan.loan_car_info_id
	LEFT JOIN base_area area ON area.area_id = base.area_id
	left join employee emp on emp.id = base.salesman_id
	left join current_node_manager node on node.order_id = loan.id
	left join bank_lend_record lend on lend.loan_order = loan.id
   WHERE
	process.remit_review in (1,21)
        <if test="partnerList != null and partnerList.size() > 0">
            and
            base.partner_id in
            <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="bankList != null and bankList.size() > 0">
            and
            base.bank in
            <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    )a
        <where>
            <if test="bizAreaList !=null and bizAreaList.size() > 0" >
                a.bizAreaId in
                <foreach item="item" index="index" collection="bizAreaList" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
            <if test="startDate !=null and endDate !=null and startDate !='' and endDate !=''" >
                having a.submitTime #{startDate} and #{endDate}
            </if>
        </where>
    </select>

    <!-- 纸审问题预警表 -->
    <select id="paperQuestionWarning" parameterType="com.yunche.loan.domain.param.MaterialReviewParam" resultType="com.yunche.loan.domain.vo.PaperQuestionWarningVO">
     select a.*,				datediff(now(),a.submitTime)as overdueDays from (
     SELECT
        node.usertask_material_review_gmt_user_name  as nName,
				(SELECT biz_area.name FROM biz_area_rela_partner LEFT JOIN biz_area ON biz_area_rela_partner.biz_area_id = biz_area.id WHERE biz_area_rela_partner.partner_id = par.id ORDER BY biz_area_rela_partner.gmt_create limit 1 ) AS bizArea,
        (SELECT biz_area.id FROM  biz_area_rela_partner LEFT JOIN biz_area ON biz_area_rela_partner.biz_area_id = biz_area.id WHERE biz_area_rela_partner.partner_id = par.id ORDER BY biz_area_rela_partner.gmt_create limit 1 ) AS bizAreaId,
				par.partner_code  as partnerCode,
				par.`name` as pName,
				cus.`name` as cName,
				cus.id_card as idCard,
				plan.bank_period_principal  as bankPeriodPrincipal,
				node.usertask_material_review_create_time as nTime,
        (
        SELECT
        loan_process_log.create_time
        FROM
        loan_process_log
        WHERE
        order_id = loan.id
        AND task_definition_key = 'usertask_remit_review'
        ORDER BY
        create_time DESC
        LIMIT 1
        ) as submitTime,
				audit.complete_material_date as completeDate,
				base.bank

        FROM
        loan_order loan
        LEFT JOIN loan_customer cus ON loan.loan_customer_id = cus.id
        LEFT JOIN loan_base_info base ON loan.loan_base_info_id = base.id
        left join partner par on par.id = base.partner_id
				left join loan_financial_plan plan on plan.id = loan.loan_financial_plan_id
				left join current_node_manager node on node.order_id = loan.id
				 LEFT JOIN material_audit audit ON audit.id = loan.material_audit_id
				 left join loan_process process on process.order_id = loan.id
        where process.remit_review in(1,21)
        <if test="partnerList != null and partnerList.size() > 0">
            and
            base.partner_id in
            <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="bankList != null and bankList.size() > 0">
            and
            base.bank in
            <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
		)a
        <where>
            <if test="bizAreaList !=null and bizAreaList.size() > 0" >
                a.bizAreaId in
                <foreach item="item" index="index" collection="bizAreaList" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
            <if test="startDate !=null and endDate !=null and startDate !='' and endDate !=''" >
                having a.submitTime #{startDate} and #{endDate}
            </if>
        </where>

    </select>

    <!--渠道部时效表 -->
    <select id="channelPrescription" parameterType="com.yunche.loan.domain.param.MaterialReviewParam" resultType="com.yunche.loan.domain.vo.ChannelPrescriptionVO">
    SELECT
	a.*,
	datediff( a.materialReviewDate, a.remitReviewDate ) AS paperPrescription,
	datediff( a.lendDate, a.sendDate ) AS loanPrescription,
	datediff( a.lendDate, a.remitReviewDate ) AS moneyBackPrescription
    FROM
	(
	SELECT
		node.usertask_remit_review_create_time AS remitReviewDate,
		node.usertask_material_review_create_time AS materialReviewDate,
		( SELECT express_send_date FROM loan_data_flow WHERE order_id = loan.id AND type IN ( 3, 4 ) ORDER BY express_send_date DESC LIMIT 1 ) AS sendDate,
		( SELECT express_receive_date FROM loan_data_flow WHERE order_id = loan.id AND type = 4 ORDER BY express_receive_date DESC LIMIT 1 ) AS receiveDate,
		(
		SELECT
			biz_area.NAME
		FROM
			biz_area_rela_partner
			LEFT JOIN biz_area ON biz_area_rela_partner.biz_area_id = biz_area.id
		WHERE
			biz_area_rela_partner.partner_id = par.id
		ORDER BY
			biz_area_rela_partner.gmt_create
			LIMIT 1
		) AS bizArea,
	(SELECT
		biz_area.id
	FROM
		biz_area_rela_partner
		LEFT JOIN biz_area ON biz_area_rela_partner.biz_area_id = biz_area.id
	WHERE
		biz_area_rela_partner.partner_id = par.id
	ORDER BY
		biz_area_rela_partner.gmt_create
		LIMIT 1
	) AS bizAreaId,
	par.partner_code AS partnerCode,
	par.`name` AS pName,
	cus.`name` AS cName,
	cus.id_card AS idCard,
	plan.bank_period_principal AS bankPeriodPrincipal,
	lend.lend_date AS lendDate
    FROM
	loan_order loan
	LEFT JOIN bank_lend_record lend ON lend.loan_order = loan.id
	LEFT JOIN loan_customer cus ON cus.id = loan.loan_customer_id
	LEFT JOIN loan_base_info base ON base.id = loan.loan_base_info_id
	LEFT JOIN partner par ON par.id = base.partner_id
	LEFT JOIN loan_financial_plan plan ON plan.id = loan.loan_financial_plan_id
	LEFT JOIN current_node_manager node ON node.order_id = loan.id
    WHERE
	lend.id IS NOT NULL
        <if test="partnerList != null and partnerList.size() > 0">
            and
            base.partner_id in
            <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="bankList != null and bankList.size() > 0">
            and
            base.bank in
            <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
	) a
        <where>
            <if test="bizAreaList !=null and bizAreaList.size() > 0" >
                a.bizAreaId in
                <foreach item="item" index="index" collection="bizAreaList" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
            <if test="startDate !=null and endDate !=null and startDate !='' and endDate !=''" >
                having a.lendDate #{startDate} and #{endDate}
            </if>
        </where>
    </select>

    <select id="creditPrescription" parameterType="com.yunche.loan.domain.param.MaterialReviewParam" resultType="com.yunche.loan.domain.vo.CreditPrescriptionVO">

    </select>

</mapper>