<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunche.loan.mapper.VoucherErrRecordDOMapper">
  <resultMap id="BaseResultMap" type="com.yunche.loan.domain.entity.VoucherErrRecordDO">
    <id column="serial_no" jdbcType="VARCHAR" property="serialNo" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="process_id" jdbcType="BIGINT" property="processId" />
    <result column="task_definition_key" jdbcType="VARCHAR" property="taskDefinitionKey" />
    <result column="ret_status" jdbcType="VARCHAR" property="retStatus" />
    <result column="ret_message" jdbcType="VARCHAR" property="retMessage" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    serial_no, order_id, process_id, task_definition_key, ret_status, ret_message, create_time, 
    status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from voucher_err_record
    where serial_no = #{serialNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from voucher_err_record
    where serial_no = #{serialNo,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yunche.loan.domain.entity.VoucherErrRecordDO">
    insert into voucher_err_record (serial_no, order_id, process_id, 
      task_definition_key, ret_status, ret_message, 
      create_time, status)
    values (#{serialNo,jdbcType=VARCHAR}, #{orderId,jdbcType=BIGINT}, #{processId,jdbcType=BIGINT}, 
      #{taskDefinitionKey,jdbcType=VARCHAR}, #{retStatus,jdbcType=VARCHAR}, #{retMessage,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.yunche.loan.domain.entity.VoucherErrRecordDO">
    insert into voucher_err_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="serialNo != null">
        serial_no,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="processId != null">
        process_id,
      </if>
      <if test="taskDefinitionKey != null">
        task_definition_key,
      </if>
      <if test="retStatus != null">
        ret_status,
      </if>
      <if test="retMessage != null">
        ret_message,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="serialNo != null">
        #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="processId != null">
        #{processId,jdbcType=BIGINT},
      </if>
      <if test="taskDefinitionKey != null">
        #{taskDefinitionKey,jdbcType=VARCHAR},
      </if>
      <if test="retStatus != null">
        #{retStatus,jdbcType=VARCHAR},
      </if>
      <if test="retMessage != null">
        #{retMessage,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunche.loan.domain.entity.VoucherErrRecordDO">
    update voucher_err_record
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="processId != null">
        process_id = #{processId,jdbcType=BIGINT},
      </if>
      <if test="taskDefinitionKey != null">
        task_definition_key = #{taskDefinitionKey,jdbcType=VARCHAR},
      </if>
      <if test="retStatus != null">
        ret_status = #{retStatus,jdbcType=VARCHAR},
      </if>
      <if test="retMessage != null">
        ret_message = #{retMessage,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where serial_no = #{serialNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunche.loan.domain.entity.VoucherErrRecordDO">
    update voucher_err_record
    set order_id = #{orderId,jdbcType=BIGINT},
      process_id = #{processId,jdbcType=BIGINT},
      task_definition_key = #{taskDefinitionKey,jdbcType=VARCHAR},
      ret_status = #{retStatus,jdbcType=VARCHAR},
      ret_message = #{retMessage,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where serial_no = #{serialNo,jdbcType=VARCHAR}
  </update>


  <select id="listErr" parameterType="com.yunche.loan.domain.query.FinanceErrQuery" resultType="com.yunche.loan.domain.vo.FinanceErrVO">
    SELECT
        err.order_id AS orderId,
        DATE_FORMAT(err.create_time,'%Y-%m-%d %H:%i:%S') AS businessDate,
        customer.NAME AS userName,
        customer.id_card AS idCard,
        base.bank AS bankName,
        car.car_type AS carType,
        partner.`name` AS partnerName,
        err.`status` AS `status`,
        err.ret_message AS reason,
        err.process_id AS processId,
        err.task_definition_key AS taskDefinitionKey
    FROM
    (
      SELECT DISTINCT
         z.*
      FROM
        voucher_err_record z
      INNER JOIN ( SELECT SUBSTRING_INDEX( GROUP_CONCAT( serial_no ORDER BY create_time DESC SEPARATOR ',' ), ',', 1 ) AS id FROM voucher_err_record GROUP BY order_id, process_id ) g ON g.id = z.serial_no
    ) err
    LEFT JOIN loan_order loan ON err.order_id = loan.id
    LEFT JOIN loan_customer customer ON loan.loan_customer_id = customer.id
    LEFT JOIN loan_base_info base ON loan.loan_base_info_id = base.id
    LEFT JOIN loan_car_info car ON loan.loan_car_info_id = car.id
    LEFT JOIN partner partner ON partner.id = base.partner_id
    where 1=1
    <if test="status">
      AND err.status=#{status}
    </if>
    <if test="orderId!=null">
      AND err.order_id=#{orderId}
    </if>
    <if test="userName!=null">
      AND customer.`name` LIKE CONCAT('%', #{userName} ,'%')
    </if>
    <if test="idCard!=null">
      AND  customer.id_card =#{idCard}
    </if>
    <if test="partnerId!=null">
      AND  partner.id=#{partnerId}
    </if>
    <if test="carType!=null">
      AND  car.car_type=#{carType}
    </if>
    <if test="bank!=null">
      AND  base.bank=#{bank}
    </if>
    <if test="businessDateStart!=null">
      AND err.create_time  &gt;= #{businessDateStart}
    </if>
    <if test="businessDateEnd!=null">
      AND err.create_time  &lt;= #{businessDateEnd}
    </if>

  </select>
</mapper>