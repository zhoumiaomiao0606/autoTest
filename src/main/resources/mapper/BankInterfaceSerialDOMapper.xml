<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunche.loan.mapper.BankInterfaceSerialDOMapper" >
  <resultMap id="BaseResultMap" type="com.yunche.loan.domain.entity.BankInterfaceSerialDO" >
    <id column="serial_no" property="serialNo" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="customer_id" property="customerId" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="request_time" property="requestTime" jdbcType="TIMESTAMP" />
    <result column="callback_time" property="callbackTime" jdbcType="TIMESTAMP" />
    <result column="reject_reason" property="rejectReason" jdbcType="VARCHAR" />
    <result column="trans_code" property="transCode" jdbcType="VARCHAR" />
    <result column="api_status" property="apiStatus" jdbcType="TINYINT" />
    <result column="api_msg" property="apiMsg" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    serial_no, order_id, customer_id, status, request_time, callback_time, reject_reason,
    trans_code, api_status, api_msg
  </sql>
  <select id="selectByCustomerIdAndTransCode"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from bank_interface_serial
    where customer_id = #{customerId,jdbcType=BIGINT}
    and trans_code=#{transCode,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from bank_interface_serial
    where serial_no = #{serialNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from bank_interface_serial
    where serial_no = #{serialNo,jdbcType=VARCHAR}
  </delete>
  <insert id="insertSelective" parameterType="com.yunche.loan.domain.entity.BankInterfaceSerialDO" >
    insert into bank_interface_serial
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="serialNo != null" >
        serial_no,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="requestTime != null" >
        request_time,
      </if>
      <if test="callbackTime != null" >
        callback_time,
      </if>
      <if test="rejectReason != null" >
        reject_reason,
      </if>
      <if test="transCode != null" >
        trans_code,
      </if>
      <if test="apiStatus != null" >
        api_status,
      </if>
      <if test="apiMsg != null" >
        api_msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="serialNo != null" >
        #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="requestTime != null" >
        #{requestTime,jdbcType=TIMESTAMP},
      </if>
      <if test="callbackTime != null" >
        #{callbackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rejectReason != null" >
        #{rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="transCode != null" >
        #{transCode,jdbcType=VARCHAR},
      </if>
      <if test="apiStatus != null" >
        #{apiStatus,jdbcType=TINYINT},
      </if>
      <if test="apiMsg != null" >
        #{apiMsg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunche.loan.domain.entity.BankInterfaceSerialDO" >
    update bank_interface_serial
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="requestTime != null" >
        request_time = #{requestTime,jdbcType=TIMESTAMP},
      </if>
      <if test="callbackTime != null" >
        callback_time = #{callbackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rejectReason != null" >
        reject_reason = #{rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="transCode != null" >
        trans_code = #{transCode,jdbcType=VARCHAR},
      </if>
      <if test="apiStatus != null" >
        api_status = #{apiStatus,jdbcType=TINYINT},
      </if>
      <if test="apiMsg != null" >
        api_msg = #{apiMsg,jdbcType=VARCHAR},
      </if>
    </set>
    where serial_no = #{serialNo,jdbcType=VARCHAR}
  </update>
  <select id="selectByCustomerIdAndTransCode"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from bank_interface_serial
    where customer_id = #{customerId,jdbcType=BIGINT}
    and trans_code=#{transCode,jdbcType=VARCHAR}
  </select>
</mapper>