<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunche.loan.dao.mapper.UserGroupRelaAreaAuthDOMapper">
    <resultMap id="BaseResultMap" type="com.yunche.loan.domain.dataObj.UserGroupRelaAreaAuthDO">
        <id column="user_group_id" jdbcType="BIGINT" property="userGroupId"/>
        <id column="auth_id" jdbcType="BIGINT" property="authId"/>
        <id column="area_id" jdbcType="BIGINT" property="areaId"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modify" jdbcType="TIMESTAMP" property="gmtModify"/>
    </resultMap>

    <sql id="Base_Column_List">
    user_group_id, auth_id, area_id, gmt_create, gmt_modify
  </sql>

    <!--query-->
    <select id="query" parameterType="com.yunche.loan.domain.dataObj.UserGroupRelaAreaAuthDOKey"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_group_rela_area_auth
        <where>
            <if test="userGroupId != null">
                AND user_group_id = #{userGroupId,jdbcType=BIGINT}
            </if>
            <if test="areaId != null">
                and area_id = #{areaId,jdbcType=BIGINT}
            </if>
            <if test="authId != null">
                and auth_id = #{authId,jdbcType=BIGINT}
            </if>
        </where>
    </select>

    <!--getHasBindAuthEntityIdListByUserGroupIdAndType-->
    <select id="getHasBindAuthEntityIdListByUserGroupIdAndType" resultType="java.lang.Long">
        SELECT DISTINCT(b.source_id)
        FROM user_group_rela_area_auth AS a,
        auth AS b
        WHERE a.auth_id = b.id
        <if test="type != null">
            AND b.type = #{type}
        </if>
        <if test="userGroupId != null">
            AND a.user_group_id = #{userGroupId}
        </if>
    </select>

    <!-- getHasBindAuthIdListByUserGroupIdList -->
    <select id="getHasBindAuthIdListByUserGroupIdList" resultType="java.lang.Long">
        SELECT b.id
        FROM user_group_rela_area_auth AS a,
        auth AS b
        WHERE a.auth_id = b.id
        <if test="userGroupIdList != null and userGroupIdList.size() > 0">
            AND a.user_group_id IN
            <foreach collection="userGroupIdList" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
    </select>

    <!--getAreaIdListByUserGroupId-->
    <select id="getAreaIdListByUserGroupId" parameterType="java.lang.Long"
            resultType="java.lang.Long">
        SELECT DISTINCT(area_id)
        FROM user_group_rela_area_auth
        WHERE user_group_id = #{userGroupId,jdbcType=BIGINT}
    </select>

    <!--deleteAllByAuthType-->
    <delete id="deleteAllByUserGroupIdAndType">
        DELETE a
        FROM user_group_rela_area_auth AS a ,
        auth AS b
        WHERE a.auth_id = b.id
        <if test="userGroupId != null">
            AND a.user_group_id = #{userGroupId}
        </if>
        <if test="type != null">
            AND b.type = #{type}
        </if>
    </delete>

    <!--updateByUserGroupIdSelective-->
    <update id="updateByUserGroupIdSelective" parameterType="com.yunche.loan.domain.dataObj.UserGroupRelaAreaAuthDO">
        update user_group_rela_area_auth
        <set>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModify != null">
                gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
            </if>
            <if test="authId != null">
                auth_id = #{authId,jdbcType=BIGINT},
            </if>
            <if test="areaId != null">
                area_id = #{areaId,jdbcType=BIGINT}
            </if>
        </set>
        where user_group_id = #{userGroupId,jdbcType=BIGINT}
    </update>

    <!-- batchInsert -->
    <insert id="batchInsert" parameterType="java.util.List">
        insert into user_group_rela_area_auth (user_group_id, auth_id, area_id,
        gmt_create, gmt_modify)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.userGroupId,jdbcType=BIGINT}, #{item.authId,jdbcType=BIGINT}, #{item.areaId,jdbcType=BIGINT},
            #{item.gmtCreate,jdbcType=TIMESTAMP}, #{item.gmtModify,jdbcType=TIMESTAMP})
        </foreach>
    </insert>

    <select id="selectByPrimaryKey" parameterType="com.yunche.loan.domain.dataObj.UserGroupRelaAreaAuthDOKey"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_group_rela_area_auth
        where user_group_id = #{userGroupId,jdbcType=BIGINT}
        and auth_id = #{authId,jdbcType=BIGINT}
        and area_id = #{areaId,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="com.yunche.loan.domain.dataObj.UserGroupRelaAreaAuthDOKey">
        delete from user_group_rela_area_auth
        where user_group_id = #{userGroupId,jdbcType=BIGINT}
        and auth_id = #{authId,jdbcType=BIGINT}
        <if test="areaId != null">
            and area_id = #{areaId,jdbcType=BIGINT}
        </if>
    </delete>

    <insert id="insert" parameterType="com.yunche.loan.domain.dataObj.UserGroupRelaAreaAuthDO">
    insert into user_group_rela_area_auth (user_group_id, auth_id, area_id, 
      gmt_create, gmt_modify)
    values (#{userGroupId,jdbcType=BIGINT}, #{authId,jdbcType=BIGINT}, #{areaId,jdbcType=BIGINT}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP})
  </insert>

    <insert id="insertSelective" parameterType="com.yunche.loan.domain.dataObj.UserGroupRelaAreaAuthDO">
        insert into user_group_rela_area_auth
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userGroupId != null">
                user_group_id,
            </if>
            <if test="authId != null">
                auth_id,
            </if>
            <if test="areaId != null">
                area_id,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModify != null">
                gmt_modify,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userGroupId != null">
                #{userGroupId,jdbcType=BIGINT},
            </if>
            <if test="authId != null">
                #{authId,jdbcType=BIGINT},
            </if>
            <if test="areaId != null">
                #{areaId,jdbcType=BIGINT},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModify != null">
                #{gmtModify,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.yunche.loan.domain.dataObj.UserGroupRelaAreaAuthDO">
        update user_group_rela_area_auth
        <set>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModify != null">
                gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
            </if>
        </set>
        where user_group_id = #{userGroupId,jdbcType=BIGINT}
        and auth_id = #{authId,jdbcType=BIGINT}
        and area_id = #{areaId,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.yunche.loan.domain.dataObj.UserGroupRelaAreaAuthDO">
    update user_group_rela_area_auth
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{gmtModify,jdbcType=TIMESTAMP}
    where user_group_id = #{userGroupId,jdbcType=BIGINT}
      and auth_id = #{authId,jdbcType=BIGINT}
      and area_id = #{areaId,jdbcType=BIGINT}
  </update>

</mapper>