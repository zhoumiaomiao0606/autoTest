<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunche.loan.mapper.EmployeeDOMapper">
    <resultMap id="BaseResultMap" type="com.yunche.loan.domain.entity.EmployeeDO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="id_card" jdbcType="CHAR" property="idCard"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="ding_ding" jdbcType="VARCHAR" property="dingDing"/>
        <result column="department_id" jdbcType="BIGINT" property="departmentId"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="entry_date" jdbcType="TIMESTAMP" property="entryDate"/>
        <result column="level" jdbcType="INTEGER" property="level"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modify" jdbcType="TIMESTAMP" property="gmtModify"/>
        <result column="feature" jdbcType="VARCHAR" property="feature"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="machine_id" jdbcType="VARCHAR" property="machineId"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, name, password, id_card, mobile, email, ding_ding, department_id, parent_id,
        title, entry_date, level, type, gmt_create, gmt_modify, feature, status,machine_id
    </sql>

    <sql id="Base_Query_List">
        <if test="id != null">
            AND id = #{id}
        </if>
        <if test="name != null and name != '' ">
            AND name LIKE CONCAT('%',#{name},'%')
        </if>
        <if test="idCard != null and idCard != '' ">
            AND id_card = #{idCard}
        </if>
        <if test="mobile != null and mobile != '' ">
            AND mobile = #{mobile}
        </if>
        <if test="dingDing != null and dingDing != '' ">
            AND ding_ding = #{dingDing}
        </if>
        <if test="departmentId != null">
            AND department_id = #{departmentId}
        </if>
        <if test="parentId != null">
            AND parent_id = #{parentId}
        </if>
        <if test="title != null and title != '' ">
            AND title LIKE CONCAT('%',#{title},'%')
        </if>
        <if test="entryDateStart != null">
            <![CDATA[ AND entry_date >= #{entryDateStart} ]]>
        </if>
        <if test="entryDateEnd != null">
            <![CDATA[ AND entry_date <= #{entryDateEnd} ]]>
        </if>
        <if test="gmtCreateStart != null">
            <![CDATA[ AND gmt_create >= #{gmtCreateStart} ]]>
        </if>
        <if test="gmtCreateEnd != null">
            <![CDATA[ AND gmt_create <= #{gmtCreateEnd} ]]>
        </if>
        <if test="gmtModifyStart != null">
            <![CDATA[ AND gmt_modify >= #{gmtModifyStart} ]]>
        </if>
        <if test="gmtModifyEnd != null">
            <![CDATA[ AND gmt_modify <= #{gmtModifyEnd} ]]>
        </if>
        <if test="level != null">
            AND level = #{level}
        </if>
        <if test="type != null">
            AND type = #{type}
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
    </sql>

    <!--  count -->
    <select id="count" parameterType="com.yunche.loan.domain.query.EmployeeQuery"
            resultType="java.lang.Integer">
        select COUNT(*)
        from employee
        <where>
            <include refid="Base_Query_List"/>
        </where>
    </select>

    <!-- query -->
    <select id="query" parameterType="com.yunche.loan.domain.query.EmployeeQuery"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from employee
        <where>
            <include refid="Base_Query_List"/>
        </where>
        ORDER BY gmt_create DESC
        limit #{startRow}, #{pageSize}
    </select>

    <!-- getAllOnlyProperty -->
    <select id="getAllOnlyProperty" resultMap="BaseResultMap">
        select id_card, mobile, email, ding_ding
        from employee
    </select>

    <!--setParentIdIsNull-->
    <select id="setParentIdIsNull" parameterType="java.lang.Long">
        UPDATE employee
        SET parent_id = NULL
        where id = #{id,jdbcType=BIGINT}
    </select>

    <!--replaceParentId-->
    <select id="replaceParentId">
        UPDATE employee
        SET parent_id = #{newParentId,jdbcType=BIGINT}
        where parent_id = #{oldParentId,jdbcType=BIGINT}
    </select>

    <!--listChildByParentId-->
    <select id="listChildByParentId" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT id FROM employee
        where parent_id = #{parentId,jdbcType=BIGINT}
    </select>

    <!--updateParentIdById-->
    <select id="updateParentIdById">
        UPDATE employee
        SET parent_id = #{parentId,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </select>

    <!-- countListEmployeeByUserGroupId -->
    <select id="countListEmployeeByUserGroupId" parameterType="com.yunche.loan.domain.query.RelaQuery"
            resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM employee_rela_user_group AS a
        JOIN employee AS b
        ON a.`employee_id` = b.`id`
        <if test="userGroupId != null">
            AND a.user_group_id = #{userGroupId}
        </if>
        <if test="status != null">
            AND b.status = #{status}
        </if>
    </select>

    <!-- listEmployeeByUserGroupId -->
    <select id="listEmployeeByUserGroupId" parameterType="com.yunche.loan.domain.query.RelaQuery"
            resultMap="BaseResultMap">
        SELECT b.*
        FROM employee_rela_user_group AS a
        JOIN employee AS b
        ON a.`employee_id` = b.`id`
        <if test="userGroupId != null">
            AND a.user_group_id = #{userGroupId}
        </if>
        <if test="status != null">
            AND b.status = #{status}
        </if>
        ORDER BY a.`gmt_modify` DESC
        LIMIT #{startRow}, #{pageSize}
    </select>

    <!-- countListEmployeeByPartnerId -->
    <select id="countListEmployeeByPartnerId" parameterType="com.yunche.loan.domain.query.EmployeeQuery"
            resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM partner_rela_employee AS a
        JOIN employee AS b
        ON a.`employee_id` = b.`id`
        <if test="id != null">
            AND a.partner_id = #{id}
        </if>
        <if test="status != null">
            AND b.status = #{status}
        </if>
    </select>

    <!-- listEmployeeByPartnerId -->
    <select id="listEmployeeByPartnerId" parameterType="com.yunche.loan.domain.query.EmployeeQuery"
            resultMap="BaseResultMap">
        SELECT b.*
        FROM partner_rela_employee AS a
        JOIN employee AS b
        ON a.`employee_id` = b.`id`
        <if test="id != null">
            AND a.partner_id = #{id}
        </if>
        <if test="status != null">
            AND b.status = #{status}
        </if>
        ORDER BY a.`gmt_modify` DESC
        LIMIT #{startRow}, #{pageSize}
    </select>

    <!--getAll-->
    <select id="getAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from employee
        <where>
            <if test="type != null">
                AND type = #{type}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
    </select>

    <!--getByIdList-->
    <select id="getByIdList" parameterType="java.util.List" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from employee
        WHERE id IN
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item,jdbcType=BIGINT}
        </foreach>
    </select>

    <!--getAllEmployeeIdList-->
    <select id="getAllEmployeeIdList" resultType="java.lang.Long">
        select id
        from employee
        <if test="status != null">
            WHERE status = #{status}
        </if>
    </select>

    <!--queryAllEmployeeIdList-->
    <select id="queryAllEmployeeIdList" parameterType="com.yunche.loan.domain.query.EmployeeQuery"
            resultType="java.lang.Long">
        select id
        from employee
        <where>
            <include refid="Base_Query_List"/>
        </where>
    </select>

    <!--listTitle-->
    <select id="listTitle" resultType="java.lang.String">
        select DISTINCT(title)
        from employee
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from employee
        where id = #{id,jdbcType=BIGINT}
        <if test="status != null">
            AND status = #{status}
        </if>
    </select>

    <!--getByUsername-->
    <select id="getByUsername" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from employee
        <where>
            <if test="email != null and email != '' ">
                AND email = #{email}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from employee
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.yunche.loan.domain.entity.EmployeeDO">
        <selectKey resultType="java.lang.Long" keyProperty="id"
                   order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into employee (id, name, password,
        id_card, mobile, email,
        ding_ding, department_id, parent_id,
        title, entry_date, level,
        type, gmt_create, gmt_modify,
        feature, status)
        values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{idCard,jdbcType=CHAR}, #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
        #{dingDing,jdbcType=VARCHAR}, #{departmentId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT},
        #{title,jdbcType=VARCHAR}, #{entryDate,jdbcType=TIMESTAMP}, #{level,jdbcType=INTEGER},
        #{type,jdbcType=TINYINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP},
        #{feature,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT})
    </insert>

    <insert id="insertSelective" parameterType="com.yunche.loan.domain.entity.EmployeeDO">
        <selectKey resultType="java.lang.Long" keyProperty="id"
                   order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="idCard != null">
                id_card,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="dingDing != null">
                ding_ding,
            </if>
            <if test="departmentId != null">
                department_id,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="entryDate != null">
                entry_date,
            </if>
            <if test="level != null">
                level,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModify != null">
                gmt_modify,
            </if>
            <if test="feature != null">
                feature,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="idCard != null">
                #{idCard,jdbcType=CHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="dingDing != null">
                #{dingDing,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=BIGINT},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="entryDate != null">
                #{entryDate,jdbcType=TIMESTAMP},
            </if>
            <if test="level != null">
                #{level,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModify != null">
                #{gmtModify,jdbcType=TIMESTAMP},
            </if>
            <if test="feature != null">
                #{feature,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.yunche.loan.domain.entity.EmployeeDO">
        update employee
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="idCard != null">
                id_card = #{idCard,jdbcType=CHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="dingDing != null">
                ding_ding = #{dingDing,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId,jdbcType=BIGINT},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="entryDate != null">
                entry_date = #{entryDate,jdbcType=TIMESTAMP},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModify != null">
                gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
            </if>
            <if test="feature != null">
                feature = #{feature,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="machineId != null">
                machine_id = #{machineId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.yunche.loan.domain.entity.EmployeeDO">
        update employee
        set name = #{name,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        id_card = #{idCard,jdbcType=CHAR},
        mobile = #{mobile,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        ding_ding = #{dingDing,jdbcType=VARCHAR},
        department_id = #{departmentId,jdbcType=BIGINT},
        parent_id = #{parentId,jdbcType=BIGINT},
        title = #{title,jdbcType=VARCHAR},
        entry_date = #{entryDate,jdbcType=TIMESTAMP},
        level = #{level,jdbcType=INTEGER},
        type = #{type,jdbcType=TINYINT},
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
        gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
        feature = #{feature,jdbcType=VARCHAR},
        status = #{status,jdbcType=TINYINT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="setMachineIdForNull" parameterType="java.lang.Long">
        update employee
        set machine_id = null
        where id = #{id,jdbcType=BIGINT}
    </update>


</mapper>