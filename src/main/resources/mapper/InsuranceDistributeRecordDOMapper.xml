<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunche.loan.mapper.InsuranceDistributeRecordDOMapper">
  <resultMap id="BaseResultMap" type="com.yunche.loan.domain.entity.InsuranceDistributeRecordDO">
    <id column="order_Id" jdbcType="BIGINT" property="orderId" />
    <id column="employee_id" jdbcType="BIGINT" property="employeeId" />
    <result column="employee_name" jdbcType="VARCHAR" property="employeeName" />
    <result column="distribute_date" jdbcType="TIMESTAMP" property="distributeDate" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modify" jdbcType="TIMESTAMP" property="gmtModify" />
  </resultMap>
  <sql id="Base_Column_List">
    order_Id, employee_id, employee_name, distribute_date, gmt_create, gmt_modify
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.yunche.loan.domain.entity.InsuranceDistributeRecordDOKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from insurance_distribute_record
    where order_Id = #{orderId,jdbcType=BIGINT}
      and employee_id = #{employeeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.yunche.loan.domain.entity.InsuranceDistributeRecordDOKey">
    delete from insurance_distribute_record
    where order_Id = #{orderId,jdbcType=BIGINT}
      and employee_id = #{employeeId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yunche.loan.domain.entity.InsuranceDistributeRecordDO">
    insert into insurance_distribute_record (order_Id, employee_id, employee_name, 
      distribute_date, gmt_create, gmt_modify
      )
    values (#{orderId,jdbcType=BIGINT}, #{employeeId,jdbcType=BIGINT}, #{employeeName,jdbcType=VARCHAR}, 
      #{distributeDate,jdbcType=TIMESTAMP}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yunche.loan.domain.entity.InsuranceDistributeRecordDO">
    insert into insurance_distribute_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_Id,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="employeeName != null">
        employee_name,
      </if>
      <if test="distributeDate != null">
        distribute_date,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModify != null">
        gmt_modify,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="employeeName != null">
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="distributeDate != null">
        #{distributeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null">
        #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunche.loan.domain.entity.InsuranceDistributeRecordDO">
    update insurance_distribute_record
    <set>
      <if test="employeeName != null">
        employee_name = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="distributeDate != null">
        distribute_date = #{distributeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null">
        gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      </if>
    </set>
    where order_Id = #{orderId,jdbcType=BIGINT}
      and employee_id = #{employeeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunche.loan.domain.entity.InsuranceDistributeRecordDO">
    update insurance_distribute_record
    set employee_name = #{employeeName,jdbcType=VARCHAR},
      distribute_date = #{distributeDate,jdbcType=TIMESTAMP},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{gmtModify,jdbcType=TIMESTAMP}
    where order_Id = #{orderId,jdbcType=BIGINT}
      and employee_id = #{employeeId,jdbcType=BIGINT}
  </update>

  <insert id="insertBatch" parameterType="java.util.List">
    INSERT INTO insurance_distribute_record(order_Id, employee_id, employee_name,
      distribute_date, gmt_create, gmt_modify)
    VALUES
    <foreach collection="list" item="item" index="index" separator=",">
      (#{orderId,jdbcType=BIGINT}, #{employeeId,jdbcType=BIGINT}, #{employeeName,jdbcType=VARCHAR},
      #{distributeDate,jdbcType=TIMESTAMP}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP})
    </foreach >
  </insert>
</mapper>