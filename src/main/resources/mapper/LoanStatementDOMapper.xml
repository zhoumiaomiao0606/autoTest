<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunche.loan.mapper.LoanStatementDOMapper">
 <select id="statisticsTelephoneVerifyNodeOrders" parameterType="com.yunche.loan.domain.param.TelephoneVerifyParam" resultType="com.yunche.loan.domain.vo.TelephoneVerifyNodeOrdersVO">
     SELECT
     tab.*
     FROM
     (
     SELECT
     process.gmt_create AS ct,
     process.gmt_modify AS mt,
     process.telephone_verify,
     plan.bank_period_principal,
     plan.bank,
     CASE

     WHEN process.telephone_verify = 2 THEN
     '待处理'
     WHEN process.telephone_verify = 12 THEN
     '弃单'
     WHEN process.telephone_verify = 4 THEN
     '电审专员提交'
     WHEN process.telephone_verify = 5 THEN
     '电审组长提交'
     WHEN process.telephone_verify = 6 THEN
     '电审主管提交'
     WHEN process.telephone_verify = 7 THEN
     '电审总监提交'
     WHEN process.telephone_verify = 1 THEN
     CASE

     WHEN (
     SELECT
     max( g.telephone_verify_level )
     FROM
     employee_rela_user_group ug
     LEFT JOIN user_group g ON ug.user_group_id = g.id
     WHERE
     ug.employee_id = ( SELECT user_id FROM loan_process_log WHERE task_definition_key = 'usertask_telephone_verify' AND order_id = orders.id ORDER BY create_time DESC LIMIT 1 )
     ) = 7 THEN
     '电审总监过单'
     WHEN (
     SELECT
     max( g.telephone_verify_level )
     FROM
     employee_rela_user_group ug
     LEFT JOIN user_group g ON ug.user_group_id = g.id
     WHERE
     ug.employee_id = ( SELECT user_id FROM loan_process_log WHERE task_definition_key = 'usertask_telephone_verify' AND order_id = orders.id ORDER BY create_time DESC LIMIT 1 )
     ) = 6 THEN
     '电审主管过单'
     WHEN (
     SELECT
     max( g.telephone_verify_level )
     FROM
     employee_rela_user_group ug
     LEFT JOIN user_group g ON ug.user_group_id = g.id
     WHERE
     ug.employee_id = ( SELECT user_id FROM loan_process_log WHERE task_definition_key = 'usertask_telephone_verify' AND order_id = orders.id ORDER BY create_time DESC LIMIT 1 )
     ) = 5 THEN
     '电审组长过单'
     WHEN (
     SELECT
     max( g.telephone_verify_level )
     FROM
     employee_rela_user_group ug
     LEFT JOIN user_group g ON ug.user_group_id = g.id
     WHERE
     ug.employee_id = ( SELECT user_id FROM loan_process_log WHERE task_definition_key = 'usertask_telephone_verify' AND order_id = orders.id ORDER BY create_time DESC LIMIT 1 )
     ) = 4 THEN
     '电审专员过单' ELSE '异常提交'
     END ELSE '待处理'
     END AS commit_status,
     orders.id AS order_id,
     customer.NAME AS customer_name,
     '身份证' AS customer_card_type,
     customer.id_card AS customer_id_card,
     saleman.NAME AS saleman_name,
     partner.NAME AS partner_name,
     department.NAME AS saleman_department_name,
     plan.loan_amount AS loan_amount,
     CASE

     WHEN ( SELECT count( order_id ) FROM install_gps GROUP BY order_id HAVING order_id = orders.id ) IS NULL THEN
     0 ELSE ( SELECT count( order_id ) FROM install_gps GROUP BY order_id HAVING order_id = orders.id )
     END AS gps_number,
     ( SELECT NAME FROM employee WHERE id = ( SELECT user_id FROM loan_process_log WHERE task_definition_key = 'usertask_telephone_verify' AND order_id = orders.id ORDER BY create_time DESC LIMIT 1 ) ) AS op_user_name,
     ( SELECT create_time FROM loan_process_log WHERE task_definition_key = 'usertask_telephone_verify' AND order_id = orders.id ORDER BY create_time DESC LIMIT 1 ) op_time,
     CASE

     WHEN ( SELECT credit_result FROM loan_process_log WHERE task_definition_key = 'usertask_telephone_verify' AND order_id = orders.id ORDER BY create_time DESC LIMIT 1 ) = 1 THEN
     '通过'
     WHEN ( SELECT credit_result FROM loan_process_log WHERE task_definition_key = 'usertask_telephone_verify' AND order_id = orders.id ORDER BY create_time DESC LIMIT 1 ) = 1 THEN
     '通融通过' ELSE '待审核'
     END AS result,
     ( SELECT info FROM loan_process_log WHERE task_definition_key = 'usertask_telephone_verify' AND order_id = orders.id ORDER BY create_time DESC LIMIT 1 ) op_info,
     CASE
     WHEN process.telephone_verify = 2 then '待审核'

     WHEN ( SELECT action FROM loan_process_log WHERE task_definition_key = 'usertask_telephone_verify' AND order_id = orders.id ORDER BY create_time DESC LIMIT 1 ) = 3 THEN
     '资料增补'
     WHEN ( SELECT action FROM loan_process_log WHERE task_definition_key = 'usertask_telephone_verify' AND order_id = orders.id ORDER BY create_time DESC LIMIT 1 ) = 2 THEN
     '弃单'
     WHEN ( SELECT action FROM loan_process_log WHERE task_definition_key = 'usertask_telephone_verify' AND order_id = orders.id ORDER BY create_time DESC LIMIT 1 ) = 1 THEN
     '通过'
     WHEN ( SELECT action FROM loan_process_log WHERE task_definition_key = 'usertask_telephone_verify' AND order_id = orders.id ORDER BY create_time DESC LIMIT 1 ) = 0 THEN
     CASE

     WHEN process.telephone_verify IN ( 2, 4, 5, 6, 7 ) THEN
     '待审核' ELSE
     CASE

     WHEN ( SELECT count( 1 ) FROM loan_reject_log WHERE reject_origin_task = 'usertask_telephone_verify' AND order_id = process.order_id AND gmt_create BETWEEN process.gmt_create AND process.gmt_modify ) = 0 THEN
     '待审核' ELSE '已打回'
     END
     END ELSE '未知'
     END AS action,
     partner.id as partner_id,
     car.car_type

     FROM
     loan_order orders
     LEFT JOIN loan_process process ON orders.id = process.order_id
     LEFT JOIN loan_base_info baseinfo ON orders.loan_base_info_id = baseinfo.id
     LEFT JOIN loan_customer customer ON customer.id = orders.loan_customer_id
     LEFT JOIN loan_financial_plan plan ON plan.id = orders.loan_financial_plan_id
     LEFT join loan_car_info car on car.id = orders.loan_car_info_id
     LEFT JOIN partner partner ON baseinfo.partner_id = partner.id
     LEFT JOIN employee saleman ON baseinfo.salesman_id = saleman.id
     LEFT JOIN department department ON saleman.department_id = department.id
     WHERE
     telephone_verify IN ( 0, 1, 2, 4, 5, 6, 7, 12 )
     ) tab
     WHERE
     CASE

     WHEN tab.telephone_verify = 0 THEN
     CASE

     WHEN (
     SELECT
     count( 1 )
     FROM
     loan_reject_log rej
     WHERE
     rej.reject_origin_task = 'usertask_telephone_verify'
     AND rej.order_id = tab.order_id
     AND rej.gmt_create BETWEEN tab.ct
     AND tab.mt
     ) = 0 THEN
     FALSE ELSE TRUE
     END ELSE TRUE
     END
     AND
     CASE

     WHEN telephone_verify IN ( 2, 4, 5, 6, 7 ) THEN
     TRUE ELSE
     CASE

     WHEN tab.op_time IS NULL THEN
     TRUE ELSE tab.op_time between #{startDate} and #{endDate}
     END
     END
	 <if test="actionList != null and actionList.size() > 0">
		 and
		 action in
		 <foreach item="item" index="index" collection="actionList" open="(" separator="," close=")">
			 #{item}
		 </foreach>
	 </if>
	 <if test="partnerList != null and partnerList.size() > 0">
		 and
         partner_id in
		 <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
			 #{item}
		 </foreach>
	 </if>
	 <if test="bankList != null and bankList.size() > 0">
     and
     bank in
     <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
         #{item}
     </foreach>
     </if>
    order by op_time asc
 </select>
    <!--=======================================导出 EXCEL 银行征信查询=========================================-->
    <select id="exportBankCreditQuerys" parameterType="com.yunche.loan.domain.param.ExportBankCreditQueryVerifyParam"  resultType="com.yunche.loan.domain.vo.ExportBankCreditQueryVO">
        SELECT
	principal_area.area_name,
	-- 客户类型: 1-主贷人;2-共贷人;3-担保人;4-紧急联系人;
	CASE
WHEN customer.cust_type = 1 THEN
	'主贷人'
WHEN customer.cust_type = 2 THEN
	'共贷人'
WHEN customer.cust_type = 3 THEN
	'担保人'
WHEN customer.cust_type = 4 THEN
	'紧急联系人'
ELSE
	NULL
END AS cust_type,
 customer. NAME AS customer_name,
 customer.id_card AS customer_id_card,
 customer.mobile AS customer_mobile,
 principal_base.bank,
 principal_partner. NAME AS partner_name,
 employee. NAME AS salesman_name,
 principal. NAME AS principal_name,
 -- 与主贷人关系：0-本人;1-配偶;2-父母;3-子女;4-兄弟姐妹;5-亲戚;6-朋友;7-同学;8-同事;9-其它;
CASE
WHEN customer.id = customer.principal_cust_id THEN
	'本人'
WHEN customer.cust_relation = 0 THEN
	'本人'
WHEN customer.cust_relation = 1 THEN
	'配偶'
WHEN customer.cust_relation = 2 THEN
	'父母'
WHEN customer.cust_relation = 3 THEN
	'子女'
WHEN customer.cust_relation = 4 THEN
	'兄弟姐妹'
WHEN customer.cust_relation = 5 THEN
	'亲戚'
WHEN customer.cust_relation = 6 THEN
	'朋友'
WHEN customer.cust_relation = 7 THEN
	'同学'
WHEN customer.cust_relation = 8 THEN
	'同事'
WHEN customer.cust_relation = 9 THEN
	'其他'
ELSE
	NULL
END AS cust_relation,
 -- 征信结果: 0-不通过;1-通过;2-关注;
CASE
WHEN credit_info.result = 0 THEN
	'不通过'
WHEN credit_info.result = 1 THEN
	'通过'
WHEN credit_info.result = 2 THEN
	'关注'
WHEN credit_info.result = 3 THEN
	'银行退回'
ELSE
	NULL
END AS credit_result,
 (
	SELECT
		create_time
	FROM
		loan_process_log
	WHERE
		task_definition_key = 'usertask_credit_apply'
	AND order_id = principal_orders.id
	ORDER BY
		create_time
	LIMIT 1
) AS credit_apply_time,
 credit_info.gmt_modify AS credit_query_time,
 (
	SELECT
		user_name
	FROM
		loan_process_log
	WHERE
		task_definition_key = 'usertask_bank_credit_record'
	AND order_id = principal_orders.id
	ORDER BY
		create_time
	LIMIT 1
) AS gmt_user
FROM
	loan_credit_info credit_info
LEFT JOIN loan_customer customer ON credit_info.customer_id = customer.id
LEFT JOIN loan_customer principal ON customer.principal_cust_id = principal.id
LEFT JOIN loan_order principal_orders ON principal_orders.loan_customer_id = principal.id
LEFT JOIN loan_base_info principal_base ON principal_orders.loan_base_info_id = principal_base.id
LEFT JOIN partner principal_partner ON principal_partner.id = principal_base.partner_id
LEFT JOIN base_area principal_area ON principal_area.area_id = principal_base.area_id
LEFT JOIN employee employee ON employee.id = principal_base.salesman_id

        <where>
            and credit_info.type = 1  and credit_info.gmt_modify between #{startDate} and #{endDate}
            <if test="partnerList != null and partnerList.size() > 0">
            and
                principal_base.partner_id in
            <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="bankList != null and bankList.size() > 0">
            and
            principal_base.bank in
            <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        </where>
    </select>


    <!--=======================================导出 EXCEL 社会征信查询=========================================-->
    <select id="exportSocialCreditQuerys" parameterType="com.yunche.loan.domain.param.ExportSocialCreditQueryVerifyParam"  resultType="com.yunche.loan.domain.vo.ExportSocialCreditQueryVO" >
SELECT
	principal_area.area_name,
	-- 客户类型: 1-主贷人;2-共贷人;3-担保人;4-紧急联系人;
	CASE
WHEN customer.cust_type = 1 THEN
	'主贷人'
WHEN customer.cust_type = 2 THEN
	'共贷人'
WHEN customer.cust_type = 3 THEN
	'担保人'
WHEN customer.cust_type = 4 THEN
	'紧急联系人'
ELSE
	NULL
END AS cust_type,
 customer. NAME AS customer_name,
 customer.id_card AS customer_id_card,
 customer.mobile AS customer_mobile,
 principal_base.bank,
 principal_partner. NAME AS partner_name,
 employee. NAME AS salesman_name,
 principal. NAME AS principal_name,
 -- 与主贷人关系：0-本人;1-配偶;2-父母;3-子女;4-兄弟姐妹;5-亲戚;6-朋友;7-同学;8-同事;9-其它;
CASE
WHEN customer.id = customer.principal_cust_id THEN
	'本人'
WHEN customer.cust_relation = 0 THEN
	'本人'
WHEN customer.cust_relation = 1 THEN
	'配偶'
WHEN customer.cust_relation = 2 THEN
	'父母'
WHEN customer.cust_relation = 3 THEN
	'子女'
WHEN customer.cust_relation = 4 THEN
	'兄弟姐妹'
WHEN customer.cust_relation = 5 THEN
	'亲戚'
WHEN customer.cust_relation = 6 THEN
	'朋友'
WHEN customer.cust_relation = 7 THEN
	'同学'
WHEN customer.cust_relation = 8 THEN
	'同事'
WHEN customer.cust_relation = 9 THEN
	'其他'
ELSE
	NULL
END AS cust_relation,
 -- 征信结果: 0-不通过;1-通过;2-关注;
CASE
WHEN credit_info.result = 0 THEN
	'不通过'
WHEN credit_info.result = 1 THEN
	'通过'
WHEN credit_info.result = 2 THEN
	'关注'
WHEN credit_info.result = 3 THEN
	'银行退回'
ELSE
	NULL
END AS credit_result,
 (
	SELECT
		create_time
	FROM
		loan_process_log
	WHERE
		task_definition_key = 'usertask_credit_apply'
	AND order_id = principal_orders.id
	ORDER BY
		create_time
	LIMIT 1
) AS credit_apply_time,
 credit_info.gmt_modify AS credit_query_time,
 (
	SELECT
		user_name
	FROM
		loan_process_log
	WHERE
		task_definition_key = 'usertask_bank_credit_record'
	AND order_id = principal_orders.id
	ORDER BY
		create_time
	LIMIT 1
) AS gmt_user
FROM
	loan_credit_info credit_info
LEFT JOIN loan_customer customer ON credit_info.customer_id = customer.id
LEFT JOIN loan_customer principal ON customer.principal_cust_id = principal.id
LEFT JOIN loan_order principal_orders ON principal_orders.loan_customer_id = principal.id
LEFT JOIN loan_base_info principal_base ON principal_orders.loan_base_info_id = principal_base.id
LEFT JOIN partner principal_partner ON principal_partner.id = principal_base.partner_id
LEFT JOIN base_area principal_area ON principal_area.area_id = principal_base.area_id
LEFT JOIN employee employee ON employee.id = principal_base.salesman_id
        <where>
            and credit_info.type = 2  and credit_info.gmt_modify between #{startDate} and #{endDate}
            <if test="partnerList != null and partnerList.size() > 0">
                and
                principal_base.partner_id in
                <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="bankList != null and bankList.size() > 0">
                and
                principal_base.bank in
                <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>
    <!--=======================================导出 EXCEL 财务垫款明细查询=========================================-->
    <select id="exportRemitDetailQuerys" parameterType="com.yunche.loan.domain.param.ExportRemitDetailQueryVerifyParam"  resultType="com.yunche.loan.domain.vo.ExportRemitDetailQueryVO" >

        SELECT
	base_area.area_name,
	customer. NAME AS customer_name,
	customer.id_card AS customer_id_card,
	customer.mobile AS customer_mobile,
	loaninfo.bank,
	partner. NAME AS partner_name,
	employee. NAME AS salesman_name,
	car.car_type,
	cardetail.price,
	loan_financial_plan.sign_rate,
	loan_financial_plan.loan_amount,
	loan_financial_plan.down_payment_money,
	loan_financial_plan.bank_period_principal,
	remit_details.remit_amount,
	orders.gmt_create,
	(
		SELECT
			loan_process_log.create_time
		FROM
			loan_process_log
		WHERE
			order_id = orders.id
		AND task_definition_key = 'usertask_remit_review'
		ORDER BY
			create_time DESC
		LIMIT 1
	) as submitTime,
	(
		SELECT
			loan_process_log.user_name
		FROM
			loan_process_log
		WHERE
			order_id = orders.id
		AND task_definition_key = 'usertask_remit_review'
		ORDER BY
			create_time DESC
		LIMIT 1
	) as username
FROM
	loan_order orders
LEFT JOIN loan_customer customer ON orders.loan_customer_id = customer.id
LEFT JOIN loan_base_info loaninfo ON orders.loan_base_info_id = loaninfo.id
LEFT JOIN base_area ON loaninfo.area_id = base_area.area_id
LEFT JOIN loan_car_info car ON orders.loan_car_info_id = car.id
LEFT JOIN car_detail cardetail ON cardetail.id = car.car_detail_id
LEFT JOIN loan_financial_plan ON orders.loan_financial_plan_id = loan_financial_plan.id
LEFT JOIN remit_details ON orders.remit_details_id = remit_details.id
LEFT JOIN loan_process process ON orders.id = process.order_id
LEFT JOIN loan_base_info base ON orders.loan_base_info_id = base.id
LEFT JOIN employee employee ON base.salesman_id = employee.id
LEFT JOIN partner partner ON partner.id = base.partner_id
where 1=1
        and process.loan_review = 1
        and
        case when #{maxGroupLevel} = 0 then false
        when #{maxGroupLevel} = 1 then
        loaninfo.salesman_id in
        (
            <choose>
              <when test="juniorIds != null and juniorIds.size() > 0">
                  <foreach item="item" index="index" collection="juniorIds" separator=",">
                  #{item}
                  </foreach>
              </when>
              <otherwise>
                  select temp.id from (SELECT 1 as id) temp  where temp.id =2
              </otherwise>
        </choose>
        )
        else true end
            <if test="partnerList != null and partnerList.size() > 0">
                and
                base.partner_id in
                <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="bankList != null and bankList.size() > 0">
                and
                base.bank in
                <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

        having submitTime between #{startDate} and #{endDate}


    </select>

    <!--=======================================导出 EXCEL 资料审核明细查询=========================================-->
    <select id="exportMaterialReviewQuerys" parameterType="com.yunche.loan.domain.param.ExportMaterialReviewQueryVerifyParam"  resultType="com.yunche.loan.domain.vo.ExportMaterialReviewDetailQueryVO" >
SELECT
	t.*, CASE
WHEN t.express_receive_date IS NOT NULL THEN
	ROUND(
		(
			UNIX_TIMESTAMP(
				DATE_FORMAT(
					t.express_receive_date,
					'%Y-%m-%d'
				)
			) - UNIX_TIMESTAMP(
				DATE_FORMAT(t.remitdate, '%Y-%m-%d')
			)
		) / (24 * 60 * 60)
	)
ELSE
	ROUND(
		(
			UNIX_TIMESTAMP(
				DATE_FORMAT(now(), '%Y-%m-%d')
			) - UNIX_TIMESTAMP(
				DATE_FORMAT(t.remitdate, '%Y-%m-%d')
			)
		) / (24 * 60 * 60)
	)
END AS remitOverdueTime,
 CASE
WHEN t.complete_material_date IS NOT NULL THEN
	ROUND(
		(
			UNIX_TIMESTAMP(
				DATE_FORMAT(
					t.complete_material_date,
					'%Y-%m-%d'
				)
			) - UNIX_TIMESTAMP(
				DATE_FORMAT(t.remitdate, '%Y-%m-%d')
			)
		) / (24 * 60 * 60)
	)
ELSE
	ROUND(
		(
			UNIX_TIMESTAMP(
				DATE_FORMAT(now(), '%Y-%m-%d')
			) - UNIX_TIMESTAMP(
				DATE_FORMAT(t.remitdate, '%Y-%m-%d')
			)
		) / (24 * 60 * 60)
	)
END AS revievOverdueTime
FROM
	(
		SELECT
			base_area.area_name,
			partner. NAME AS partner_name,
			customer. NAME AS customer_name,
			customer.id_card,
			loan_base_info.bank,
			loan_financial_plan.bank_period_principal,
			(SELECT create_time FROM loan_process_log   WHERE orders.id = loan_process_log.order_id AND loan_process_log.task_definition_key = 'usertask_remit_review' ORDER BY id DESC LIMIT 1)
										AS remitdate,
			(
				SELECT
					loan_data_flow.express_receive_date
				FROM
					loan_data_flow
				WHERE
					orders.id = loan_data_flow.order_id
				AND type = 2
			) AS express_receive_date,

			material_audit.complete_material_date,
(SELECT create_time FROM loan_process_log   WHERE orders.id = loan_process_log.order_id AND loan_process_log.task_definition_key = 'usertask_material_review' ORDER BY id DESC LIMIT 1) AS materialReviewSubmit,

loan_process.material_review,

			(
				SELECT
					count(type = 2)
				FROM
					loan_info_supplement
				WHERE
					loan_info_supplement.order_id = orders.id
			) AS supplementCount,
			(
				SELECT
					GROUP_CONCAT(
						DATE_FORMAT(end_time, '%Y-%m-%d  '),
						content
					ORDER BY
						id DESC
					)
				FROM
					loan_info_supplement
				WHERE
					loan_info_supplement.order_id = orders.id
				AND type = 2
			) AS supplementContent,
			(
				SELECT
					GROUP_CONCAT(
						DATE_FORMAT(start_time, '%Y-%m-%d至'),
						DATE_FORMAT(end_time, '%Y-%m-%d')
					ORDER BY
						id DESC
					)
				FROM
					loan_info_supplement
				WHERE
					loan_info_supplement.order_id = orders.id
				AND type = 2
			) AS supplementTime,

			(
				SELECT
					create_time
				FROM
					loan_process_log
				WHERE
					orders.id = loan_process_log.order_id
				AND task_definition_key = 'usertask_vehicle_information'
			) AS carMaterialCreateTime,

			(
				SELECT
					loan_data_flow.express_send_date
				FROM
					loan_data_flow
				WHERE
					orders.id = loan_data_flow.order_id
				AND type = 3
				ORDER BY
					id DESC
				LIMIT 1
			) AS express_sendbank_date
		FROM
			loan_order orders
		LEFT JOIN loan_customer customer ON orders.loan_customer_id = customer.id
		LEFT JOIN loan_base_info ON orders.loan_base_info_id = loan_base_info.id
		LEFT JOIN loan_financial_plan ON orders.loan_financial_plan_id = loan_financial_plan.id
		LEFT JOIN loan_base_info base ON orders.loan_base_info_id = base.id
		LEFT JOIN partner partner ON partner.id = base.partner_id
		LEFT JOIN remit_details ON orders.remit_details_id = remit_details.id
		LEFT JOIN base_area ON loan_base_info.area_id = base_area.area_id
		LEFT JOIN loan_process ON orders.id = loan_process.order_id
		LEFT JOIN material_audit ON orders.material_audit_id = material_audit.id

        <where>
            and loan_process.material_review IN (1, 3)
            <if test="partnerList != null and partnerList.size() > 0">
                and
                base.partner_id in
                <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="bankList != null and bankList.size() > 0">
                and
                base.bank in
                <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

        </where>
	) t where remitdate between #{startDate} and #{endDate}
    </select>

    <!--=======================================导出 EXCEL 抵押超期=========================================-->
    <select id="exportMortgageOverdueQuerys" parameterType="com.yunche.loan.domain.param.ExportMortgageOverdueQueryVerifyParam"  resultType="com.yunche.loan.domain.vo.ExportMortgageOverdueQueryVO" >
SELECT
	base_area.area_name,
	partner. NAME AS partner_name,
	customer. NAME AS customer_name,
	customer.id_card,
	customer.mobile AS customer_mobile,
	loanbaseinfo.bank,
	car.car_type,
	vehicle_information.license_plate_number,
	cardetail.price,
	loan_financial_plan.loan_amount,
	loan_financial_plan.bank_period_principal,
	(
		SELECT
			create_time
		FROM
			loan_process_log
		WHERE
			orders.id = loan_process_log.order_id
		AND loan_process_log.task_definition_key = 'usertask_apply_license_plate_deposit_info'
		ORDER BY
			id DESC
		LIMIT 1
	) AS remitdate,
	bank_lend_record.lend_date,
	(
		SELECT
			loan_data_flow.express_send_date
		FROM
			loan_data_flow
		WHERE
			orders.id = loan_data_flow.order_id
		AND type = 12
		ORDER BY
			id DESC
		LIMIT 1
	) AS sendMaterialToParter_date,
	(
		SELECT
			loan_data_flow.express_receive_date
		FROM
			loan_data_flow
		WHERE
			orders.id = loan_data_flow.order_id
		AND type = 12
		ORDER BY
			id DESC
		LIMIT 1
	) AS ParterReceiveMaterial_date,
	process.apply_license_plate_deposit_info,
	CASE
WHEN process.apply_license_plate_deposit_info = 1 THEN
	(
		SELECT
			create_time
		FROM
			loan_process_log
		WHERE
			order_id = orders.id
		AND task_definition_key = 'usertask_apply_license_plate_deposit_info'
		ORDER BY
			create_time DESC
		LIMIT 1
	)
ELSE
	NULL
END depositTime,
CASE
WHEN (
	SELECT
		create_time
	FROM
		loan_process_log
	WHERE
		order_id = orders.id
	AND task_definition_key = 'usertask_apply_license_plate_deposit_info'
	ORDER BY
		create_time DESC
	LIMIT 1
) IS NULL THEN
	round(
		(
			UNIX_TIMESTAMP(
				DATE_FORMAT(now(), '%Y-%m-%d')
			) - UNIX_TIMESTAMP(
				DATE_FORMAT(
					(
						SELECT
							create_time
						FROM
							loan_process_log
						WHERE
							order_id = orders.id
						AND task_definition_key = 'usertask_remit_review'
						ORDER BY
							create_time DESC
						LIMIT 1
					),
					'%Y-%m-%d'
				)
			)
		) / (24 * 60 * 60)
	)
ELSE
	round(
		(
			UNIX_TIMESTAMP(
				DATE_FORMAT(
					(
						SELECT
							create_time
						FROM
							loan_process_log
						WHERE
							order_id = orders.id
						AND task_definition_key = 'usertask_apply_license_plate_deposit_info'
						ORDER BY
							create_time DESC
						LIMIT 1
					),
					'%Y-%m-%d'
				)
			) - UNIX_TIMESTAMP(
				DATE_FORMAT(lend.lend_date, '%Y-%m-%d')
			)
		) / (24 * 60 * 60)
	)
END AS depositOverdueTime,
(
	SELECT
		user_name
	FROM
		loan_process_log
	WHERE
		order_id = orders.id
	AND task_definition_key = 'usertask_apply_license_plate_deposit_info'
	ORDER BY
		create_time DESC
	LIMIT 1
) AS submitUser
FROM
	loan_order orders
LEFT JOIN loan_customer customer ON orders.loan_customer_id = customer.id
LEFT JOIN bank_lend_record lend ON lend.id = orders.bank_lend_record_id
LEFT JOIN loan_base_info loanbaseinfo ON orders.loan_base_info_id = loanbaseinfo.id
LEFT JOIN base_area ON loanbaseinfo.area_id = base_area.area_id
LEFT JOIN loan_car_info car ON orders.loan_car_info_id = car.id
LEFT JOIN car_detail cardetail ON cardetail.id = car.car_detail_id
LEFT JOIN vehicle_information ON vehicle_information.id = orders.vehicle_information_id
LEFT JOIN loan_financial_plan ON orders.loan_financial_plan_id = loan_financial_plan.id
LEFT JOIN remit_details ON orders.remit_details_id = remit_details.id
LEFT JOIN bank_lend_record ON orders.bank_lend_record_id = bank_lend_record.id
LEFT JOIN loan_process process ON orders.id = process.order_id
LEFT JOIN loan_base_info base ON orders.loan_base_info_id = base.id
LEFT JOIN employee employee ON base.salesman_id = employee.id
LEFT JOIN partner partner ON partner.id = base.partner_id

        <where>
            and process.material_review IN (1, 3) and bank_lend_record.lend_date between #{startDate} and #{endDate}
            <if test="partnerList != null and partnerList.size() > 0">
                and
                base.partner_id in
                <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="bankList != null and bankList.size() > 0">
                and
                base.bank in
                <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>



</mapper>