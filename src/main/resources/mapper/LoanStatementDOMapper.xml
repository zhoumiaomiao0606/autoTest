<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunche.loan.mapper.LoanStatementDOMapper">
    <select id="statisticsTelephoneVerifyNodeOrders" parameterType="com.yunche.loan.domain.param.TelephoneVerifyParam"
            resultType="com.yunche.loan.domain.vo.TelephoneVerifyNodeOrdersVO">
        SELECT
        tab.*
        FROM
        (
        SELECT
        process.gmt_create AS ct,
        process.gmt_modify AS mt,
        process.telephone_verify,
        plan.bank_period_principal,
        plan.bank,
        CASE

        WHEN process.telephone_verify = 2 THEN
        '待处理'
        WHEN process.telephone_verify = 12 THEN
        '弃单'
        WHEN process.telephone_verify = 4 THEN
        '电审专员提交'
        WHEN process.telephone_verify = 5 THEN
        '电审组长提交'
        WHEN process.telephone_verify = 6 THEN
        '电审主管提交'
        WHEN process.telephone_verify = 7 THEN
        '电审总监提交'
        WHEN process.telephone_verify = 1 THEN
        case when tal.telephone_verify_level = 7 then '电审总监过单'
        when tal.telephone_verify_level = 6 then '电审主管过单'
        when tal.telephone_verify_level = 5 then '电审组长过单'
        when tal.telephone_verify_level = 4 then '电审专员过单'
        else '异常提交' end
        ELSE '待处理'
        END AS commit_status,
        orders.id AS order_id,
        customer.NAME AS customer_name,
        '身份证' AS customer_card_type,
        customer.id_card AS customer_id_card,
        saleman.NAME AS saleman_name,
        partner.NAME AS partner_name,
        partner.partner_code as partner_code,

        CASE
        WHEN partner.partner_group is null THEN
        partner.partner_group ELSE CONCAT(partner.partner_group ,'组')
        END AS partner_group,
        department.NAME AS saleman_department_name,
        plan.loan_amount AS loan_amount,

        CASE
        WHEN car.gps_num is null THEN
        0 ELSE car.gps_num
        END AS gps_number,
        operation.`name` AS op_user_name,
        log.create_time   AS op_time,
        log.info AS op_info,
        CASE
        WHEN process.telephone_verify = 2 then '待审核'

        WHEN log.action = 3 THEN
        '资料增补'
        WHEN log.action = 2 THEN
        '弃单'
        WHEN log.action = 1 THEN
        '通过'
        WHEN log.action = 0 THEN
        CASE

        WHEN process.telephone_verify IN ( 2, 4, 5, 6, 7 ) THEN
        '待审核' ELSE
        CASE

        WHEN ( SELECT count( 1 ) FROM loan_reject_log WHERE reject_origin_task = 'usertask_telephone_verify' AND
        order_id = process.order_id AND gmt_create BETWEEN process.gmt_create AND process.gmt_modify ) = 0 THEN
        '待审核' ELSE '已打回'
        END
        END ELSE '未知'
        END AS action,
        partner.id as partner_id,
        car.car_type,
        (select create_time from loan_process_log where task_definition_key = 'usertask_telephone_verify' and action =6
        and order_id = orders.id order by create_time limit 1) as receive_time,
        ( select create_time from loan_process_log where task_definition_key = 'usertask_telephone_verify' and action in(0,1,2,3)
        and order_id = orders.id order by create_time limit 1) as feedback_time


        FROM
        loan_order orders
        LEFT JOIN loan_process process ON orders.id = process.order_id
        LEFT JOIN loan_base_info baseinfo ON orders.loan_base_info_id = baseinfo.id
        LEFT JOIN loan_customer customer ON customer.id = orders.loan_customer_id
        LEFT JOIN loan_financial_plan plan ON plan.id = orders.loan_financial_plan_id
        LEFT join loan_car_info car on car.id = orders.loan_car_info_id
        LEFT JOIN partner partner ON baseinfo.partner_id = partner.id
        LEFT JOIN employee saleman ON baseinfo.salesman_id = saleman.id
        LEFT JOIN department department ON saleman.department_id = department.id
        left join (select DISTINCT z.*
        FROM
        loan_process_log z
        INNER JOIN (
        SELECT
        SUBSTRING_INDEX( GROUP_CONCAT( id ORDER BY create_time DESC SEPARATOR ',' ), ',', 1 ) AS id
        FROM
        loan_process_log
        WHERE
        task_definition_key = "usertask_telephone_verify"
        GROUP BY
        order_id
        ) g ON g.id = z.id) log   on log.order_id = orders.id
        left join employee operation on operation.id = log.user_id
        left join(
        SELECT
        ug.employee_id,max( g.telephone_verify_level ) as telephone_verify_level
        FROM
        employee_rela_user_group ug
        LEFT JOIN user_group g ON ug.user_group_id = g.id group by ug.employee_id
        ) tal on tal.employee_id = log.user_id
        WHERE
        telephone_verify IN ( 0, 1, 2, 4, 5, 6, 7, 12 )
        ) tab
        WHERE
        CASE

        WHEN tab.telephone_verify = 0 THEN
        CASE

        WHEN (
        SELECT
        count( 1 )
        FROM
        loan_reject_log rej
        WHERE
        rej.reject_origin_task = 'usertask_telephone_verify'
        AND rej.order_id = tab.order_id
        AND rej.gmt_create BETWEEN tab.ct
        AND tab.mt
        ) = 0 THEN
        FALSE ELSE TRUE
        END ELSE TRUE
        END
        AND
        CASE

        /*WHEN telephone_verify IN ( 2, 4, 5, 6, 7 ) THEN
        TRUE ELSE
        CASE*/

        WHEN tab.op_time IS NULL THEN
        TRUE ELSE tab.op_time between #{startDate} and #{endDate}
        END
        /*END*/
        <if test="actionList != null and actionList.size() > 0">
            and
            action in
            <foreach item="item" index="index" collection="actionList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="partnerList != null and partnerList.size() > 0">
            and
            partner_id in
            <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="bankList != null and bankList.size() > 0">
            and
            bank in
            <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        order by op_time asc
    </select>
    <!--=======================================导出 EXCEL 银行征信查询=========================================-->
    <select id="exportBankCreditQuerys" parameterType="com.yunche.loan.domain.param.ExportBankCreditQueryVerifyParam"
            resultType="com.yunche.loan.domain.vo.ExportBankCreditQueryVO">
        SELECT
        principal_area.area_name,
        -- 客户类型: 1-主贷人;2-共贷人;3-担保人;4-紧急联系人;
        CASE
        WHEN customer.cust_type = 1 THEN
        '主贷人'
        WHEN customer.cust_type = 2 THEN
        '共贷人'
        WHEN customer.cust_type = 3 THEN
        '担保人'
        WHEN customer.cust_type = 4 THEN
        '紧急联系人'
        ELSE
        NULL
        END AS cust_type,
        customer. NAME AS customer_name,
        customer.id_card AS customer_id_card,
        customer.mobile AS customer_mobile,
        principal_base.bank,
        principal_partner. NAME AS partner_name,
        employee. NAME AS salesman_name,
        principal. NAME AS principal_name,
        -- 与主贷人关系：0-本人;1-配偶;2-父母;3-子女;4-兄弟姐妹;5-亲戚;6-朋友;7-同学;8-同事;9-其它;
        CASE
        WHEN customer.id = customer.principal_cust_id THEN
        '本人'
        WHEN customer.cust_relation = 0 THEN
        '本人'
        WHEN customer.cust_relation = 1 THEN
        '配偶'
        WHEN customer.cust_relation = 2 THEN
        '父母'
        WHEN customer.cust_relation = 3 THEN
        '子女'
        WHEN customer.cust_relation = 4 THEN
        '兄弟姐妹'
        WHEN customer.cust_relation = 5 THEN
        '亲戚'
        WHEN customer.cust_relation = 6 THEN
        '朋友'
        WHEN customer.cust_relation = 7 THEN
        '同学'
        WHEN customer.cust_relation = 8 THEN
        '同事'
        WHEN customer.cust_relation = 9 THEN
        '其他'
        ELSE
        NULL
        END AS cust_relation,
        -- 征信结果: 0-不通过;1-通过;2-关注;
        CASE
        WHEN loan_credit_info_bank_his.bank_credit_result = 0 THEN
        '不通过'
        WHEN loan_credit_info_bank_his.bank_credit_result = 1 THEN
        '通过'
        WHEN loan_credit_info_bank_his.bank_credit_result = 2 THEN
        '关注'
        WHEN loan_credit_info_bank_his.bank_credit_result = 3 THEN
        '银行退回'
        ELSE
        NULL
        END AS credit_result,
        CASE
        WHEN customer.guarantee_type = 1 THEN
        '银行担保'
        WHEN customer.guarantee_type = 2 THEN
        '内部担保'
        ELSE
        NULL
        END AS guaranteeType,
        loan_credit_info_bank_his.credit_apply_time AS credit_apply_time,
        loan_credit_info_bank_his.bank_credit_record_time AS credit_query_time,
        (
        SELECT
        user_name
        FROM
        loan_process_log
        WHERE
        task_definition_key = 'usertask_bank_credit_record'
        AND order_id = principal_orders.id
        ORDER BY
        create_time
        LIMIT 1
        ) AS gmt_user
        FROM
        loan_customer customer
        left join (select customer_id,max(id) as credithisId FROM loan_credit_info_bank_his GROUP BY customer_id) tab on
        tab.customer_id = customer.id
        left join loan_credit_info_bank_his on tab.credithisId = loan_credit_info_bank_his.id
        LEFT JOIN loan_customer principal ON customer.principal_cust_id = principal.id
        LEFT JOIN loan_order principal_orders ON principal_orders.loan_customer_id = principal.id
        LEFT JOIN loan_base_info principal_base ON principal_orders.loan_base_info_id = principal_base.id
        LEFT JOIN partner principal_partner ON principal_partner.id = principal_base.partner_id
        LEFT JOIN base_area principal_area ON principal_area.area_id = principal_base.area_id
        LEFT JOIN employee employee ON employee.id = principal_base.salesman_id
        LEFT JOIN loan_process ON principal_orders.id = loan_process.order_id

        <where>
            case when #{maxGroupLevel} = 0 then false
            when #{maxGroupLevel} = 1 then
            principal_base.salesman_id in
            (
            <choose>
                <when test="juniorIds != null and juniorIds.size() > 0">
                    <foreach item="item" index="index" collection="juniorIds" separator=",">
                        #{item}
                    </foreach>
                </when>
                <otherwise>
                    select temp.id from (SELECT 1 as id) temp where temp.id =2
                </otherwise>
            </choose>
            )
            else true end
            <if test="startDate !=null and endDate !=null">
                and loan_credit_info_bank_his.bank_credit_record_time between #{startDate} and #{endDate}
            </if>
            <if test="partnerList != null and partnerList.size() > 0">
                and
                principal_base.partner_id in
                <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="bankList != null and bankList.size() > 0">
                and
                principal_base.bank in
                <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            AND customer.cust_type in (1,2,3) and customer.status = 0
        </where>
        <if test="startCreditGmtCreate != null and endCreditGmtCreate != null and startCreditGmtCreate != '' and endCreditGmtCreate != '' ">
            having(
            TO_DAYS(credit_apply_time) &gt;= TO_DAYS(#{startCreditGmtCreate})
            AND TO_DAYS(credit_apply_time) &lt;= TO_DAYS(#{endCreditGmtCreate})
            )
        </if>
        order by loan_credit_info_bank_his.bank_credit_record_time desc
    </select>


    <!--=======================================导出 EXCEL 社会征信查询=========================================-->
    <select id="exportSocialCreditQuerys1"
            parameterType="com.yunche.loan.domain.param.ExportSocialCreditQueryVerifyParam"
            resultType="com.yunche.loan.domain.vo.ExportSocialCreditQueryVO">
        SELECT
        principal_area.area_name,principal_orders.id,
        -- 客户类型: 1-主贷人;2-共贷人;3-担保人;4-紧急联系人;
        CASE
        WHEN customer.cust_type = 1 THEN
        '主贷人'
        WHEN customer.cust_type = 2 THEN
        '共贷人'
        WHEN customer.cust_type = 3 THEN
        '担保人'
        WHEN customer.cust_type = 4 THEN
        '紧急联系人'
        ELSE
        NULL
        END AS cust_type,
        customer. NAME AS customer_name,
        customer.id_card AS customer_id_card,
        customer.mobile AS customer_mobile,
        principal_base.bank,
        principal_partner. NAME AS partner_name,
        employee. NAME AS salesman_name,
        principal. NAME AS principal_name,
        -- 与主贷人关系：0-本人;1-配偶;2-父母;3-子女;4-兄弟姐妹;5-亲戚;6-朋友;7-同学;8-同事;9-其它;
        CASE
        WHEN customer.id = customer.principal_cust_id THEN
        '本人'
        WHEN customer.cust_relation = 0 THEN
        '本人'
        WHEN customer.cust_relation = 1 THEN
        '配偶'
        WHEN customer.cust_relation = 2 THEN
        '父母'
        WHEN customer.cust_relation = 3 THEN
        '子女'
        WHEN customer.cust_relation = 4 THEN
        '兄弟姐妹'
        WHEN customer.cust_relation = 5 THEN
        '亲戚'
        WHEN customer.cust_relation = 6 THEN
        '朋友'
        WHEN customer.cust_relation = 7 THEN
        '同学'
        WHEN customer.cust_relation = 8 THEN
        '同事'
        WHEN customer.cust_relation = 9 THEN
        '其他'
        ELSE
        NULL
        END AS cust_relation,
        -- 征信结果: 0-不通过;1-通过;2-关注;
        CASE
        WHEN loan_credit_info_social_his.social_credit_result = 0 THEN
        '不通过'
        WHEN loan_credit_info_social_his.social_credit_result = 1 THEN
        '通过'
        WHEN loan_credit_info_social_his.social_credit_result = 2 THEN
        '关注'
        WHEN loan_credit_info_social_his.social_credit_result = 3 THEN
        '银行退回'
        ELSE
        NULL
        END AS credit_result,
        CASE
        WHEN customer.guarantee_type = 1 THEN
        '银行担保'
        WHEN customer.guarantee_type = 2 THEN
        '内部担保'
        ELSE
        NULL
        END AS guaranteeType,
        loan_credit_info_social_his.credit_apply_time AS credit_apply_time,
        loan_credit_info_social_his.social_credit_record_time AS credit_query_time,
        (
        SELECT
        user_name
        FROM
        loan_process_log
        WHERE
        task_definition_key = 'usertask_bank_credit_record'
        AND order_id = principal_orders.id
        ORDER BY
        create_time
        LIMIT 1
        ) AS gmt_user
        FROM
        loan_customer customer
        left join (select customer_id,max(id) as credithisId FROM loan_credit_info_social_his GROUP BY customer_id) tab
        on tab.customer_id = customer.id
        left join loan_credit_info_social_his on tab.credithisId = loan_credit_info_social_his.id
        LEFT JOIN loan_customer principal ON customer.principal_cust_id = principal.id
        LEFT JOIN loan_order principal_orders ON principal_orders.loan_customer_id = principal.id
        LEFT JOIN loan_base_info principal_base ON principal_orders.loan_base_info_id = principal_base.id
        LEFT JOIN partner principal_partner ON principal_partner.id = principal_base.partner_id
        LEFT JOIN base_area principal_area ON principal_area.area_id = principal_base.area_id
        LEFT JOIN employee employee ON employee.id = principal_base.salesman_id
        LEFT JOIN loan_process ON principal_orders.id = loan_process.order_id
        <where>
            <if test="state == 1">
                loan_process.social_credit_record = 1 and
            </if>

            <if test="state == 2">
                loan_process.social_credit_record = 2 and
            </if>


            loan_process.order_status = 1
            and
            case when #{maxGroupLevel} = 0 then false
            when #{maxGroupLevel} = 1 then
            principal_base.salesman_id in
            (
            <choose>
                <when test="juniorIds != null and juniorIds.size() > 0">
                    <foreach item="item" index="index" collection="juniorIds" separator=",">
                        #{item}
                    </foreach>
                </when>
                <otherwise>
                    select temp.id from (SELECT 1 as id) temp where temp.id =2
                </otherwise>
            </choose>
            )
            else true end

            <if test="startDate !=null and endDate !=null">
                and loan_credit_info_social_his.social_credit_record_time between #{startDate} and #{endDate}
            </if>
            <if test="partnerList != null and partnerList.size() > 0">
                and
                principal_base.partner_id in
                <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="bankList != null and bankList.size() > 0">
                and
                principal_base.bank in
                <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            AND customer.cust_type in (1,2,3) and customer.status = 0
        </where>
        <if test="startCreditGmtCreate != null and endCreditGmtCreate != null">
            having(
            TO_DAYS(credit_apply_time) &gt;= TO_DAYS(#{startCreditGmtCreate})
            AND TO_DAYS(credit_apply_time) &lt;= TO_DAYS(#{endCreditGmtCreate})
            )
        </if>
        order by loan_credit_info_social_his.social_credit_record_time desc
    </select>

    <select id="exportSocialCreditQuerys2"
            parameterType="com.yunche.loan.domain.param.ExportSocialCreditQueryVerifyParam"
            resultType="com.yunche.loan.domain.vo.ExportSocialCreditQueryVO">
        SELECT
        principal_area.area_name,principal_orders.id,
        -- 客户类型: 1-主贷人;2-共贷人;3-担保人;4-紧急联系人;
        CASE
        WHEN customer.cust_type = 1 THEN
        '主贷人'
        WHEN customer.cust_type = 2 THEN
        '共贷人'
        WHEN customer.cust_type = 3 THEN
        '担保人'
        WHEN customer.cust_type = 4 THEN
        '紧急联系人'
        ELSE
        NULL
        END AS cust_type,
        customer. NAME AS customer_name,
        customer.id_card AS customer_id_card,
        customer.mobile AS customer_mobile,
        principal_base.bank,
        principal_partner. NAME AS partner_name,
        employee. NAME AS salesman_name,
        principal. NAME AS principal_name,
        -- 与主贷人关系：0-本人;1-配偶;2-父母;3-子女;4-兄弟姐妹;5-亲戚;6-朋友;7-同学;8-同事;9-其它;
        CASE
        WHEN customer.id = customer.principal_cust_id THEN
        '本人'
        WHEN customer.cust_relation = 0 THEN
        '本人'
        WHEN customer.cust_relation = 1 THEN
        '配偶'
        WHEN customer.cust_relation = 2 THEN
        '父母'
        WHEN customer.cust_relation = 3 THEN
        '子女'
        WHEN customer.cust_relation = 4 THEN
        '兄弟姐妹'
        WHEN customer.cust_relation = 5 THEN
        '亲戚'
        WHEN customer.cust_relation = 6 THEN
        '朋友'
        WHEN customer.cust_relation = 7 THEN
        '同学'
        WHEN customer.cust_relation = 8 THEN
        '同事'
        WHEN customer.cust_relation = 9 THEN
        '其他'
        ELSE
        NULL
        END AS cust_relation,
        -- 征信结果: 0-不通过;1-通过;2-关注;
        CASE
        WHEN loan_credit_info_his.social_credit_result = 0 THEN
        '不通过'
        WHEN loan_credit_info_his.social_credit_result = 1 THEN
        '通过'
        WHEN loan_credit_info_his.social_credit_result = 2 THEN
        '关注'
        WHEN loan_credit_info_his.social_credit_result = 3 THEN
        '银行退回'
        ELSE
        NULL
        END AS credit_result,
        CASE
        WHEN customer.guarantee_type = 1 THEN
        '银行担保'
        WHEN customer.guarantee_type = 2 THEN
        '内部担保'
        ELSE
        NULL
        END AS guaranteeType,
        loan_credit_info_his.credit_apply_time AS credit_apply_time,
        loan_credit_info_his.social_credit_record_time AS credit_query_time,
        (
        SELECT
        user_name
        FROM
        loan_process_log
        WHERE
        task_definition_key = 'usertask_bank_credit_record'
        AND order_id = principal_orders.id
        ORDER BY
        create_time
        LIMIT 1
        ) AS gmt_user
        FROM
        loan_customer customer
        left join (select customer_id,max(id) as credithisId FROM loan_credit_info_his GROUP BY customer_id) tab on
        tab.customer_id = customer.id
        left join loan_credit_info_his on tab.credithisId = loan_credit_info_his.id
        LEFT JOIN loan_customer principal ON customer.principal_cust_id = principal.id
        LEFT JOIN loan_order principal_orders ON principal_orders.loan_customer_id = principal.id
        LEFT JOIN loan_base_info principal_base ON principal_orders.loan_base_info_id = principal_base.id
        LEFT JOIN partner principal_partner ON principal_partner.id = principal_base.partner_id
        LEFT JOIN base_area principal_area ON principal_area.area_id = principal_base.area_id
        LEFT JOIN employee employee ON employee.id = principal_base.salesman_id
        LEFT JOIN loan_process ON principal_orders.id = loan_process.order_id
        <where>
            loan_process.order_status = 1 and loan_process.social_credit_record =2
            and
            case when #{maxGroupLevel} = 0 then false
            when #{maxGroupLevel} = 1 then
            principal_base.salesman_id in
            (
            <choose>
                <when test="juniorIds != null and juniorIds.size() > 0">
                    <foreach item="item" index="index" collection="juniorIds" separator=",">
                        #{item}
                    </foreach>
                </when>
                <otherwise>
                    select temp.id from (SELECT 1 as id) temp where temp.id =2
                </otherwise>
            </choose>
            )
            else true end

            <if test="startDate !=null and endDate !=null">
                and loan_credit_info_his.social_credit_record_time between #{startDate} and #{endDate}
            </if>
            <if test="partnerList != null and partnerList.size() > 0">
                and
                principal_base.partner_id in
                <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="bankList != null and bankList.size() > 0">
                and
                principal_base.bank in
                <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            AND customer.cust_type in (1,2,3) and customer.status = 0
        </where>
        <if test="startCreditGmtCreate != null and endCreditGmtCreate != null">
            having(
            TO_DAYS(credit_apply_time) &gt;= TO_DAYS(#{startCreditGmtCreate})
            AND TO_DAYS(credit_apply_time) &lt;= TO_DAYS(#{endCreditGmtCreate})
            )
        </if>
        order by loan_credit_info_his.social_credit_record_time desc
    </select>


    <!--=======================================导出 EXCEL 财务垫款明细查询=========================================-->
    <select id="exportRemitDetailQuerys" parameterType="com.yunche.loan.domain.param.ExportRemitDetailQueryVerifyParam"
            resultType="com.yunche.loan.domain.vo.ExportRemitDetailQueryVO">

        SELECT
        base_area.area_name,
        customer. NAME AS customer_name,
        customer.id_card AS customer_id_card,
        customer.mobile AS customer_mobile,
        loaninfo.bank,
        partner. NAME AS partner_name,
        employee. NAME AS salesman_name,
        case when car.car_type = 0 then '新车'
        when car.car_type = 1 then '二手车'
        else '其他' end as car_type,
        loan_financial_plan.car_price AS price,
        loan_financial_plan.sign_rate,
        loan_financial_plan.loan_amount,
        loan_financial_plan.down_payment_money,
        loan_financial_plan.bank_period_principal,
        remit_details.remit_amount,
        orders.gmt_create,
        (
        SELECT
        loan_process_log.create_time
        FROM
        loan_process_log
        WHERE
        order_id = orders.id
        AND task_definition_key = 'usertask_remit_review'
        ORDER BY
        create_time DESC
        LIMIT 1
        ) as submitTime,
        (
        SELECT
        loan_process_log.user_name
        FROM
        loan_process_log
        WHERE
        order_id = orders.id
        AND task_definition_key = 'usertask_remit_review'
        ORDER BY
        create_time DESC
        LIMIT 1
        ) as username
        FROM
        loan_order orders
        LEFT JOIN loan_customer customer ON orders.loan_customer_id = customer.id
        LEFT JOIN loan_base_info loaninfo ON orders.loan_base_info_id = loaninfo.id
        LEFT JOIN base_area ON loaninfo.area_id = base_area.area_id
        LEFT JOIN loan_car_info car ON orders.loan_car_info_id = car.id
        LEFT JOIN car_detail cardetail ON cardetail.id = car.car_detail_id
        LEFT JOIN loan_financial_plan ON orders.loan_financial_plan_id = loan_financial_plan.id
        LEFT JOIN remit_details ON orders.remit_details_id = remit_details.id
        LEFT JOIN loan_process process ON orders.id = process.order_id
        LEFT JOIN loan_base_info base ON orders.loan_base_info_id = base.id
        LEFT JOIN employee employee ON base.salesman_id = employee.id
        LEFT JOIN partner partner ON partner.id = base.partner_id
        where 1=1
        and process.remit_review = 1
        and
        case when #{maxGroupLevel} = 0 then false
        when #{maxGroupLevel} = 1 then
        loaninfo.salesman_id in
        (
        <choose>
            <when test="juniorIds != null and juniorIds.size() > 0">
                <foreach item="item" index="index" collection="juniorIds" separator=",">
                    #{item}
                </foreach>
            </when>
            <otherwise>
                select temp.id from (SELECT 1 as id) temp where temp.id =2
            </otherwise>
        </choose>
        )
        else true end
        <if test="partnerList != null and partnerList.size() > 0">
            and
            base.partner_id in
            <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="bankList != null and bankList.size() > 0">
            and
            base.bank in
            <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="startRemitAmount !=null">
            and
            remit_details.remit_amount &gt;= #{startRemitAmount}
        </if>

        <if test="endRemitAmount !=null">
            AND remit_details.remit_amount &lt;= #{endRemitAmount}
        </if>

        having submitTime between #{startDate} AND CONCAT(#{endDate},' 23.59.59')
        order by submitTime desc

    </select>

    <!--=======================================导出 EXCEL 资料审核明细查询=========================================-->
    <select id="exportMaterialReviewQuerys"
            parameterType="com.yunche.loan.domain.param.ExportMaterialReviewQueryVerifyParam"
            resultType="com.yunche.loan.domain.vo.ExportMaterialReviewDetailQueryVO">
        SELECT
        t.*,
        CASE

        WHEN t.express_receive_date IS NOT NULL THEN
        floor(
        ( UNIX_TIMESTAMP( DATE_FORMAT( t.express_receive_date, '%Y-%m-%d' ) ) - UNIX_TIMESTAMP( DATE_FORMAT(
        t.remitdate, '%Y-%m-%d' ) ) ) / ( 24 * 60 * 60 )
        ) ELSE floor(
        ( UNIX_TIMESTAMP( DATE_FORMAT( now( ), '%Y-%m-%d' ) ) - UNIX_TIMESTAMP( DATE_FORMAT( t.remitdate, '%Y-%m-%d' ) )
        ) / ( 24 * 60 * 60 )
        )
        END AS remitOverdueTime,
        CASE

        WHEN t.complete_material_date IS NOT NULL THEN
        floor(
        ( UNIX_TIMESTAMP( DATE_FORMAT( t.complete_material_date, '%Y-%m-%d' ) ) - UNIX_TIMESTAMP( DATE_FORMAT(
        t.remitdate, '%Y-%m-%d' ) ) ) / ( 24 * 60 * 60 )
        ) ELSE floor(
        ( UNIX_TIMESTAMP( DATE_FORMAT( now( ), '%Y-%m-%d' ) ) - UNIX_TIMESTAMP( DATE_FORMAT( t.remitdate, '%Y-%m-%d' ) )
        ) / ( 24 * 60 * 60 )
        )
        END AS revievOverdueTime
        FROM
        (
        SELECT
        base_area.area_name,
        partner.NAME AS partner_name,
        partner.partner_code as partner_code,

        CASE
        WHEN partner.partner_group is null THEN
        partner.partner_group ELSE CONCAT(partner.partner_group ,'组')
        END AS partner_group,

        customer.NAME AS customer_name,
        customer.id_card,
        loan_base_info.bank,
        loan_financial_plan.bank_period_principal,
        ( SELECT create_time FROM loan_process_log WHERE orders.id = loan_process_log.order_id AND
        loan_process_log.task_definition_key = 'usertask_remit_review' ORDER BY id DESC LIMIT 1 ) AS remitdate,
        ( SELECT loan_data_flow.express_receive_date FROM loan_data_flow WHERE orders.id = loan_data_flow.order_id AND
        type = 2 ORDER BY loan_data_flow.id DESC LIMIT 1 ) AS express_receive_date,
        material_audit.complete_material_date,
        ( SELECT create_time FROM loan_process_log WHERE orders.id = loan_process_log.order_id AND
        loan_process_log.task_definition_key = 'usertask_material_review' ORDER BY id DESC LIMIT 1 ) AS
        materialReviewSubmit,
        DATE_FORMAT((
        SELECT
        loan_process_log.create_time
        FROM
        loan_process_log
        WHERE
        order_id = orders.id
        AND task_definition_key = 'usertask_material_print_review'
        ORDER BY
        id DESC
        LIMIT 1
        ), '%Y-%m-%d %H:%i:%S' )
        as materialPrintTime,
        CASE

        WHEN loan_process.material_review = 1 THEN
        '已提交'
        WHEN loan_process.material_review = 2 THEN
        '未提交'
        WHEN loan_process.material_review = 3 THEN
        '已打回'
        ELSE '未知' END AS material_review,
        ( SELECT count( 1 ) FROM loan_info_supplement WHERE loan_info_supplement.order_id = orders.id ) AS
        supplementCount,
        ( SELECT GROUP_CONCAT( DATE_FORMAT( end_time, '%Y-%m-%d ' ), content ORDER BY id DESC ) FROM
        loan_info_supplement WHERE loan_info_supplement.order_id = orders.id ) AS supplementContent,
        (
        SELECT
        GROUP_CONCAT( DATE_FORMAT( start_time, '%Y-%m-%d至' ), DATE_FORMAT( end_time, '%Y-%m-%d' ) ORDER BY id DESC )
        FROM
        loan_info_supplement
        WHERE
        loan_info_supplement.order_id = orders.id
        ) AS supplementTime,
        ( SELECT create_time FROM loan_process_log WHERE orders.id = loan_process_log.order_id AND task_definition_key =
        'usertask_vehicle_information' ORDER BY id DESC LIMIT 1 ) AS carMaterialCreateTime,
        ( SELECT loan_data_flow.express_send_date FROM loan_data_flow WHERE orders.id = loan_data_flow.order_id AND
        (type = 3 or type = 4) ORDER BY id DESC LIMIT 1 ) AS express_sendbank_date,
        (SELECT
        create_time
        FROM
        loan_process_log
        WHERE
        order_id = orders.id
        AND task_definition_key = 'usertask_material_review'
        AND action = 6
        ORDER BY create_time limit 1) AS data_audit_receive_date,
        (SELECT
        create_time
        FROM
        loan_process_log
        WHERE
        task_definition_key = 'usertask_material_print_review' and order_id = orders.id  and action =1
        ORDER BY create_time desc limit 1)AS contract_set_up_date,
        (select request_time from bank_interface_serial where trans_code = 'applydivigeneral'
        and order_id = orders.id
        order by request_time limit 1) AS online_staging_date,
        (SELECT
        create_time
        FROM
        loan_process_log
        WHERE
        task_definition_key = 'usertask_data_flow_contract_c2b_review'
        AND order_id = orders.id
        AND action = 1
        ORDER BY
        create_time
        LIMIT 1) AS bank_accept_contract_date,
        (select lend_date from bank_lend_record where loan_order =  orders.id order by lend_date desc limit 1) AS bank_loan_date
        FROM
        loan_order orders
        LEFT JOIN loan_customer customer ON orders.loan_customer_id = customer.id
        LEFT JOIN loan_base_info ON orders.loan_base_info_id = loan_base_info.id
        LEFT JOIN loan_financial_plan ON orders.loan_financial_plan_id = loan_financial_plan.id
        LEFT JOIN loan_base_info base ON orders.loan_base_info_id = base.id
        LEFT JOIN partner partner ON partner.id = base.partner_id
        LEFT JOIN remit_details ON orders.remit_details_id = remit_details.id
        LEFT JOIN base_area ON loan_base_info.area_id = base_area.area_id
        LEFT JOIN loan_process ON orders.id = loan_process.order_id
        LEFT JOIN material_audit ON orders.material_audit_id = material_audit.id

        <where>
            case when #{maxGroupLevel} = 0 then false
            when #{maxGroupLevel} = 1 then
            loan_base_info.salesman_id in
            (
            <choose>
                <when test="juniorIds != null and juniorIds.size() > 0">
                    <foreach item="item" index="index" collection="juniorIds" separator=",">
                        #{item}
                    </foreach>
                </when>
                <otherwise>
                    select temp.id from (SELECT 1 as id) temp where temp.id =2
                </otherwise>
            </choose>
            )
            else true end
            and loan_process.material_review != 0
            <if test="partnerList != null and partnerList.size() > 0">
                and
                base.partner_id in
                <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="bankList != null and bankList.size() > 0">
                and
                base.bank in
                <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

        </where>
        ) t where remitdate between #{startDate} and #{endDate}
        <if test="startDate1 != null">
            AND TO_DAYS(t.express_receive_date) &lt;= TO_DAYS(#{startDate1})
        </if>
        <if test="endDate1 != null">
            AND TO_DAYS(t.express_receive_date) &lt;= TO_DAYS(#{endDate1})
        </if>
        <if test="startDate2 != null">
            AND TO_DAYS(t.materialReviewSubmit) &lt;= TO_DAYS(#{startDate2})
        </if>
        <if test="endDate2 != null">
            AND TO_DAYS(t.materialReviewSubmit) &lt;= TO_DAYS(#{endDate2})
        </if>
        order by t.express_receive_date desc
    </select>

    <!--=======================================导出 EXCEL 抵押超期=========================================-->
    <select id="exportMortgageOverdueQuerys"
            parameterType="com.yunche.loan.domain.param.ExportMortgageOverdueQueryVerifyParam"
            resultType="com.yunche.loan.domain.vo.ExportMortgageOverdueQueryVO">
        SELECT
        loanbaseinfo.area_id,
        base_area.area_name,
        partner.NAME AS partner_name,
        customer.NAME AS customer_name,
        customer.id_card,
        customer.mobile AS customer_mobile,
        loanbaseinfo.bank,
        CASE

        WHEN car.car_type = 0 THEN
        '新车'
        WHEN car.car_type = 1 THEN
        '二手车' ELSE '其他'
        END AS car_type,
        vehicle_information.license_plate_number,
        vehicle_information.vehicle_identification_number,
        cardetail.price,
        loan_financial_plan.loan_amount,
        loan_financial_plan.bank_period_principal,
        ( SELECT create_time FROM loan_process_log WHERE orders.id = loan_process_log.order_id AND
        loan_process_log.task_definition_key = 'usertask_remit_review' ORDER BY id DESC LIMIT 1 ) AS remitdate,
        bank_lend_record.lend_date,
        ( SELECT loan_data_flow.express_send_date FROM loan_data_flow WHERE orders.id = loan_data_flow.order_id AND type
        = 12 ORDER BY id DESC LIMIT 1 ) AS sendMaterialToParter_date,
        ( SELECT loan_data_flow.express_receive_date FROM loan_data_flow WHERE orders.id = loan_data_flow.order_id AND
        type = 12 ORDER BY id DESC LIMIT 1 ) AS ParterReceiveMaterial_date,
        CASE

        WHEN process.apply_license_plate_deposit_info = 1 THEN
        '已提交'
        WHEN process.apply_license_plate_deposit_info = 2 THEN
        '未提交'
        WHEN process.apply_license_plate_deposit_info = 3 THEN
        '已打回' ELSE '未知'
        END AS apply_license_plate_deposit_info,
        CASE

        WHEN process.apply_license_plate_deposit_info !=1 THEN
        NULL ELSE a.apply_license_plate_deposit_date
        END AS depositTime,
        CASE

        WHEN a.apply_license_plate_deposit_date IS NULL THEN
        floor(
        ( UNIX_TIMESTAMP( DATE_FORMAT( now( ), '%Y-%m-%d' )) - UNIX_TIMESTAMP( DATE_FORMAT( lend.lend_date, '%Y-%m-%d' )
        ) ) / ( 24 * 60 * 60 )
        )
        ELSE
        floor
        (
        (UNIX_TIMESTAMP( DATE_FORMAT(a.apply_license_plate_deposit_date, '%Y-%m-%d' )) - UNIX_TIMESTAMP( DATE_FORMAT(
        lend.lend_date, '%Y-%m-%d' ) ) ) / ( 24 * 60 * 60 )
        )
        END AS depositOverdueTime,
        ( SELECT user_name FROM loan_process_log WHERE order_id = orders.id AND task_definition_key =
        'usertask_apply_license_plate_deposit_info' ORDER BY create_time DESC LIMIT 1 ) AS submitUser
        FROM
        loan_order orders
        LEFT JOIN loan_customer customer ON orders.loan_customer_id = customer.id
        LEFT JOIN bank_lend_record lend ON lend.id = orders.bank_lend_record_id
        LEFT JOIN loan_base_info loanbaseinfo ON orders.loan_base_info_id = loanbaseinfo.id
        LEFT JOIN base_area ON loanbaseinfo.area_id = base_area.area_id
        LEFT JOIN loan_car_info car ON orders.loan_car_info_id = car.id
        LEFT JOIN car_detail cardetail ON cardetail.id = car.car_detail_id
        LEFT JOIN vehicle_information ON vehicle_information.id = orders.vehicle_information_id
        LEFT JOIN loan_financial_plan ON orders.loan_financial_plan_id = loan_financial_plan.id
        LEFT JOIN remit_details ON orders.remit_details_id = remit_details.id
        LEFT JOIN bank_lend_record ON orders.bank_lend_record_id = bank_lend_record.id
        LEFT JOIN loan_process process ON orders.id = process.order_id
        LEFT JOIN loan_base_info base ON orders.loan_base_info_id = base.id
        LEFT JOIN employee employee ON base.salesman_id = employee.id
        LEFT JOIN partner partner ON partner.id = base.partner_id
        LEFT JOIN apply_license_plate_deposit_info a ON a.id = orders.apply_license_plate_deposit_info_id

        <where>
            case when #{maxGroupLevel} = 0 then false
            when #{maxGroupLevel} = 1 then
            loanbaseinfo.salesman_id in
            (
            <choose>
                <when test="juniorIds != null and juniorIds.size() > 0">
                    <foreach item="item" index="index" collection="juniorIds" separator=",">
                        #{item}
                    </foreach>
                </when>
                <otherwise>
                    select temp.id from (SELECT 1 as id) temp where temp.id =2
                </otherwise>
            </choose>
            )
            else true end
            and process.apply_license_plate_deposit_info != 0 and bank_lend_record.lend_date between #{startDate} and
            #{endDate}
            <if test="partnerList != null and partnerList.size() > 0">
                and
                base.partner_id in
                <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="bankList != null and bankList.size() > 0">
                and
                base.bank in
                <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        order by bank_lend_record.lend_date desc
    </select>


    <select id="exportOrders" resultType="com.yunche.loan.domain.vo.ExportOrdersVO"
            parameterType="com.yunche.loan.domain.param.ExportOrdersParam">
        select
        orders.id as order_id,
        -- 征信结果: 0-不通过;1-通过;2-关注;
        CASE
        WHEN credit_info.result = 0 THEN
        '不通过'
        WHEN credit_info.result = 1 THEN
        '通过'
        WHEN credit_info.result = 2 THEN
        '关注'
        WHEN credit_info.result = 3 THEN
        '银行退回'
        ELSE
        NULL
        END AS credit_result,
        customer.name as customer_name,
        customer.id_card as customer_id_card,
        customer.mobile as customer_mobile,
        saleman.name as saleman,
        partner.name as partner_name,
        plan.car_price as car_price,
        baseinfo.bank as plan_bank,
        plan.appraisal as plan_appraisal,
        plan.loan_amount as plan_loan_amount,
        plan.bank_period_principal as plan_bank_period_principal,
        remit.remit_amount as remit_amount,
        plan.loan_time as plan_loan_time,
        useGetCarName(car.car_detail_id) as car_name,
        case when car.car_type = 0 then '新车'
        when car.car_type = 1 then '二手车'
        else '其他' end as car_type,
        vehicle.license_plate_number as vehicle_license_plate_number,
        vehicle.engine_number as vehicle_engine_number,
        vehicle.vehicle_identification_number as vehicle_identification_number,
        vehicle.register_date as vehicle_register_date,
        vehicle.color as vehicle_color,
        vehicle.displacement as vehicle_displacement,
        TIMESTAMPDIFF(MONTH,now(),vehicle.register_date) as vehicle_use_year,
        current.usertask_credit_apply_create_time as usertask_credit_apply_create_time,
        current.usertask_bank_credit_record_create_time as usertask_bank_credit_record_create_time,
        current.usertask_social_credit_record_create_time as usertask_social_credit_record_create_time,
        current.usertask_loan_apply_create_time as usertask_loan_apply_create_time,
        current.usertask_visit_verify_create_time as usertask_visit_verify_create_time,
        current.usertask_telephone_verify_create_time as usertask_telephone_verify_create_time,
        current.usertask_vehicle_information_create_time as usertask_vehicle_information_create_time,
        current.usertask_material_review_create_time as usertask_material_review_create_time,
        current.usertask_material_print_review_create_time as usertask_material_print_review_create_time,
        current.usertask_install_gps_create_time as usertask_install_gps_create_time,
        current.usertask_apply_license_plate_deposit_info_create_time as
        usertask_apply_license_plate_deposit_info_create_time,
        current.usertask_car_insurance_create_time as usertask_car_insurance_create_time,
        current.usertask_business_pay_create_time as usertask_business_pay_create_time,
        current.usertask_business_review_create_time as usertask_business_review_create_time,
        current.usertask_loan_review_create_time as usertask_loan_review_create_time,
        current.usertask_remit_review_create_time as usertask_remit_review_create_time,
        current.usertask_material_manage_create_time as usertask_material_manage_create_time,
        lend.lend_date as usertask_bank_lend_record_create_time,
        send.express_send_date as usertask_bank_card_send_create_time,
        flow.express_receive_date   as express_receive_date_time

        FROM
        loan_order orders
        LEFT JOIN loan_process process ON orders.id = process.order_id
        LEFT JOIN loan_base_info baseinfo ON orders.loan_base_info_id = baseinfo.id
        LEFT JOIN loan_customer customer ON customer.id = orders.loan_customer_id
        LEFT JOIN loan_financial_plan plan ON plan.id = orders.loan_financial_plan_id
        LEFT JOIN remit_details remit on orders.remit_details_id = remit.id
        LEFT JOIN loan_car_info car on car.id = orders.loan_car_info_id
        LEFT JOIN vehicle_information vehicle on vehicle.id = orders.vehicle_information_id
        LEFT JOIN current_node_manager current on orders.id = current.order_id
        LEFT JOIN bank_lend_record lend on lend.id = orders.bank_lend_record_id
        LEFT JOIN loan_bank_card_send send on send.order_id = orders.id
        LEFT JOIN partner partner ON baseinfo.partner_id = partner.id
        LEFT JOIN employee saleman ON baseinfo.salesman_id = saleman.id
        LEFT JOIN department department ON saleman.department_id = department.id
        LEFT JOIN loan_credit_info credit_info ON credit_info.customer_id = customer.id
        left join (
        SELECT DISTINCT z.*
        FROM
        loan_data_flow z
        INNER JOIN (
        SELECT
        SUBSTRING_INDEX( GROUP_CONCAT( id ORDER BY express_receive_date DESC SEPARATOR ',' ), ',', 1 ) AS id
        FROM
        loan_data_flow
        WHERE
        type =2

        GROUP BY
        order_id
        ) g ON g.id = z.id

        ) flow on flow.order_id = orders.id
        where 1=1
        and (credit_info.type = 1 OR credit_info.type is NULL)
        AND
        case when #{maxGroupLevel} = 0 then false
        when #{maxGroupLevel} = 1 then
        baseinfo.salesman_id in
        (
        <choose>
            <when test="juniorIds != null and juniorIds.size() > 0">
                <foreach item="item" index="index" collection="juniorIds" separator=",">
                    #{item}
                </foreach>
            </when>
            <otherwise>
                select temp.id from (SELECT 1 as id) temp where temp.id =2
            </otherwise>
        </choose>
        )
        else true end
        <if test="partnerList != null and partnerList.size() > 0">
            and
            baseinfo.partner_id in
            <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="bankList != null and bankList.size() > 0">
            and
            baseinfo.bank in
            <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="car_type!=null and car_type!=''">
            and car.car_type = #{car_type}
        </if>
        having 1=1
        <if test="order_id!=null and order_id!=''">
            AND order_id LIKE CONCAT('%', #{order_id} ,'%')
        </if>
        <if test="customer_name!=null and customer_name!=''">
            AND customer_name LIKE CONCAT('%', #{customer_name} ,'%')
        </if>
        <if test="customer_id_card!=null and customer_id_card!=''">
            AND customer_id_card LIKE CONCAT('%', #{customer_id_card} ,'%')
        </if>
        <if test="customer_mobile!=null and customer_mobile!=''">
            AND customer_mobile LIKE CONCAT('%', #{customer_mobile} ,'%')
        </if>
        <if test="saleman!=null and saleman!=''">
            AND saleman LIKE CONCAT('%', #{saleman} ,'%')
        </if>
        <if test="partner_name!=null and partner_name!=''">
            AND partner_name LIKE CONCAT('%', #{partner_name} ,'%')
        </if>
        <if test="car_price_start!=null and car_price_start!='' and car_price_end!=null and car_price_end!=''">
            AND car_price &gt;= #{car_price_start} and car_price &lt;= #{car_price_end}
        </if>
        <if test="plan_bank!=null and plan_bank!=''">
            AND plan_bank LIKE CONCAT('%', #{plan_bank} ,'%')
        </if>
        <if test="plan_appraisal_start!=null and plan_appraisal_start!='' and plan_appraisal_end!=null and plan_appraisal_end!=''">
            AND plan_appraisal &gt;= #{plan_appraisal_start} and plan_appraisal &lt;= #{plan_appraisal_end}
        </if>
        <if test="plan_loan_amount_start!=null and plan_loan_amount_start!='' and plan_loan_amount_end!=null and plan_loan_amount_end!=''">
            AND plan_loan_amount &gt;= #{plan_loan_amount_start} and plan_loan_amount &lt;= #{plan_loan_amount_end}
        </if>
        <if test="plan_bank_period_principal_start!=null and plan_bank_period_principal_start!='' and plan_bank_period_principal_end!=null and plan_bank_period_principal_end!='' ">
            AND plan_bank_period_principal &gt;= #{plan_bank_period_principal_start} and plan_bank_period_principal &lt;=
            #{plan_bank_period_principal_end}
        </if>
        <if test="remit_amount_start!=null and remit_amount_start!='' and remit_amount_end!=null and remit_amount_end!=''">
            AND remit_amount &gt;= #{remit_amount_start} and remit_amount &lt;= #{remit_amount_end}
        </if>
        <if test="plan_loan_time_start!=null and plan_loan_time_start!='' and plan_loan_time_end!=null and plan_loan_time_end!=''">
            AND plan_loan_time &gt;= #{plan_loan_time_start} and plan_loan_time &lt;= #{plan_loan_time_end}
        </if>
        <if test="car_name!=null and car_name!=''">
            AND car_name LIKE CONCAT('%', #{car_name} ,'%')
        </if>
        <if test="vehicle_license_plate_number!=null and vehicle_license_plate_number!=''">
            AND vehicle_license_plate_number LIKE CONCAT('%', #{vehicle_license_plate_number} ,'%')
        </if>
        <if test="vehicle_engine_number!=null and vehicle_engine_number!=''">
            AND vehicle_engine_number LIKE CONCAT('%', #{vehicle_engine_number} ,'%')
        </if>
        <if test="vehicle_identification_number!=null and vehicle_identification_number!=''">
            AND vehicle_identification_number LIKE CONCAT('%', #{vehicle_identification_number} ,'%')
        </if>
        <if test="vehicle_register_date_start!=null and vehicle_register_date_start!='' and vehicle_register_date_end!=null and vehicle_register_date_end!=''">
            AND TO_DAYS(vehicle_register_date) &gt;= TO_DAYS(#{vehicle_register_date_start}) and
            TO_DAYS(vehicle_register_date) &lt;= TO_DAYS(#{vehicle_register_date_end})
        </if>
        <if test="vehicle_color!=null and vehicle_color!=''">
            AND vehicle_color LIKE CONCAT('%', #{vehicle_color} ,'%')
        </if>
        <if test="vehicle_displacement!=null and vehicle_displacement!=''">
            AND vehicle_displacement LIKE CONCAT('%', #{vehicle_displacement} ,'%')
        </if>
        <if test="vehicle_use_year_start!=null and vehicle_use_year_start!='' and vehicle_use_year_end!=null and vehicle_use_year_end!=''">
            AND vehicle_use_year &gt;= #{vehicle_use_year_start} and vehicle_use_year &lt;= #{vehicle_use_year_end}
        </if>
        <if test="usertask_credit_apply_create_time_start!=null and usertask_credit_apply_create_time_start!='' and usertask_credit_apply_create_time_end!=null and usertask_credit_apply_create_time_end!='' ">
            AND TO_DAYS(usertask_credit_apply_create_time) &gt;= TO_DAYS(#{usertask_credit_apply_create_time_start})
            AND TO_DAYS(usertask_credit_apply_create_time) &lt;= TO_DAYS(#{usertask_credit_apply_create_time_end})
        </if>
        <if test="usertask_bank_credit_record_create_time_start!=null and usertask_bank_credit_record_create_time_start!='' and usertask_bank_credit_record_create_time_end!=null and usertask_bank_credit_record_create_time_end!=''">
            AND TO_DAYS(usertask_bank_credit_record_create_time) &gt;=
            TO_DAYS(#{usertask_bank_credit_record_create_time_start})
            AND TO_DAYS(usertask_bank_credit_record_create_time) &lt;=
            TO_DAYS(#{usertask_bank_credit_record_create_time_end})
        </if>
        <if test="usertask_social_credit_record_create_time_start!=null and usertask_social_credit_record_create_time_start!='' and usertask_social_credit_record_create_time_end!=null and usertask_social_credit_record_create_time_end!=''">
            AND TO_DAYS(usertask_social_credit_record_create_time) &gt;=
            TO_DAYS(#{usertask_social_credit_record_create_time_start})
            AND TO_DAYS(usertask_social_credit_record_create_time) &lt;=
            TO_DAYS(#{usertask_social_credit_record_create_time_end})
        </if>
        <if test="usertask_loan_apply_create_time_start!=null and usertask_loan_apply_create_time_start!='' and usertask_loan_apply_create_time_end!=null and usertask_loan_apply_create_time_end!=''">
            AND TO_DAYS(usertask_loan_apply_create_time) &gt;= TO_DAYS(#{usertask_loan_apply_create_time_start})
            AND TO_DAYS(usertask_loan_apply_create_time) &lt;= TO_DAYS(#{usertask_loan_apply_create_time_end})
        </if>
        <if test="usertask_visit_verify_create_time_start!=null and usertask_visit_verify_create_time_start!='' and usertask_visit_verify_create_time_end!=null and usertask_visit_verify_create_time_end!=''">
            AND TO_DAYS(usertask_visit_verify_create_time) &gt;= TO_DAYS(#{usertask_visit_verify_create_time_start})
            AND TO_DAYS(usertask_visit_verify_create_time) &lt;= TO_DAYS(#{usertask_visit_verify_create_time_end})
        </if>
        <if test="usertask_telephone_verify_create_time_start!=null and usertask_telephone_verify_create_time_start!='' and usertask_telephone_verify_create_time_end!=null and usertask_telephone_verify_create_time_end!=''">
            AND TO_DAYS(usertask_telephone_verify_create_time) &gt;=
            TO_DAYS(#{usertask_telephone_verify_create_time_start})
            AND TO_DAYS(usertask_telephone_verify_create_time) &lt;=
            TO_DAYS(#{usertask_telephone_verify_create_time_end})
        </if>
        <if test="usertask_vehicle_information_create_time_start!=null and usertask_vehicle_information_create_time_start!='' and usertask_vehicle_information_create_time_end!=null and usertask_vehicle_information_create_time_end!=''">
            AND TO_DAYS(usertask_vehicle_information_create_time) &gt;=
            TO_DAYS(#{usertask_vehicle_information_create_time_start})
            AND TO_DAYS(usertask_vehicle_information_create_time) &lt;=
            TO_DAYS(#{usertask_vehicle_information_create_time_end})
        </if>
        <if test="usertask_material_review_create_time_start!=null and usertask_material_review_create_time_start!='' and usertask_material_review_create_time_end!=null and usertask_material_review_create_time_end!=''">
            AND TO_DAYS(usertask_material_review_create_time) &gt;=
            TO_DAYS(#{usertask_material_review_create_time_start})
            AND TO_DAYS(usertask_material_review_create_time) &lt;= TO_DAYS(#{usertask_material_review_create_time_end})
        </if>
        <if test="usertask_material_print_review_create_time_start!=null and usertask_material_print_review_create_time_start!='' and usertask_material_print_review_create_time_end!=null and usertask_material_print_review_create_time_end!=''">
            AND TO_DAYS(usertask_material_print_review_create_time) &gt;=
            TO_DAYS(#{usertask_material_print_review_create_time_start})
            AND TO_DAYS(usertask_material_print_review_create_time) &lt;=
            TO_DAYS(#{usertask_material_print_review_create_time_end})
        </if>
        <if test="usertask_install_gps_create_time_start!=null and usertask_install_gps_create_time_start!='' and usertask_install_gps_create_time_end!=null and usertask_install_gps_create_time_end!=''">
            AND TO_DAYS(usertask_install_gps_create_time) &gt;= TO_DAYS(#{usertask_install_gps_create_time_start})
            AND TO_DAYS(usertask_install_gps_create_time) &lt;= TO_DAYS(#{usertask_install_gps_create_time_end})
        </if>
        <if test="usertask_apply_license_plate_deposit_info_create_time_start!=null and usertask_apply_license_plate_deposit_info_create_time_start!='' and usertask_apply_license_plate_deposit_info_create_time_end!=null and usertask_apply_license_plate_deposit_info_create_time_end!=''">
            AND TO_DAYS(usertask_apply_license_plate_deposit_info_create_time) &gt;=
            TO_DAYS(#{usertask_apply_license_plate_deposit_info_create_time_start})
            AND TO_DAYS(usertask_apply_license_plate_deposit_info_create_time) &lt;=
            TO_DAYS(#{usertask_apply_license_plate_deposit_info_create_time_end})
        </if>
        <if test="usertask_car_insurance_create_time_start!=null and usertask_car_insurance_create_time_start!='' and usertask_car_insurance_create_time_end!=null and usertask_car_insurance_create_time_end!=''">
            AND TO_DAYS(usertask_car_insurance_create_time) &gt;= TO_DAYS(#{usertask_car_insurance_create_time_start})
            AND TO_DAYS(usertask_car_insurance_create_time) &lt;= TO_DAYS(#{usertask_car_insurance_create_time_end})
        </if>
        <if test="usertask_business_pay_create_time_start!=null and usertask_business_pay_create_time_start!='' and usertask_business_pay_create_time_end!=null and usertask_business_pay_create_time_end!=''">
            AND TO_DAYS(usertask_business_pay_create_time) &gt;= TO_DAYS(#{usertask_business_pay_create_time_start})
            AND TO_DAYS(usertask_business_pay_create_time) &lt;= TO_DAYS(#{usertask_business_pay_create_time_end})
        </if>
        <if test="usertask_business_review_create_time_start!=null and usertask_business_review_create_time_start!='' and usertask_business_review_create_time_end!=null and usertask_business_review_create_time_end!=''">
            AND TO_DAYS(usertask_business_review_create_time) &gt;=
            TO_DAYS(#{usertask_business_review_create_time_start})
            AND TO_DAYS(usertask_business_review_create_time) &lt;= TO_DAYS(#{usertask_business_review_create_time_end})
        </if>
        <if test="usertask_loan_review_create_time_start!=null and usertask_loan_review_create_time_start!='' and usertask_loan_review_create_time_end!=null and usertask_loan_review_create_time_end!=''">
            AND TO_DAYS(usertask_loan_review_create_time) &gt;= TO_DAYS(#{usertask_loan_review_create_time_start})
            AND TO_DAYS(usertask_loan_review_create_time) &lt;= TO_DAYS(#{usertask_loan_review_create_time_end})
        </if>
        <if test="usertask_remit_review_create_time_start!=null and usertask_remit_review_create_time_start!='' and usertask_remit_review_create_time_end!=null and usertask_remit_review_create_time_end!=''">
            AND TO_DAYS(usertask_remit_review_create_time) &gt;= TO_DAYS(#{usertask_remit_review_create_time_start})
            AND TO_DAYS(usertask_remit_review_create_time) &lt;= TO_DAYS(#{usertask_remit_review_create_time_end})
        </if>
        <if test="usertask_material_manage_create_time_start!=null and usertask_material_manage_create_time_start!='' and usertask_material_manage_create_time_end!=null and usertask_material_manage_create_time_end!=''">
            AND TO_DAYS(usertask_material_manage_create_time) &gt;=
            TO_DAYS(#{usertask_material_manage_create_time_start})
            AND TO_DAYS(usertask_material_manage_create_time) &lt;= TO_DAYS(#{usertask_material_manage_create_time_end})
        </if>
        <if test="usertask_bank_lend_record_create_time_start!=null and usertask_bank_lend_record_create_time_start!='' and usertask_bank_lend_record_create_time_end!=null and usertask_bank_lend_record_create_time_end!=''">
            AND TO_DAYS(usertask_bank_lend_record_create_time) &gt;=
            TO_DAYS(#{usertask_bank_lend_record_create_time_start})
            AND TO_DAYS(usertask_bank_lend_record_create_time) &lt;=
            TO_DAYS(#{usertask_bank_lend_record_create_time_end})
        </if>
        <if test="usertask_bank_card_send_create_time_start!=null and usertask_bank_card_send_create_time_start!='' and usertask_bank_card_send_create_time_end!=null and usertask_bank_card_send_create_time_end!=''">
            AND TO_DAYS(usertask_bank_card_send_create_time) &gt;= TO_DAYS(#{usertask_bank_card_send_create_time_start})
            AND TO_DAYS(usertask_bank_card_send_create_time) &lt;= TO_DAYS(#{usertask_bank_card_send_create_time_end})
        </if>
        <if test="express_receive_date_start!=null and express_receive_date_start!='' and express_receive_date_end!=null and express_receive_date_end!=''">
            AND TO_DAYS(flow.express_receive_date) &gt;= TO_DAYS(#{express_receive_date_start})
            AND TO_DAYS(flow.express_receive_date) &lt;= TO_DAYS(#{express_receive_date_end})
        </if>
    </select>
    <!--=======================================导出 EXCEL 财务垫款明细查询-财务打款单=========================================-->
    <select id="exportRemitDetailForRemitOrderQuerys"
            parameterType="com.yunche.loan.domain.param.ExportRemitDetailQueryVerifyParam"
            resultType="com.yunche.loan.domain.vo.ExportRemitDetailQueryForRemitOrderVO">

        SELECT
        base_area.area_name,
        customer. NAME AS customer_name,
        customer.id_card AS customer_id_card,
        customer.mobile AS customer_mobile,
        loaninfo.bank,
        partner. NAME AS partner_name,
        employee. NAME AS salesman_name,
        case when car.car_type = 0 then '新车'
        when car.car_type = 1 then '二手车'
        else '其他' end as car_type,
        loan_financial_plan.car_price AS price,
        loan_financial_plan.sign_rate,
        loan_financial_plan.loan_amount,
        loan_financial_plan.down_payment_money,
        loan_financial_plan.bank_period_principal,
        remit_details.remit_amount,

        remit_details.return_rate_amount AS remit_return_rate_amount,
        cost_details.service_fee,
        cost_details.performance_fee,
        cost_details.apply_license_plate_deposit_fee,
        cost_details.install_gps_fee,
        cost_details.risk_fee,
        cost_details.fair_assess_fee,
        cost_details.apply_license_plate_out_province_fee,
        cost_details.based_margin_fee,
        cost_details.rebate_not_deducted,
        cost_details.extra_fee,
        cost_details.other_fee,


        orders.gmt_create,
        (
        SELECT
        loan_process_log.create_time
        FROM
        loan_process_log
        WHERE
        order_id = orders.id
        AND task_definition_key = 'usertask_remit_review' and loan_process_log.action =1
        ORDER BY
        create_time DESC
        LIMIT 1
        ) as submitTime,
        (
        SELECT
        loan_process_log.create_time
        FROM
        loan_process_log
        WHERE
        order_id = orders.id
        AND task_definition_key = 'usertask_business_review' and loan_process_log.action =1
        ORDER BY
        create_time DESC
        LIMIT 1
        ) as businessReviewTime,
        (
        SELECT
        loan_process_log.user_name
        FROM
        loan_process_log
        WHERE
        order_id = orders.id
        AND task_definition_key = 'usertask_business_review' and loan_process_log.action =1
        ORDER BY
        create_time DESC
        LIMIT 1
        ) as businessReviewUsername,
        (
        SELECT
        loan_process_log.create_time
        FROM
        loan_process_log
        WHERE
        order_id = orders.id
        AND task_definition_key = 'usertask_loan_review' and loan_process_log.action =1
        ORDER BY
        create_time DESC
        LIMIT 1
        ) as loanReviewTime,
        (
        SELECT
        loan_process_log.user_name
        FROM
        loan_process_log
        WHERE
        order_id = orders.id
        AND task_definition_key = 'usertask_loan_review' and loan_process_log.action =1
        ORDER BY
        create_time DESC
        LIMIT 1
        ) as loanReviewUsername,
        (
        SELECT
        loan_process_log.create_time
        FROM
        loan_process_log
        WHERE
        order_id = orders.id
        AND task_definition_key = 'usertask_refund_apply_review' and loan_process_log.action =1
        ORDER BY
        create_time DESC
        LIMIT 1
        ) as refundTime,
        (
        SELECT
        loan_process_log.user_name
        FROM
        loan_process_log
        WHERE
        order_id = orders.id
        AND task_definition_key = 'usertask_remit_review' and loan_process_log.action =1
        ORDER BY
        create_time DESC
        LIMIT 1
        ) as username
        FROM
        loan_order orders
        LEFT JOIN loan_customer customer ON orders.loan_customer_id = customer.id
        LEFT JOIN loan_base_info loaninfo ON orders.loan_base_info_id = loaninfo.id
        LEFT JOIN base_area ON loaninfo.area_id = base_area.area_id
        LEFT JOIN loan_car_info car ON orders.loan_car_info_id = car.id
        LEFT JOIN car_detail cardetail ON cardetail.id = car.car_detail_id
        LEFT JOIN loan_financial_plan ON orders.loan_financial_plan_id = loan_financial_plan.id
        LEFT JOIN remit_details ON orders.remit_details_id = remit_details.id
        LEFT JOIN loan_process process ON orders.id = process.order_id
        LEFT JOIN loan_base_info base ON orders.loan_base_info_id = base.id
        LEFT JOIN employee employee ON base.salesman_id = employee.id
        LEFT JOIN partner partner ON partner.id = base.partner_id
        LEFT JOIN cost_details ON orders.cost_details_id = cost_details.id

        where 1=1
        and process.remit_review IN (1,21)
        and
        case when #{maxGroupLevel} = 0 then false
        when #{maxGroupLevel} = 1 then
        loaninfo.salesman_id in
        (
        <choose>
            <when test="juniorIds != null and juniorIds.size() > 0">
                <foreach item="item" index="index" collection="juniorIds" separator=",">
                    #{item}
                </foreach>
            </when>
            <otherwise>
                select temp.id from (SELECT 1 as id) temp where temp.id =2
            </otherwise>
        </choose>
        )
        else true end
        <if test="partnerList != null and partnerList.size() > 0">
            and
            base.partner_id in
            <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="bankList != null and bankList.size() > 0">
            and
            base.bank in
            <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="startRemitAmount !=null">
            and
            remit_details.remit_amount &gt;= #{startRemitAmount}
        </if>

        <if test="endRemitAmount !=null">
            AND remit_details.remit_amount &lt;= #{endRemitAmount}
        </if>

        having submitTime between #{startDate} and #{endDate}
        order by submitTime desc

    </select>
    <select id="exportApplyLoanPush" parameterType="com.yunche.loan.domain.param.ExportApplyLoanPushParam"
            resultType="com.yunche.loan.domain.vo.ExportApplyLoanPushVO">
        select
        process.id        AS bridgeProcessId,
        customer.name     AS customerName,
        customer.id_card  AS customerIdCard,
        car.car_detail_name  AS carDetailName,
        financial.car_price  AS carPrice,
        financial.down_payment_money   AS downPaymentMoney,
        remit.remit_amount             AS remitAmount,
        ''                             AS lendAmount,
        conf_third.loan_time           AS loanTime,
        conf_third.year_rate           AS interestRate,
        loan.id                        AS loanForm,
        base.bank                      AS bank,
        customer.mobile                AS tel,
        visit.debit_card               AS bankCard


        from
        (select * from loan_process_bridge where bridge_handle=2 and order_status = 1) process
        LEFT JOIN loan_order  loan ON process.order_id = loan.id
        LEFT JOIN conf_third_real_bridge_process  real_c ON real_c.bridge_process_id = process.id
        LEFT JOIN conf_third_party_money conf_third ON conf_third.id =real_c.conf_third_party_id
        LEFT JOIN loan_base_info base ON loan.loan_base_info_id=base.id
        LEFT JOIN loan_customer customer ON loan.loan_customer_id = customer.id
        LEFT JOIN loan_financial_plan financial ON financial.id = loan.loan_financial_plan_id
        LEFT JOIN remit_details remit  ON loan.remit_details_id =remit.id
        LEFT JOIN loan_car_info car ON loan.loan_car_info_id=car.id
        LEFT JOIN third_party_fund_business third_party ON third_party.bridge_procecss_id=process.id
        left join loan_home_visit visit on visit.id = loan.loan_home_visit_id
        where 	if((select count(*) from third_party_fund_business where bridge_procecss_id=process.id and lend_status in (3,4,5,6,7,8,9))=1,false,true)
    </select>


    <select id="exportErrorOrder" parameterType="com.yunche.loan.domain.param.ExportApplyLoanPushParam"
            resultType="com.yunche.loan.domain.vo.ExportErrorOrderVO">
        select
        customer.name     AS customerName,
        customer.id_card  AS customerIdCard,
        useGetCarName(car.car_detail_id)  AS carDetailName,
        financial.car_price  AS carPrice,
        financial.down_payment_money   AS downPaymentMoney,
        remit.remit_amount             AS remitAmount,
        financial.loan_time           AS loanTime,
        base.bank                      AS bank

        from
        (select * from loan_process_bridge where bridge_handle=2 and order_status =1) process
        LEFT JOIN loan_order  loan ON process.order_id = loan.id
        LEFT JOIN loan_base_info base ON loan.loan_base_info_id=base.id
        LEFT JOIN loan_customer customer ON loan.loan_customer_id = customer.id
        LEFT JOIN loan_financial_plan financial ON financial.id = loan.loan_financial_plan_id
        LEFT JOIN remit_details remit  ON loan.remit_details_id =remit.id
        LEFT JOIN loan_car_info car ON loan.loan_car_info_id=car.id
				LEFT JOIN third_party_fund_business third_party ON third_party.bridge_procecss_id=process.id
        where third_party.lend_status in (5,6,8,9)
    </select>

    <select id="exportJinTouHangRepayInfo" parameterType="com.yunche.loan.domain.param.ExportApplyLoanPushParam"
            resultType="com.yunche.loan.domain.vo.JinTouHangRepayInfoVO">
        select
            customer.`name`                                         AS name,
            customer.id_card                                        AS idCard,
            DATE_FORMAT(fund.lend_date , '%Y-%m-%d' )               AS lendDate,
            DATE_FORMAT(record.lend_date, '%Y-%m-%d' )              AS bankLendDate,
            DATE_FORMAT(fund.repay_date, '%Y-%m-%d' )               AS repayDate,
            datediff( DATE_FORMAT( fund.repay_date, '%Y-%m-%d' ), DATE_FORMAT( fund.lend_date, '%Y-%m-%d' ) ) AS differTime,
            fund.lend_amount                                        AS remitAmount,
            financial.bank_period_principal                         AS bankPeriodPrincipal,
            financial.bank_period_principal - remit.remit_amount    AS differMoney,

            CASE WHEN fund.repay_type  = 1 THEN '银行放款'
                 WHEN fund.repay_type = 2  THEN '客户退单'
            ELSE
                '银行拒贷'
            END                                                     AS repayType,

            fund.interest                                           AS interest,
            fund.poundage                                           AS poundage,
            fund.repay_remark                                       AS repayRemark
        from
        (select * from loan_process_bridge where bridge_repay_info=2) process
        LEFT JOIN loan_order loan ON process.order_id = loan.id
        LEFT JOIN loan_base_info base ON loan.loan_base_info_id=base.id
        LEFT JOIN third_party_fund_business fund ON (loan.id=fund.order_id and fund.bridge_procecss_id=process.id)
        LEFT JOIN loan_customer customer ON loan.loan_customer_id = customer.id
        LEFT JOIN loan_financial_plan financial ON financial.id = loan.loan_financial_plan_id
        LEFT JOIN remit_details remit ON loan.remit_details_id =remit.id
        left join bank_lend_record record on record.loan_order = loan.id
        where 1=1
        <if test="startRepayDate !=null">
            AND fund.repay_date &gt;= #{startRepayDate}
        </if>
        <if test="endRepayDate !=null">
            AND fund.repay_date &lt;= #{endRepayDate}
        </if>
    </select>

    <select id="exportJinTouHangInterestRegister" parameterType="com.yunche.loan.domain.param.ExportApplyLoanPushParam"
            resultType="com.yunche.loan.domain.vo.JinTouHangInterestRegisterVO">
        select
        fund.lend_date AS lendDate,
        fund.repay_date AS repayDate,
        remit.remit_amount AS remitAmount,
        customer.`name` AS name,
        customer.id_card AS idCard,
        financial.bank_period_principal AS bankPeriodPrincipal
        from
        (select * from loan_process_bridge where bridge_interest_record=2) process
        LEFT JOIN loan_order loan ON process.order_id = loan.id
        LEFT JOIN loan_base_info base ON loan.loan_base_info_id=base.id
        LEFT JOIN third_party_fund_business fund ON loan.id=fund.order_id
        LEFT JOIN loan_customer customer ON loan.loan_customer_id = customer.id
        LEFT JOIN loan_financial_plan financial ON financial.id = loan.loan_financial_plan_id
        LEFT JOIN remit_details remit ON loan.remit_details_id =remit.id
        where 1=1
        <if test="startRepayDate !=null">
            fund.repay_date &gt;= #{startRepayDate}
        </if>
        <if test="endRepayDate !=null">
            fund.repay_date &gt;= #{endRepayDate}
        </if>
        <if test="name !=null">
            customer.name =#{name}
        </if>
        <if test="startLendDate !=null">
            AND fund.lend_date &gt;= #{startLendDate}
        </if>
        <if test="endLendDate !=null">
            AND fund.lend_date &lt;= #{endLendDate}
        </if>
    </select>

    <!--=======================================导出 主贷客户信息查询=========================================-->
    <select id="exportCustomerInfo" parameterType="com.yunche.loan.domain.param.ExportCustomerInfoParam"
            resultType="com.yunche.loan.domain.vo.ExportCustomerInfoVO">
        SELECT
        pcustomer.id AS pCustomerId,
        pcustomer.`name` AS pName,
        pcustomer.name_pinyin AS pyName,
        CASE
        WHEN pcustomer.sex = 1 THEN
        '男'
        WHEN pcustomer.sex = 2 THEN
        '女'
        ELSE
        NULL END
        AS pSex,
        pcustomer.birth AS pBirth,
        pcustomer.id_card AS pIdCard,
        pcustomer.identity_validity AS pIdentityValidity,

        CASE
        WHEN pcustomer.marry = 0 THEN
        '未婚'
        WHEN pcustomer.marry = 1 THEN
        '已婚'
        ELSE
        NULL END
        AS pMarry,

        CASE
        WHEN pcustomer.education = 1 THEN
        '高中及以下'
        WHEN pcustomer.education = 2 THEN
        '专科'
        WHEN pcustomer.education = 3 THEN
        '本科'
        WHEN pcustomer.education = 4 THEN
        '硕士'
        WHEN pcustomer.education = 5 THEN
        '博士'
        ELSE
        NULL END
        AS pEducation,
        pcustomer.mobile AS pMobile,
        CONCAT_WS('',pcustomer.hprovince,pcustomer.hcity,pcustomer.hcounty,pcustomer.address)
        AS pAddress,
        pcustomer.mobile AS pHomeMobile,
        pcustomer.postcode AS pPostcode ,

        CASE
        WHEN pcustomer.house_feature = 1 THEN
        '自购商品房'
        WHEN pcustomer.house_feature = 2 THEN
        '分期付款购房'
        WHEN pcustomer.house_feature = 3 THEN
        '自建房'
        WHEN pcustomer.house_feature = 4 THEN
        '房改房'
        WHEN pcustomer.house_feature = 5 THEN
        '居住父母家'
        WHEN pcustomer.house_feature = 6 THEN
        '居住亲朋家'
        WHEN pcustomer.house_feature = 7 THEN
        '单位集体宿舍'
        WHEN pcustomer.house_feature = 8 THEN
        '租房'
        WHEN pcustomer.house_feature = 9 THEN
        '其他'
        ELSE
        NULL
        END AS pHouseFeature,
        pcustomer.income_certificate_company_name AS pIncomeCertificateCompanyName,
        CONCAT_WS('',pcustomer.cprovince,pcustomer.ccity,pcustomer.ccounty,pcustomer.income_certificate_company_address)
        AS pIncomeCertificateCompanyAddress,
        pcustomer.company_postcode AS pCompanyPostcode,
        pcustomer.company_phone AS pCompanyPhone,
        CASE
        WHEN pcustomer.company_nature = 1 THEN
        '政府机构'
        WHEN pcustomer.company_nature = 2 THEN
        '事业单位'
        WHEN pcustomer.company_nature = 3 THEN
        '国企'
        WHEN pcustomer.company_nature = 4 THEN
        '外资'
        WHEN pcustomer.company_nature = 5 THEN
        '合资'
        WHEN pcustomer.company_nature = 6 THEN
        '民营'
        WHEN pcustomer.company_nature = 7 THEN
        '私营'
        WHEN pcustomer.company_nature = 8 THEN
        '个体'
        WHEN pcustomer.company_nature = 9 THEN
        '其他'
        ELSE
        NULL END
        AS pCompanyNature,
        CASE
        WHEN pcustomer.industry_category = 1 THEN
        '计算机/互联网/通讯/电子'
        WHEN pcustomer.industry_category = 2 THEN
        '会计/金融/银行/保险'
        WHEN pcustomer.industry_category = 3 THEN
        '贸易/消费/制造/营运'
        WHEN pcustomer.industry_category = 4 THEN
        '制药/医疗'
        WHEN pcustomer.industry_category = 5 THEN
        '广告/媒体'
        WHEN pcustomer.industry_category = 6 THEN
        '房地产/建筑'
        WHEN pcustomer.industry_category = 7 THEN
        '专业服务/教育/培训'
        WHEN pcustomer.industry_category = 8 THEN
        '服务业'
        WHEN pcustomer.industry_category = 9 THEN
        '物流/运输'
        WHEN pcustomer.industry_category = 10 THEN
        '能源/原材料'
        WHEN pcustomer.industry_category = 11 THEN
        '政府/非盈利组织'
        WHEN pcustomer.industry_category = 12 THEN
        '其他'
        ELSE
        NULL END
        AS pIndustryCategory,
        CASE
        WHEN pcustomer.occupation = 1 THEN
        '公务员'
        WHEN pcustomer.occupation = 2 THEN
        '事业单位员工'
        WHEN pcustomer.occupation = 3 THEN
        '其他行业职员'
        WHEN pcustomer.occupation = 4 THEN
        '军人'
        WHEN pcustomer.occupation = 5 THEN
        '自由职业者'
        WHEN pcustomer.occupation = 6 THEN
        '工人'
        WHEN pcustomer.occupation = 7 THEN
        '农民'

        WHEN pcustomer.occupation = 10 THEN
        '邮电通讯行业职员'
        WHEN pcustomer.occupation = 11 THEN
        '房地产行业职员'
        WHEN pcustomer.occupation = 12 THEN
        '交通运输行业职员'
        WHEN pcustomer.occupation = 13 THEN
        '法律/司法行业职员'
        WHEN pcustomer.occupation = 14 THEN
        '文化/娱乐/体育行业职员'
        WHEN pcustomer.occupation = 15 THEN
        '媒介/广告行业职员'
        WHEN pcustomer.occupation = 16 THEN
        '科研/教育行业职员'
        WHEN pcustomer.occupation = 17 THEN
        '学生'
        WHEN pcustomer.occupation = 18 THEN
        '计算机/网络行业职员'
        WHEN pcustomer.occupation = 19 THEN
        '商业贸易行业职员'
        WHEN pcustomer.occupation = 20 THEN
        '银行/金融/证券/投资行业职员'
        WHEN pcustomer.occupation = 21 THEN
        '税务行业职员'
        WHEN pcustomer.occupation = 22 THEN
        '咨询行业职员'
        WHEN pcustomer.occupation = 23 THEN
        '社会服务行业职员'
        WHEN pcustomer.occupation = 24 THEN
        '旅游店行业职员'
        WHEN pcustomer.occupation = 25 THEN
        '健康/医疗服务行业职员'
        WHEN pcustomer.occupation = 26 THEN
        '管理人员'
        WHEN pcustomer.occupation = 27 THEN
        '技术人员'
        WHEN pcustomer.occupation = 28 THEN
        '文体明星'
        WHEN pcustomer.occupation = 29 THEN
        '无职业'
        WHEN pcustomer.occupation = 30 THEN
        '私人业主'
        WHEN pcustomer.occupation = 31 THEN
        '制造业职员'
        ELSE
        NULL END
        AS pOccupation,
        pcustomer.duty AS pDuty,
        pcustomer.month_income*12 AS pYearIncome,
        loan_financial_plan.down_payment_money AS pDownPaymentMoney,
        loan_financial_plan.loan_amount AS pLoanAmount,
        loan_financial_plan.loan_time AS pLoanTime,
        pcustomer.month_income AS pMonthIncome,

        CASE
        WHEN loan_car_info.vehicle_property = 1 THEN
        '国产'
        WHEN loan_car_info.vehicle_property = 2 THEN
        '进口'
        ELSE
        NULL END
        AS pVehicleProperty,
        loan_car_info.cooperation_dealer AS pCooperationDealer,
        car_brand.`name` AS brandName,
        car_model.`name` AS modelName,
        CASE
        WHEN loan_car_info.car_type =0 THEN vehicle_information.purchase_car_invoice_date
        WHEN loan_car_info.car_type =1 THEN vehicle_information.transfer_ownership_date
        ELSE NULL END AS purchaseDate,
        vehicle_information.license_plate_number AS licensePlateNumber,
        vehicle_information.vehicle_identification_number AS vehicleIdentificationNumber,
        vehicle_information.engine_number AS engineNumber,
        DATE_FORMAT((
        SELECT
        loan_process_log.create_time
        FROM
        loan_process_log
        WHERE
        order_id = principal_orders.id
        AND task_definition_key = 'usertask_material_print_review'
        ORDER BY
        id DESC
        LIMIT 1
        ), '%Y-%m-%d %H:%i:%S' )
         as materialPrintTime,
        (
        SELECT
        loan_process_log.user_name
        FROM
        loan_process_log
        WHERE
        order_id = principal_orders.id
        AND task_definition_key = 'usertask_material_print_review'
        ORDER BY
        id DESC
        LIMIT 1
        ) as materialPrintSubmitUser,
        CASE
        WHEN parea.parent_area_id = '' OR parea.parent_area_id = NULL THEN
        CONCAT(area.parent_area_name,area.area_name)
        ELSE
        CONCAT(parea.parent_area_name,area.area_name) END
        AS applyLicensePlateArea,
        ( SELECT loan_data_flow.express_receive_date FROM loan_data_flow WHERE principal_orders.id =
        loan_data_flow.order_id AND type = 4 ORDER BY id DESC LIMIT 1 ) AS express_receive_date


        FROM
        loan_order principal_orders
        LEFT JOIN loan_customer pcustomer ON principal_orders.loan_customer_id = pcustomer.id
        LEFT JOIN loan_financial_plan ON principal_orders.loan_financial_plan_id = loan_financial_plan.id
        LEFT JOIN loan_car_info ON principal_orders.loan_car_info_id = loan_car_info.id
        LEFT JOIN car_detail ON loan_car_info.car_detail_id = car_detail.id
        LEFT JOIN car_model ON car_detail.model_id = car_model.id
        LEFT JOIN car_brand ON car_model.brand_id = car_brand.id
        LEFT JOIN vehicle_information ON principal_orders.vehicle_information_id = vehicle_information.id
        LEFT JOIN loan_base_info ON principal_orders.loan_base_info_id = loan_base_info.id
        left join base_area area on vehicle_information.apply_license_plate_area = area.area_id
        LEFT JOIN base_area parea ON area.parent_area_id = parea.area_id
        <where>
            case when #{maxGroupLevel} = 0 then false
            when #{maxGroupLevel} = 1 then
            loan_base_info.salesman_id in
            (
            <choose>
                <when test="juniorIds != null and juniorIds.size() > 0">
                    <foreach item="item" index="index" collection="juniorIds" separator=",">
                        #{item}
                    </foreach>
                </when>
                <otherwise>
                    select temp.id from (SELECT 1 as id) temp where temp.id =2
                </otherwise>
            </choose>
            )
            else true end
            <if test="partnerList != null and partnerList.size() > 0">
                and
                loan_base_info.partner_id in
                <foreach item="item" index="index" collection="partnerList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="bankList != null and bankList.size() > 0">
                and
                loan_base_info.bank in
                <foreach item="item" index="index" collection="bankList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="pname !=null and pname !=''">
                AND pcustomer.`name` = #{pname}
            </if>
            <if test="startTime !=null and endTime !=null and startTime !='' and endTime !=''">
                having express_receive_date between #{startTime} and #{endTime}
                <if test="materialPrintStartTime !=null and materialPrintEndTime !=null and materialPrintStartTime !='' and materialPrintEndTime !=''">
                    and materialPrintTime between #{materialPrintStartTime} and #{materialPrintEndTime}
                </if>
                <if test="materialPrintSubmitUser !=null">
                    and materialPrintSubmitUser like CONCAT('%', #{materialPrintSubmitUser} ,'%')
                </if>
            </if>

            <if test="startTime ==null or endTime ==null or startTime =='' or endTime ==''">
                <if test="materialPrintStartTime !=null and materialPrintEndTime !=null and materialPrintStartTime !='' and materialPrintEndTime !=''">
                    having materialPrintTime between #{materialPrintStartTime} and #{materialPrintEndTime}
                    <if test="materialPrintSubmitUser !=null and materialPrintSubmitUser != ''">
                        and materialPrintSubmitUser = #{materialPrintSubmitUser}
                    </if>
                </if>
            </if>

            <if test="startTime ==null or endTime ==null or startTime =='' or endTime ==''">
                <if test="materialPrintStartTime ==null or materialPrintEndTime ==null or materialPrintStartTime =='' or materialPrintEndTime ==''">
                    <if test="materialPrintSubmitUser !=null and materialPrintSubmitUser != ''">
                        having materialPrintSubmitUser = #{materialPrintSubmitUser}
                    </if>
                </if>
            </if>

        </where>
    </select>


    <select id="usertaskMaterialPrintUsers" resultType="String">
        SELECT
        distinct
        loan_process_log.user_name
        FROM
        loan_process_log
        WHERE
        action = 1
        AND task_definition_key = 'usertask_material_print_review'
        ORDER BY
        id DESC
    </select>

    <select id="exportFamilyLinkManList" parameterType="long" resultType="com.yunche.loan.domain.vo.FamilyLinkManVO">

        SELECT
        name AS familyLinkManName,

        CASE
        WHEN cust_relation = 0 THEN
        '本人'
        WHEN cust_relation = 1 THEN
        '配偶'
        WHEN cust_relation = 2 THEN
        '父母'
        WHEN cust_relation = 3 THEN
        '子女'
        WHEN cust_relation = 4 THEN
        '兄弟姐妹'
        WHEN cust_relation = 5 THEN
        '亲戚'
        WHEN cust_relation = 6 THEN
        '朋友'
        WHEN cust_relation = 7 THEN
        '同学'
        WHEN cust_relation = 8 THEN
        '同事'
        WHEN cust_relation = 9 THEN
        '其他'
        ELSE
        NULL
        END AS familyLinkManRelationship,
        mobile AS familyLinkManMobile
        FROM
        loan_customer
        WHERE principal_cust_id = #{pCustomerId} AND cust_type = 4
    </select>

    <select id="exportGuarantorLinkManList" parameterType="long"
            resultType="com.yunche.loan.domain.vo.GuarantorLinkManVO">
        SELECT
        name AS linkManName,
        id_card AS linkManIdCard,

        CASE
         WHEN sex = 1 THEN
        '男'
         WHEN sex = 2 THEN
        '女'
         ELSE
         NULL END
         AS linkManSex,
        identity_validity AS linkManIdentityValidity,

           CASE
        WHEN cust_relation = 0 THEN
        '本人'
        WHEN cust_relation = 1 THEN
        '配偶'
        WHEN cust_relation = 2 THEN
        '父母'
        WHEN cust_relation = 3 THEN
        '子女'
        WHEN cust_relation = 4 THEN
        '兄弟姐妹'
        WHEN cust_relation = 5 THEN
        '亲戚'
        WHEN cust_relation = 6 THEN
        '朋友'
        WHEN cust_relation = 7 THEN
        '同学'
        WHEN cust_relation = 8 THEN
        '同事'
        WHEN cust_relation = 9 THEN
        '其他'
        ELSE
        NULL
        END AS linkManREapplyPerson,
        month_income*12 AS linkManYearIncome,
         CONCAT_WS('',hprovince,hcity,hcounty,address)
         AS linkManAddress,
        income_certificate_company_name AS linkManIncomeCertificateCompanyName,
         CONCAT_WS('',cprovince,ccity,ccounty,income_certificate_company_address)
        AS linkManIncomeCertificateCompanyAddress,
        mobile AS linkManMobile
        FROM
        loan_customer
        WHERE principal_cust_id = #{pCustomerId} AND (cust_type = 2  OR   (guarantee_type = 2 AND cust_type = 3 ))

    </select>


    <select id="selectCreditPicExport" parameterType="com.yunche.loan.domain.query.LoanCreditExportQuery"
            resultType="com.yunche.loan.domain.vo.CreditPicExportVO">
        SELECT
        result.order_id AS orderId,
        result.id AS loanCustomerId,
        result.name AS customerName,
        result.employee_id AS employeeId,
        result.bank_credit_employee_id AS bankCreditEmployeeId,
        result.id_card AS idCard
        FROM
        (
        SELECT
        process.order_id,
        customer.id,
        customer.`name`,
        customer.credit_exp_flag,
        customer.id_card,
        process.credit_apply,
        process.bank_credit_record,
        ( SELECT create_time FROM loan_process_log log WHERE log.task_definition_key = 'usertask_credit_apply' AND
        order_id = process.order_id ORDER BY create_time DESC LIMIT 1 ) AS credit_apply_time,
        ( SELECT create_time FROM loan_process_log log WHERE log.task_definition_key = 'usertask_bank_credit_record' AND
        order_id = process.order_id ORDER BY create_time DESC LIMIT 1 ) AS bank_credit_time,
        ( SELECT user_id FROM loan_process_log log WHERE log.task_definition_key = 'usertask_credit_apply' AND order_id
        = process.order_id ORDER BY create_time DESC LIMIT 1 ) AS employee_id,
        ( SELECT user_id FROM loan_process_log log WHERE log.task_definition_key = 'usertask_bank_credit_record' AND
        order_id = process.order_id ORDER BY create_time DESC LIMIT 1 ) AS bank_credit_employee_id
        FROM
        loan_process process
        LEFT JOIN loan_order loan ON process.order_id = loan.id
        LEFT JOIN loan_base_info base ON base.id=loan.loan_base_info_id
        LEFT JOIN loan_customer customer ON ( loan.loan_customer_id = customer.principal_cust_id AND customer.cust_type
        != 4 )
        WHERE
        base.bank = #{bankName}
        ) result
        WHERE
        1=1
        <if test="creditApplyStartTime != null">
            AND result.credit_apply_time &gt;= #{creditApplyStartTime}
        </if>
        <if test="creditApplyEndTime != null">
            AND result.credit_apply_time &lt;= #{creditApplyEndTime}
        </if>
        <if test="creditQueryStartTime !=null">
            AND result.bank_credit_time &gt;= #{creditQueryStartTime}
        </if>
        <if test="creditQueryEndTime !=null">
            AND result.bank_credit_time &lt;= #{creditQueryEndTime}
        </if>
        <if test="employeeId !=null">
            AND CASE WHEN #{creditStatus} = 3 THEN result.bank_credit_employee_id =#{employeeId}
            ELSE result.employee_id =#{employeeId}
            END
        </if>
        <if test="creditStatus !=null">
            AND CASE WHEN #{creditStatus} = 1 THEN result.credit_exp_flag =1
            WHEN #{creditStatus} = 2 THEN result.credit_exp_flag =2
            WHEN #{creditStatus} = 3 THEN result.bank_credit_time IS NOT NULL
            END
        </if>

    </select>

    <select id="selectMaxLevelByOrderId" parameterType="java.lang.Long" resultType="java.lang.String">
        SELECT
					max( g.telephone_verify_level )
				FROM
					employee_rela_user_group ug
					LEFT JOIN user_group g ON ug.user_group_id = g.id
				WHERE
					ug.employee_id = ( SELECT user_id FROM loan_process_log WHERE task_definition_key = 'usertask_telephone_verify' AND order_id = #{orderId} ORDER BY create_time DESC LIMIT 1 )

    </select>

</mapper>