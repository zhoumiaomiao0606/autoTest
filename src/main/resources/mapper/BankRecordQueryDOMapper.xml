<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunche.loan.mapper.BankRecordQueryDOMapper" >

    <resultMap id="BaseResultMap" type="com.yunche.loan.domain.entity.BankFileListRecordDO">
        <id column="bank_file_list_id" jdbcType="BIGINT" property="bankFileListId" />
        <result column="customer_id" jdbcType="BIGINT" property="customerId" />
        <result column="order_id" jdbcType="BIGINT" property="orderId" />
        <result column="area_id" jdbcType="VARCHAR" property="areaId" />
        <result column="plat_no" jdbcType="VARCHAR" property="platNo" />
        <result column="guaranty_unit" jdbcType="VARCHAR" property="guarantyUnit" />
        <result column="opencard_date" jdbcType="TIMESTAMP" property="opencardDate" />
        <result column="card_number" jdbcType="VARCHAR" property="cardNumber" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="card_type" jdbcType="VARCHAR" property="cardType" />
        <result column="credential_no" jdbcType="VARCHAR" property="credentialNo" />
        <result column="hairpin_flag" jdbcType="VARCHAR" property="hairpinFlag" />
        <result column="account_statement" jdbcType="VARCHAR" property="accountStatement" />
        <result column="repay_date" jdbcType="VARCHAR" property="repayDate" />
        <result column="gmt_greate" jdbcType="TIMESTAMP" property="gmtGreate" />
        <result column="status" jdbcType="TINYINT" property="status" />
        <result column="card_balance" jdbcType="DECIMAL" property="cardBalance" />
        <result column="optimal_return" jdbcType="DECIMAL" property="optimalReturn" />
        <result column="cumulative_breach_number" jdbcType="INTEGER" property="cumulativeBreachNumber" />
        <result column="consecutive_breach_number" jdbcType="INTEGER" property="consecutiveBreachNumber" />
        <result column="run_bank" jdbcType="VARCHAR" property="runBank" />
        <result column="instalment_types" jdbcType="VARCHAR" property="instalmentTypes" />
        <result column="instalment_amount" jdbcType="DECIMAL" property="instalmentAmount" />
        <result column="sum_number" jdbcType="INTEGER" property="sumNumber" />
        <result column="sum_amount" jdbcType="DECIMAL" property="sumAmount" />
        <result column="reminders" jdbcType="VARCHAR" property="reminders" />
        <result column="is_customer" jdbcType="TINYINT" property="isCustomer" />
        <result column="batch_date" jdbcType="TIMESTAMP" property="batchDate" />
    </resultMap>

    <sql id="Base_Column_List">
        bank_file_list_id, customer_id, order_id, area_id, plat_no, guaranty_unit, opencard_date,
        card_number, name, card_type, credential_no, hairpin_flag, account_statement, repay_date,
        gmt_greate, status, card_balance, optimal_return, cumulative_breach_number, consecutive_breach_number,
        run_bank, instalment_types, instalment_amount, sum_number, sum_amount, reminders,
        is_customer, batch_date
    </sql>

    <select id="selectByIdCardOrRepayCard" resultType="com.yunche.loan.domain.param.BankRepayParam">
        SELECT
        a.id AS orderId,
        c.id_card AS idCard,
        d.repay_card_id AS repayCard
        FROM
        loan_order a
        LEFT JOIN bank_card_record d ON a.id= d.order_id
        LEFT JOIN loan_customer c ON a.loan_customer_id = c.id
        WHERE
            1=1
        <if test="idCard != null ">
            AND c.id_card =#{idCard}
        </if>
        <if test="repayCard != null">
            AND d.repay_card_id =#{repayCard}
        </if>


    </select>

    <select id="selectRepayPlanListByOrderId" resultType="com.yunche.loan.domain.entity.LoanRepayPlanDO">
        select
            order_id        AS orderId,
            repay_date      AS repayDate,
            payable_amount  AS payableAmount,
            is_overdue      AS isOverdue,
            overdue_amount  AS overdueAmount,
            check_date      AS checkDate,
            status          AS status
        from
            loan_repay_plan
        where order_id=#{orderId}
    </select>

    <select id="selectOverdueRepayPlanList" resultType="com.yunche.loan.domain.entity.LoanRepayPlanDO">

        SELECT
            order_id        AS orderId,
            repay_date      AS repayDate,
            payable_amount  AS payableAmount,
            is_overdue      AS isOverdue,
            overdue_amount  AS overdueAmount,
            check_date      AS checkDate,
            status          AS status,
            nper            AS nper
        FROM
            loan_repay_plan
        WHERE
            order_id = #{orderId}
            AND TO_DAYS(repay_date) &lt;= TO_DAYS(#{batchDate})
            ORDER BY
            repay_date DESC
        <if test="overdueTimes !=null">
            LIMIT #{overdueTimes}
        </if>


    </select>

    <select id="selectBankImpRecord" resultType="com.yunche.loan.domain.entity.BankFileListDO">
        select
            id,
            file_name AS fileName,
            gmt_create AS gmtCreate,
            operator   AS operator,
            file_type  AS fileType
        from
            bank_file_list
        where
            file_type=#{fileType}
        <if test="fileName != null and fileName != '' ">
            AND file_name LIKE CONCAT('%',#{fileName},'%')
        </if>
        <if test="startDate != null">
            AND TO_DAYS(gmt_create) &gt;= TO_DAYS(#{startDate})
        </if>
        <if test="endDate != null">
            AND TO_DAYS(gmt_create) &lt;= TO_DAYS(#{endDate})
        </if>
        ORDER BY
            id DESC
    </select>
    <select id="selectBankRecordDetail" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from
            bank_file_list_record
        where
            bank_file_list_id=#{listId}
            <if test="userName != null and userName != '' ">
                AND name LIKE CONCAT('%',#{userName},'%')
            </if>
            <if test="idCard != null">
                AND credential_no=#{idCard}
            </if>
            <if test="isCustomer !=null">
                AND is_customer=#{isCustomer}
            </if>
    </select>

    <select id="selectRepayPlanByNper" resultType="com.yunche.loan.domain.entity.LoanRepayPlanDO">

        SELECT
            order_id             AS orderId,
            repay_date           AS repayDate,
            payable_amount       AS payableAmount,
            actual_repay_amount  AS actualRepayAmount,
            is_overdue           AS isOverdue,
            overdue_amount       AS overdueAmount,
            check_date           AS checkDate,
            `status`,
            nper
        FROM
            loan_repay_plan
        WHERE
            order_id = #{orderId}
            AND nper = #{nper}


    </select>
    
    <select id="insuranceUrgeList" resultType="com.yunche.loan.domain.vo.InsuranceUrgeVO">
        SELECT
                loan.id                           AS orderId,
                partner.`name`                    AS partnerName,
                customer.`name`,
                customer.id_card                  AS idCard,
                customer.mobile                   AS mobile,
                base.bank,
                employee.`name`                   AS employeeName,
                financial.car_price               AS carPrice,
                i.insurance_year               AS insuranceYear,
                r2.insurance_type          AS insuranceType,
                r2.start_date              AS startDate,
                r2.end_date                AS endDate,
                datediff(r1.end_date,now()) AS days,
                r1.start_date AS businessStartDate,
                r1.end_date AS businessEndDate
        FROM
                (select * from loan_order where id=#{orderId}) loan
                 LEFT JOIN
        (SELECT id,order_id,insurance_year FROM
        (
        SELECT * FROM insurance_info order by order_id,insurance_year DESC limit 10000000000
        ) t GROUP BY t.order_id
        ) i ON i.order_id = loan.id
        LEFT JOIN insurance_relevance r1 ON i.id = r1.insurance_info_id and r1.insurance_type = 1
        LEFT JOIN insurance_relevance r2 ON i.id = r2.insurance_info_id and r2.insurance_type = 2
                LEFT JOIN loan_customer customer ON loan.loan_customer_id=customer.id
                LEFT JOIN loan_base_info base ON loan.loan_base_info_id=base.id
                LEFT JOIN employee ON base.salesman_id=employee.id
                LEFT JOIN partner ON base.partner_id=partner.id
                LEFT JOIN loan_financial_plan financial ON loan.loan_financial_plan_id=financial.id
        where datediff(r1.end_date,now())&lt;=31
    </select>

    <select id="selectInsuranceUrgeTaskList" resultType="com.yunche.loan.domain.vo.InsuranceUrgeVO" parameterType="com.yunche.loan.domain.query.InsuranceListQuery">
        SELECT
                loan.id                                     AS orderId,
                partner.`name`                              AS partnerName,
                customer.`name`,
                customer.id_card                            AS idCard,
                customer.mobile                             AS mobile,
                base.bank,
                employee.`name`                             AS employeeName,
                employee.id                                 AS employeeId,
                financial.car_price                         AS carPrice,
                i.insurance_year                         AS insuranceYear,
                r2.insurance_type                    AS insuranceType,
                r2.start_date                        AS startDate,
                r2.end_date                          AS endDate,
                datediff(r1.end_date,now()) AS days,
                r1.start_date  AS businessStartDate,
                r1.end_date AS businessEndDate,
                case when
                    (select renew_insurance_status from renew_insurance where loan.id=order_id order by remind_date desc LIMIT 1) is null
                then
                    0
                else
                    (select renew_insurance_status from renew_insurance where loan.id=order_id order by remind_date desc LIMIT 1)
                end                                          AS renewInsuranceStatus

        FROM
            <choose>
                <when test="taskDefinitionKey=='usertask_urge_insurance_assign_work_bench'">
                    (select * from loan_order where 1=1
                    <if test="taskStatus == 1">
                        and id not in(select order_id from insurance_distribute_record)
                    </if>
                    <if test="taskStatus == 2">
                        and id in(select order_id from insurance_distribute_record)
                    </if>
                    ) loan
                </when>
                <when test="taskDefinitionKey=='usertask_urge_insurance_work_bench'">
                    (select * from loan_order where id in(select order_id from insurance_distribute_record where 1=1
                        <if test="employeeId!=1">
                            and employee_id=#{employeeId}
                        </if>
                        <if test="taskStatus!=0">
                            and status=#{taskStatus}
                        </if>
                    )
                    ) loan
                </when>
            </choose>
                (SELECT id,order_id,insurance_year FROM
        (
        SELECT * FROM insurance_info order by order_id,insurance_year DESC limit 10000000000
        ) t GROUP BY t.order_id
        ) i ON i.order_id = loan.id
        LEFT JOIN insurance_relevance r1 ON i.id = r1.insurance_info_id and r1.insurance_type = 1
        LEFT JOIN insurance_relevance r2 ON i.id = r2.insurance_info_id and r2.insurance_type = 2
                LEFT JOIN loan_customer customer ON loan.loan_customer_id=customer.id
                LEFT JOIN loan_base_info base ON loan.loan_base_info_id=base.id
                LEFT JOIN employee ON base.salesman_id=employee.id
                LEFT JOIN partner ON base.partner_id=partner.id
                LEFT JOIN loan_financial_plan financial ON loan.loan_financial_plan_id=financial.id
        where datediff(r1.end_date,now())&lt;=31
        <if test="customerName != null and  customerName !=''">
            and customer.name like concat(concat('%',#{customerName}),'%')
        </if>
        <if test="bankName != null and  bankName !=''">
            and base.bank = #{bankName}
        </if>
        <if test="partnerName != null and  partnerName !=''">
            and partner.id =#{partnerName}
        </if>
        <if test="cIFromTime !=null and cIToTime !=null and cIFromTime !='' and cIToTime !=''">
            and r1.end_date &gt;= #{cIFromTime} and  r1.end_date &lt;= #{cIToTime}
        </if>
        <if test="cTALIFromTime !=null and cTALIToTime !=null and cTALIFromTime !='' and cTALIToTime !=''">
            and r2.end_date &gt;= #{cTALIFromTime} and  r2.end_date &lt;= #{cTALIToTime}
        </if>
    </select>

</mapper>